v8-version,11,3,244,8,-node.25,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff73fc80000,0x7ff7441ea000,0
shared-library,C:\\Windows\\SYSTEM32\\ntdll.dll,0x7fff1c0d0000,0x7fff1c2c6000,0
shared-library,C:\\Windows\\System32\\KERNEL32.DLL,0x7fff1ad40000,0x7fff1adfd000,0
shared-library,C:\\Windows\\System32\\KERNELBASE.dll,0x7fff19960000,0x7fff19c28000,0
shared-library,C:\\Windows\\System32\\WS2_32.dll,0x7fff1b040000,0x7fff1b0ab000,0
shared-library,C:\\Windows\\System32\\RPCRT4.dll,0x7fff1a6c0000,0x7fff1a7e4000,0
shared-library,C:\\Windows\\System32\\ole32.dll,0x7fff1a310000,0x7fff1a43a000,0
shared-library,C:\\Windows\\System32\\ucrtbase.dll,0x7fff19fc0000,0x7fff1a0c0000,0
shared-library,C:\\Windows\\System32\\combase.dll,0x7fff1bd60000,0x7fff1c0b5000,0
shared-library,C:\\Windows\\System32\\GDI32.dll,0x7fff1b530000,0x7fff1b55a000,0
shared-library,C:\\Windows\\System32\\win32u.dll,0x7fff19f10000,0x7fff19f32000,0
shared-library,C:\\Windows\\System32\\gdi32full.dll,0x7fff19850000,0x7fff19959000,0
shared-library,C:\\Windows\\SYSTEM32\\dbghelp.dll,0x7fff0a800000,0x7fff0a9e4000,0
shared-library,C:\\Windows\\System32\\msvcp_win.dll,0x7fff19dc0000,0x7fff19e5d000,0
shared-library,C:\\Windows\\System32\\USER32.dll,0x7fff1a170000,0x7fff1a310000,0
shared-library,C:\\Windows\\System32\\PSAPI.DLL,0x7fff1b0b0000,0x7fff1b0b8000,0
shared-library,C:\\Windows\\System32\\SHELL32.dll,0x7fff1b610000,0x7fff1bd51000,0
shared-library,C:\\Windows\\System32\\ADVAPI32.dll,0x7fff1b0c0000,0x7fff1b16c000,0
shared-library,C:\\Windows\\System32\\msvcrt.dll,0x7fff1af20000,0x7fff1afbe000,0
shared-library,C:\\Windows\\System32\\sechost.dll,0x7fff1a620000,0x7fff1a6bb000,0
shared-library,C:\\Windows\\SYSTEM32\\IPHLPAPI.DLL,0x7fff18ce0000,0x7fff18d1b000,0
shared-library,C:\\Windows\\SYSTEM32\\USERENV.dll,0x7fff19740000,0x7fff1976e000,0
shared-library,C:\\Windows\\System32\\CRYPT32.dll,0x7fff19c60000,0x7fff19dbd000,0
shared-library,C:\\Windows\\System32\\bcrypt.dll,0x7fff19c30000,0x7fff19c57000,0
shared-library,C:\\Windows\\SYSTEM32\\WINMM.dll,0x7fff03350000,0x7fff03377000,0
shared-library,C:\\Windows\\SYSTEM32\\dbgcore.DLL,0x7fff032b0000,0x7fff032dc000,0
shared-library,C:\\Windows\\SYSTEM32\\CRYPTBASE.DLL,0x7fff19230000,0x7fff1923c000,0
shared-library,C:\\Windows\\System32\\IMM32.DLL,0x7fff1a7f0000,0x7fff1a820000,0
shared-library,C:\\Windows\\SYSTEM32\\powrprof.dll,0x7fff18e50000,0x7fff18e9b000,0
shared-library,C:\\Windows\\SYSTEM32\\UMPDC.dll,0x7fff18cc0000,0x7fff18cd2000,0
shared-library,C:\\Windows\\system32\\uxtheme.dll,0x7fff17210000,0x7fff172ae000,0
shared-library,C:\\Windows\\system32\\mswsock.dll,0x7fff19040000,0x7fff190aa000,0
shared-library,C:\\Windows\\System32\\bcryptprimitives.dll,0x7fff19f40000,0x7fff19fbf000,0
shared-library,C:\\Windows\\SYSTEM32\\kernel.appcore.dll,0x7fff177a0000,0x7fff177b2000,0
shared-library-end
tick,0x7fff19987ef0,106754,0,0x0,6
profiler,begin,1000
new,CodeRange,0x7ff6c0b00000,0
new,MemoryChunk,0x1528af80000,262144
new,MemoryChunk,0x2c7b86c0000,262144
new,MemoryChunk,0x3254580000,262144
new,MemoryChunk,0xd4f9c0000,262144
new,MemoryChunk,0x32bd4e40000,262144
heap-capacity,1030880
heap-available,4346312128
new,MemoryChunk,0x2b983100000,262144
new,MemoryChunk,0x10cc9a00000,270336
new,MemoryChunk,0x3a6c8f80000,262144
new,MemoryChunk,0x34376140000,262144
new,MemoryChunk,0x2daef2c0000,262144
code-creation,Builtin,2,119376,0x7ff740981d54,776,DeoptimizationEntry_Eager
code-creation,Builtin,2,119422,0x7ff740982094,780,DeoptimizationEntry_Lazy
code-creation,Builtin,2,119431,0x7ff7409823d4,2736,RecordWriteSaveFP
code-creation,Builtin,2,119443,0x7ff740982e94,1196,RecordWriteIgnoreFP
code-creation,Builtin,2,119452,0x7ff740983354,344,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,119460,0x7ff7409834d4,124,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,119468,0x7ff740983554,64,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,119476,0x7ff7409835d4,288,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,119485,0x7ff740983714,336,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,119495,0x7ff740983894,372,CallFunction_ReceiverIsAny
code-creation,Builtin,2,119578,0x7ff740983a14,100,CallBoundFunction
code-creation,Builtin,2,119593,0x7ff740983a94,848,CallWrappedFunction
code-creation,Builtin,2,119601,0x7ff740983e14,168,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,119609,0x7ff740983ed4,168,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,119618,0x7ff740983f94,168,Call_ReceiverIsAny
code-creation,Builtin,2,119626,0x7ff740984054,980,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,119640,0x7ff740984454,972,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,119654,0x7ff740984854,1048,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,119671,0x7ff740984c94,1040,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,119686,0x7ff7409850d4,1048,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,119701,0x7ff740985514,1040,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,119715,0x7ff740985954,928,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,119724,0x7ff740985d14,928,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,119735,0x7ff7409860d4,928,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,119748,0x7ff740986494,732,CallProxy
code-creation,Builtin,2,119761,0x7ff740986794,152,CallVarargs
code-creation,Builtin,2,119775,0x7ff740986854,940,CallWithSpread
code-creation,Builtin,2,119787,0x7ff740986c14,1956,CallWithSpread_Baseline
code-creation,Builtin,2,119802,0x7ff7409873d4,1908,CallWithSpread_WithFeedback
code-creation,Builtin,2,119816,0x7ff740987b54,892,CallWithArrayLike
code-creation,Builtin,2,119830,0x7ff740987ed4,1836,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,119841,0x7ff740988614,156,CallForwardVarargs
code-creation,Builtin,2,119849,0x7ff7409886d4,156,CallFunctionForwardVarargs
code-creation,Builtin,2,119857,0x7ff740988794,128,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,119867,0x7ff740988854,232,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,119876,0x7ff740988954,320,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,119885,0x7ff740988ad4,32,ConstructFunction
code-creation,Builtin,2,119893,0x7ff740988b14,100,ConstructBoundFunction
code-creation,Builtin,2,119902,0x7ff740988b94,28,ConstructedNonConstructable
code-creation,Builtin,2,119910,0x7ff740988bd4,100,Construct
code-creation,Builtin,2,119918,0x7ff740988c54,152,ConstructVarargs
code-creation,Builtin,2,119925,0x7ff740988d14,968,ConstructWithSpread
code-creation,Builtin,2,119933,0x7ff740989114,1772,ConstructWithSpread_Baseline
code-creation,Builtin,2,119942,0x7ff740989814,1748,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,119950,0x7ff740989f14,952,ConstructWithArrayLike
code-creation,Builtin,2,119958,0x7ff74098a2d4,1696,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,119967,0x7ff74098a994,196,ConstructForwardVarargs
code-creation,Builtin,2,119975,0x7ff74098aa94,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,119984,0x7ff74098ab94,788,Construct_Baseline
code-creation,Builtin,2,119992,0x7ff74098aed4,808,Construct_WithFeedback
code-creation,Builtin,2,120000,0x7ff74098b214,444,JSConstructStubGeneric
code-creation,Builtin,2,120009,0x7ff74098b3d4,340,JSBuiltinsConstructStub
code-creation,Builtin,2,120017,0x7ff74098b554,772,FastNewObject
code-creation,Builtin,2,120024,0x7ff74098b894,312,FastNewClosure
code-creation,Builtin,2,120032,0x7ff74098b9d4,764,ConstructProxy
code-creation,Builtin,2,120041,0x7ff74098bcd4,360,JSEntry
code-creation,Builtin,2,120048,0x7ff74098be54,360,JSConstructEntry
code-creation,Builtin,2,120056,0x7ff74098bfd4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,120064,0x7ff74098c154,100,JSEntryTrampoline
code-creation,Builtin,2,120073,0x7ff74098c1d4,100,JSConstructEntryTrampoline
code-creation,Builtin,2,120081,0x7ff74098c254,256,ResumeGeneratorTrampoline
code-creation,Builtin,2,120089,0x7ff74098c394,1268,StringFromCodePointAt
code-creation,Builtin,2,120098,0x7ff74098c894,708,StringEqual
code-creation,Builtin,2,120175,0x7ff74098cb94,328,StringGreaterThan
code-creation,Builtin,2,120192,0x7ff74098cd14,328,StringGreaterThanOrEqual
code-creation,Builtin,2,120200,0x7ff74098ce94,328,StringLessThan
code-creation,Builtin,2,120208,0x7ff74098d014,328,StringLessThanOrEqual
code-creation,Builtin,2,120216,0x7ff74098d194,328,StringCompare
code-creation,Builtin,2,120224,0x7ff74098d314,2392,StringSubstring
code-creation,Builtin,2,120232,0x7ff74098dc94,80,OrderedHashTableHealIndex
code-creation,Builtin,2,120241,0x7ff74098dd14,876,InterpreterEntryTrampoline
code-creation,Builtin,2,120249,0x7ff74098e094,888,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,120259,0x7ff74098e414,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,120268,0x7ff74098e494,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,120277,0x7ff74098e514,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,120286,0x7ff74098e594,84,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,120295,0x7ff74098e614,84,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,120305,0x7ff74098e694,88,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,120315,0x7ff74098e714,80,InterpreterEnterAtBytecode
code-creation,Builtin,2,120326,0x7ff74098e794,216,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,120335,0x7ff74098e894,96,InterpreterOnStackReplacement
code-creation,Builtin,2,120343,0x7ff74098e914,388,BaselineOutOfLinePrologue
code-creation,Builtin,2,120352,0x7ff74098ead4,16,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,120360,0x7ff74098eb14,100,BaselineOnStackReplacement
code-creation,Builtin,2,120370,0x7ff74098eb94,84,BaselineLeaveFrame
code-creation,Builtin,2,120378,0x7ff74098ec14,212,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,120387,0x7ff74098ed14,220,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,120398,0x7ff74098ee14,184,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,120423,0x7ff74098eed4,36,MaglevOnStackReplacement
code-creation,Builtin,2,120440,0x7ff74098ef14,864,CompileLazy
code-creation,Builtin,2,120476,0x7ff74098f294,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,120492,0x7ff74098f314,224,InstantiateAsmJs
code-creation,Builtin,2,120512,0x7ff74098f414,32,NotifyDeoptimized
code-creation,Builtin,2,120521,0x7ff74098f454,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,120533,0x7ff74098f494,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,120548,0x7ff74098f4d4,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,120556,0x7ff74098f514,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,120565,0x7ff74098f594,264,CallApiCallback
code-creation,Builtin,2,120578,0x7ff74098f6d4,244,CallApiGetter
code-creation,Builtin,2,120585,0x7ff74098f7d4,12,HandleApiCall
code-creation,Builtin,2,120593,0x7ff74098f814,12,HandleApiCallAsFunction
code-creation,Builtin,2,120601,0x7ff74098f854,12,HandleApiCallAsConstructor
code-creation,Builtin,2,120610,0x7ff74098f894,64,AllocateInYoungGeneration
code-creation,Builtin,2,120619,0x7ff74098f914,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,120627,0x7ff74098f954,64,AllocateInOldGeneration
code-creation,Builtin,2,120636,0x7ff74098f9d4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,120644,0x7ff74098fa14,144,NewHeapNumber
code-creation,Builtin,2,120652,0x7ff74098fad4,508,CopyFastSmiOrObjectElements
code-creation,Builtin,2,120660,0x7ff74098fcd4,524,GrowFastDoubleElements
code-creation,Builtin,2,120668,0x7ff74098ff14,424,GrowFastSmiOrObjectElements
code-creation,Builtin,2,120677,0x7ff7409900d4,444,DebugBreakTrampoline
code-creation,Builtin,2,120685,0x7ff740990294,272,RestartFrameTrampoline
code-creation,Builtin,2,120693,0x7ff7409903d4,188,ToNumber
code-creation,Builtin,2,120701,0x7ff740990494,88,ToBigInt
code-creation,Builtin,2,120708,0x7ff740990514,308,ToNumber_Baseline
code-creation,Builtin,2,120716,0x7ff740990654,372,ToNumeric_Baseline
code-creation,Builtin,2,120725,0x7ff7409907d4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,120733,0x7ff740990854,224,ToNumberConvertBigInt
code-creation,Builtin,2,120749,0x7ff740990954,60,ToBigIntConvertNumber
code-creation,Builtin,2,120762,0x7ff740990994,140,Typeof
code-creation,Builtin,2,120771,0x7ff740990a54,112,BigIntToI64
code-creation,Builtin,2,120780,0x7ff740990ad4,4,BigIntToI32Pair
code-creation,Builtin,2,120789,0x7ff740990b14,220,I64ToBigInt
code-creation,Builtin,2,120796,0x7ff740990c14,4,I32PairToBigInt
code-creation,Builtin,2,120804,0x7ff740990c54,116,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,120813,0x7ff740990cd4,356,MathCeilContinuation
code-creation,Builtin,2,120821,0x7ff740990e54,364,MathFloorContinuation
code-creation,Builtin,2,120830,0x7ff740990fd4,408,MathRoundContinuation
code-creation,Builtin,2,120838,0x7ff740991194,4480,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,120852,0x7ff740992354,16988,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,120865,0x7ff7409965d4,13328,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,120880,0x7ff740999a14,608,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,120894,0x7ff740999c94,68,LoadIC_FunctionPrototype
code-creation,Builtin,2,120908,0x7ff740999d14,12,LoadIC_StringLength
code-creation,Builtin,2,120920,0x7ff740999d54,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,120935,0x7ff740999d94,4448,LoadIC_NoFeedback
code-creation,Builtin,2,120943,0x7ff74099af14,32,StoreGlobalIC_Slow
code-creation,Builtin,2,120951,0x7ff74099af54,8020,StoreIC_NoFeedback
code-creation,Builtin,2,120959,0x7ff74099ced4,4384,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,120968,0x7ff74099e014,188,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,120977,0x7ff74099e0d4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,120986,0x7ff74099e154,244,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,120995,0x7ff74099e254,244,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,121005,0x7ff74099e354,244,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,121015,0x7ff74099e454,244,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,121025,0x7ff74099e554,15076,StoreFastElementIC_Standard
code-creation,Builtin,2,121033,0x7ff7409a2054,10744,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,121043,0x7ff7409a4a54,14340,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,121052,0x7ff7409a8294,6440,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,121061,0x7ff7409a9bd4,8416,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,121070,0x7ff7409abcd4,19372,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,121080,0x7ff7409b0894,8416,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,121089,0x7ff7409b2994,11164,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,121099,0x7ff7409b5554,1128,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,121108,0x7ff7409b59d4,172,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,121116,0x7ff7409b5a94,72,HasIndexedInterceptorIC
code-creation,Builtin,2,121124,0x7ff7409b5b14,164,EnqueueMicrotask
code-creation,Builtin,2,121132,0x7ff7409b5bd4,8,RunMicrotasksTrampoline
code-creation,Builtin,2,121140,0x7ff7409b5c14,3780,RunMicrotasks
code-creation,Builtin,2,121148,0x7ff7409b6b14,3464,HasProperty
code-creation,Builtin,2,121156,0x7ff7409b78d4,1324,DeleteProperty
code-creation,Builtin,2,121164,0x7ff7409b7e14,2596,CopyDataProperties
code-creation,Builtin,2,121172,0x7ff7409b8854,10812,SetDataProperties
code-creation,Builtin,2,121180,0x7ff7409bb294,3316,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,121190,0x7ff7409bbf94,56,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,121199,0x7ff7409bbfd4,28,Abort
code-creation,Builtin,2,121221,0x7ff7409bc014,28,AbortCSADcheck
code-creation,Builtin,2,121244,0x7ff7409bc054,12,EmptyFunction
code-creation,Builtin,2,121259,0x7ff7409bc094,12,Illegal
code-creation,Builtin,2,121270,0x7ff7409bc0d4,12,StrictPoisonPillThrower
code-creation,Builtin,2,121283,0x7ff7409bc114,12,UnsupportedThrower
code-creation,Builtin,2,121400,0x7ff7409bc154,60,ReturnReceiver
code-creation,Builtin,2,121427,0x7ff7409bc194,36,ArrayConstructor
code-creation,Builtin,2,121436,0x7ff7409bc1d4,380,ArrayConstructorImpl
code-creation,Builtin,2,121444,0x7ff7409bc354,220,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,121466,0x7ff7409bc454,220,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,121492,0x7ff7409bc554,184,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,121521,0x7ff7409bc614,184,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,121539,0x7ff7409bc6d4,184,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,121552,0x7ff7409bc794,184,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,121562,0x7ff7409bc854,192,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,121572,0x7ff7409bc954,192,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,121582,0x7ff7409bca54,272,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,121591,0x7ff7409bcb94,476,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,121601,0x7ff7409bcd94,228,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,121611,0x7ff7409bce94,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,121621,0x7ff7409bd054,228,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,121631,0x7ff7409bd154,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,121641,0x7ff7409bd314,228,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,121651,0x7ff7409bd414,408,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,121661,0x7ff7409bd5d4,48,ArrayNArgumentsConstructor
code-creation,Builtin,2,121669,0x7ff7409bd614,12,ArrayConcat
code-creation,Builtin,2,121677,0x7ff7409bd654,12,ArrayPrototypeFill
code-creation,Builtin,2,121684,0x7ff7409bd694,1164,ArrayIncludesSmi
code-creation,Builtin,2,121692,0x7ff7409bdb54,1164,ArrayIncludesSmiOrObject
code-creation,Builtin,2,121700,0x7ff7409be014,152,ArrayIncludesPackedDoubles
code-creation,Builtin,2,121708,0x7ff7409be0d4,220,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,121717,0x7ff7409be1d4,584,ArrayIncludes
code-creation,Builtin,2,121724,0x7ff7409be454,1076,ArrayIndexOfSmi
code-creation,Builtin,2,121732,0x7ff7409be894,1076,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,121740,0x7ff7409becd4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,121748,0x7ff7409bed54,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,121756,0x7ff7409bedd4,584,ArrayIndexOf
code-creation,Builtin,2,121766,0x7ff7409bf054,12,ArrayPop
code-creation,Builtin,2,121773,0x7ff7409bf094,568,ArrayPrototypePop
code-creation,Builtin,2,121781,0x7ff7409bf2d4,12,ArrayPrototypeGroup
code-creation,Builtin,2,121789,0x7ff7409bf314,12,ArrayPrototypeGroupToMap
code-creation,Builtin,2,121797,0x7ff7409bf354,12,ArrayPush
code-creation,Builtin,2,121804,0x7ff7409bf394,2428,ArrayPrototypePush
code-creation,Builtin,2,121812,0x7ff7409bfd14,12,ArrayShift
code-creation,Builtin,2,121820,0x7ff7409bfd54,12,ArrayUnshift
code-creation,Builtin,2,121827,0x7ff7409bfd94,12,ArrayFromAsync
code-creation,Builtin,2,121835,0x7ff7409bfdd4,1088,CloneFastJSArray
code-creation,Builtin,2,121842,0x7ff7409c0254,2364,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,121851,0x7ff7409c0b94,1112,ExtractFastJSArray
code-creation,Builtin,2,121858,0x7ff7409c1014,264,ArrayPrototypeEntries
code-creation,Builtin,2,121866,0x7ff7409c1154,252,ArrayPrototypeKeys
code-creation,Builtin,2,121874,0x7ff7409c1254,264,ArrayPrototypeValues
code-creation,Builtin,2,121882,0x7ff7409c1394,4256,ArrayIteratorPrototypeNext
code-creation,Builtin,2,121890,0x7ff7409c2454,4944,FlattenIntoArray
code-creation,Builtin,2,121898,0x7ff7409c37d4,4836,FlatMapIntoArray
code-creation,Builtin,2,121963,0x7ff7409c4ad4,368,ArrayPrototypeFlat
code-creation,Builtin,2,121978,0x7ff7409c4c54,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,121986,0x7ff7409c4e14,12,ArrayBufferConstructor
code-creation,Builtin,2,121994,0x7ff7409c4e54,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,122004,0x7ff7409c4e94,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,122013,0x7ff7409c4ed4,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,122021,0x7ff7409c4f14,12,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,122030,0x7ff7409c4f54,12,ArrayBufferPrototypeTransferToFixedLength
code-creation,Builtin,2,122039,0x7ff7409c4f94,964,AsyncFunctionEnter
code-creation,Builtin,2,122047,0x7ff7409c5394,80,AsyncFunctionReject
code-creation,Builtin,2,122056,0x7ff7409c5414,76,AsyncFunctionResolve
code-creation,Builtin,2,122064,0x7ff7409c5494,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,122072,0x7ff7409c54d4,1564,AsyncFunctionAwaitCaught
code-creation,Builtin,2,122081,0x7ff7409c5b14,1564,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,122089,0x7ff7409c6154,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,122098,0x7ff7409c6214,168,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,122107,0x7ff7409c62d4,12,BigIntConstructor
code-creation,Builtin,2,122115,0x7ff7409c6314,12,BigIntAsUintN
code-creation,Builtin,2,122123,0x7ff7409c6354,12,BigIntAsIntN
code-creation,Builtin,2,122131,0x7ff7409c6394,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,122139,0x7ff7409c63d4,12,BigIntPrototypeToString
code-creation,Builtin,2,122148,0x7ff7409c6414,12,BigIntPrototypeValueOf
code-creation,Builtin,2,122156,0x7ff7409c6454,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,122165,0x7ff7409c6494,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,122174,0x7ff7409c64d4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,122209,0x7ff7409c6514,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,122218,0x7ff7409c6554,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,122226,0x7ff7409c6594,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,122235,0x7ff7409c65d4,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,122244,0x7ff7409c6614,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,122253,0x7ff7409c6654,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,122261,0x7ff7409c6694,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,122270,0x7ff7409c66d4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,122279,0x7ff7409c6714,12,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,122288,0x7ff7409c6754,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,122297,0x7ff7409c6794,12,CallSitePrototypeGetThis
code-creation,Builtin,2,122305,0x7ff7409c67d4,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,122313,0x7ff7409c6814,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,122323,0x7ff7409c6854,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,122336,0x7ff7409c6894,12,CallSitePrototypeIsEval
code-creation,Builtin,2,122344,0x7ff7409c68d4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,122353,0x7ff7409c6914,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,122366,0x7ff7409c6954,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,122378,0x7ff7409c6994,12,CallSitePrototypeToString
code-creation,Builtin,2,122392,0x7ff7409c69d4,12,ConsoleDebug
code-creation,Builtin,2,122408,0x7ff7409c6a14,12,ConsoleError
code-creation,Builtin,2,122606,0x7ff7409c6a54,12,ConsoleInfo
code-creation,Builtin,2,122666,0x7ff7409c6a94,12,ConsoleLog
code-creation,Builtin,2,122686,0x7ff7409c6ad4,12,ConsoleWarn
code-creation,Builtin,2,122703,0x7ff7409c6b14,12,ConsoleDir
code-creation,Builtin,2,122720,0x7ff7409c6b54,12,ConsoleDirXml
code-creation,Builtin,2,122740,0x7ff7409c6b94,12,ConsoleTable
code-creation,Builtin,2,122758,0x7ff7409c6bd4,12,ConsoleTrace
code-creation,Builtin,2,122772,0x7ff7409c6c14,12,ConsoleGroup
code-creation,Builtin,2,122789,0x7ff7409c6c54,12,ConsoleGroupCollapsed
code-creation,Builtin,2,122845,0x7ff7409c6c94,12,ConsoleGroupEnd
code-creation,Builtin,2,122899,0x7ff7409c6cd4,12,ConsoleClear
code-creation,Builtin,2,122928,0x7ff7409c6d14,12,ConsoleCount
code-creation,Builtin,2,122949,0x7ff7409c6d54,12,ConsoleCountReset
code-creation,Builtin,2,122970,0x7ff7409c6d94,12,ConsoleAssert
code-creation,Builtin,2,122987,0x7ff7409c6dd4,12,ConsoleProfile
code-creation,Builtin,2,123009,0x7ff7409c6e14,12,ConsoleProfileEnd
code-creation,Builtin,2,123027,0x7ff7409c6e54,12,ConsoleTime
code-creation,Builtin,2,123047,0x7ff7409c6e94,12,ConsoleTimeLog
code-creation,Builtin,2,123070,0x7ff7409c6ed4,12,ConsoleTimeEnd
code-creation,Builtin,2,123089,0x7ff7409c6f14,12,ConsoleTimeStamp
code-creation,Builtin,2,123111,0x7ff7409c6f54,12,ConsoleContext
code-creation,Builtin,2,123130,0x7ff7409c6f94,12,DataViewConstructor
code-creation,Builtin,2,123148,0x7ff7409c6fd4,12,DateConstructor
code-creation,Builtin,2,123164,0x7ff7409c7014,216,DatePrototypeGetDate
code-creation,Builtin,2,123181,0x7ff7409c7114,216,DatePrototypeGetDay
code-creation,Builtin,2,123196,0x7ff7409c7214,216,DatePrototypeGetFullYear
code-creation,Builtin,2,123216,0x7ff7409c7314,216,DatePrototypeGetHours
code-creation,Builtin,2,123231,0x7ff7409c7414,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,123248,0x7ff7409c7514,216,DatePrototypeGetMinutes
code-creation,Builtin,2,123265,0x7ff7409c7614,216,DatePrototypeGetMonth
code-creation,Builtin,2,123281,0x7ff7409c7714,216,DatePrototypeGetSeconds
code-creation,Builtin,2,123295,0x7ff7409c7814,128,DatePrototypeGetTime
code-creation,Builtin,2,123310,0x7ff7409c78d4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,123332,0x7ff7409c79d4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,123349,0x7ff7409c7ad4,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,123367,0x7ff7409c7bd4,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,123384,0x7ff7409c7cd4,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,123398,0x7ff7409c7dd4,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,123414,0x7ff7409c7ed4,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,123429,0x7ff7409c7fd4,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,123446,0x7ff7409c80d4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,123463,0x7ff7409c81d4,128,DatePrototypeValueOf
code-creation,Builtin,2,123482,0x7ff7409c8294,436,DatePrototypeToPrimitive
code-creation,Builtin,2,123499,0x7ff7409c8454,12,DatePrototypeGetYear
code-creation,Builtin,2,123516,0x7ff7409c8494,12,DatePrototypeSetYear
code-creation,Builtin,2,123533,0x7ff7409c84d4,12,DateNow
code-creation,Builtin,2,123551,0x7ff7409c8514,12,DateParse
code-creation,Builtin,2,123569,0x7ff7409c8554,12,DatePrototypeSetDate
code-creation,Builtin,2,123587,0x7ff7409c8594,12,DatePrototypeSetFullYear
code-creation,Builtin,2,123605,0x7ff7409c85d4,12,DatePrototypeSetHours
code-creation,Builtin,2,123623,0x7ff7409c8614,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,123640,0x7ff7409c8654,12,DatePrototypeSetMinutes
code-creation,Builtin,2,123659,0x7ff7409c8694,12,DatePrototypeSetMonth
code-creation,Builtin,2,123678,0x7ff7409c86d4,12,DatePrototypeSetSeconds
code-creation,Builtin,2,123696,0x7ff7409c8714,12,DatePrototypeSetTime
code-creation,Builtin,2,123714,0x7ff7409c8754,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,123732,0x7ff7409c8794,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,123751,0x7ff7409c87d4,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,123768,0x7ff7409c8814,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,123785,0x7ff7409c8854,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,123803,0x7ff7409c8894,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,123823,0x7ff7409c88d4,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,123842,0x7ff7409c8914,12,DatePrototypeToDateString
code-creation,Builtin,2,123861,0x7ff7409c8954,12,DatePrototypeToISOString
code-creation,Builtin,2,123880,0x7ff7409c8994,12,DatePrototypeToUTCString
code-creation,Builtin,2,123904,0x7ff7409c89d4,12,DatePrototypeToString
code-creation,Builtin,2,123954,0x7ff7409c8a14,12,DatePrototypeToTimeString
code-creation,Builtin,2,124021,0x7ff7409c8a54,12,DatePrototypeToJson
code-creation,Builtin,2,124072,0x7ff7409c8a94,12,DateUTC
code-creation,Builtin,2,124101,0x7ff7409c8ad4,12,ErrorConstructor
code-creation,Builtin,2,124125,0x7ff7409c8b14,12,ErrorCaptureStackTrace
code-creation,Builtin,2,124152,0x7ff7409c8b54,12,ErrorPrototypeToString
code-creation,Builtin,2,124234,0x7ff7409c8b94,12,FunctionConstructor
code-creation,Builtin,2,124256,0x7ff7409c8bd4,80,FunctionPrototypeApply
code-creation,Builtin,2,124281,0x7ff7409c8c54,12,FunctionPrototypeBind
code-creation,Builtin,2,124306,0x7ff7409c8c94,36,FunctionPrototypeCall
code-creation,Builtin,2,124330,0x7ff7409c8cd4,12,FunctionPrototypeToString
code-creation,Builtin,2,124355,0x7ff7409c8d14,212,CreateIterResultObject
code-creation,Builtin,2,124371,0x7ff7409c8e14,916,CreateGeneratorObject
code-creation,Builtin,2,124385,0x7ff7409c91d4,12,GeneratorFunctionConstructor
code-creation,Builtin,2,124400,0x7ff7409c9214,404,GeneratorPrototypeNext
code-creation,Builtin,2,124418,0x7ff7409c93d4,404,GeneratorPrototypeReturn
code-creation,Builtin,2,124434,0x7ff7409c9594,408,GeneratorPrototypeThrow
code-creation,Builtin,2,124450,0x7ff7409c9754,12,AsyncFunctionConstructor
code-creation,Builtin,2,124467,0x7ff7409c9794,384,SuspendGeneratorBaseline
code-creation,Builtin,2,124484,0x7ff7409c9954,96,ResumeGeneratorBaseline
code-creation,Builtin,2,124500,0x7ff7409c99d4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,124518,0x7ff7409c9a14,84,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,124536,0x7ff7409c9a94,12,GlobalDecodeURI
code-creation,Builtin,2,124551,0x7ff7409c9ad4,12,GlobalDecodeURIComponent
code-creation,Builtin,2,124568,0x7ff7409c9b14,12,GlobalEncodeURI
code-creation,Builtin,2,124586,0x7ff7409c9b54,12,GlobalEncodeURIComponent
code-creation,Builtin,2,124605,0x7ff7409c9b94,12,GlobalEscape
code-creation,Builtin,2,124619,0x7ff7409c9bd4,12,GlobalUnescape
code-creation,Builtin,2,124634,0x7ff7409c9c14,12,GlobalEval
code-creation,Builtin,2,124650,0x7ff7409c9c54,136,GlobalIsFinite
code-creation,Builtin,2,124668,0x7ff7409c9d14,132,GlobalIsNaN
code-creation,Builtin,2,124686,0x7ff7409c9dd4,12,JsonParse
code-creation,Builtin,2,124703,0x7ff7409c9e14,12,JsonStringify
code-creation,Builtin,2,124722,0x7ff7409c9e54,12,JsonRawJson
code-creation,Builtin,2,124739,0x7ff7409c9e94,12,JsonIsRawJson
code-creation,Builtin,2,124757,0x7ff7409c9ed4,5084,LoadIC
code-creation,Builtin,2,124834,0x7ff7409cb2d4,4720,LoadIC_Megamorphic
code-creation,Builtin,2,124853,0x7ff7409cc554,4932,LoadIC_Noninlined
code-creation,Builtin,2,124877,0x7ff7409cd8d4,44,LoadICTrampoline
code-creation,Builtin,2,124897,0x7ff7409cd914,24,LoadICBaseline
code-creation,Builtin,2,124922,0x7ff7409cd954,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,124941,0x7ff7409cd994,8860,LoadSuperIC
code-creation,Builtin,2,124960,0x7ff7409cfc54,24,LoadSuperICBaseline
code-creation,Builtin,2,124980,0x7ff7409cfc94,8260,KeyedLoadIC
code-creation,Builtin,2,124994,0x7ff7409d1d14,16288,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,125014,0x7ff7409d5cd4,13348,KeyedLoadIC_MegamorphicStringKey
code-creation,Builtin,2,125035,0x7ff7409d9114,44,KeyedLoadICTrampoline
code-creation,Builtin,2,125055,0x7ff7409d9154,24,KeyedLoadICBaseline
code-creation,Builtin,2,125073,0x7ff7409d9194,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,125093,0x7ff7409d91d4,44,KeyedLoadICTrampoline_MegamorphicStringKey
code-creation,Builtin,2,125111,0x7ff7409d9214,5440,StoreGlobalIC
code-creation,Builtin,2,125130,0x7ff7409da794,44,StoreGlobalICTrampoline
code-creation,Builtin,2,125151,0x7ff7409da7d4,24,StoreGlobalICBaseline
code-creation,Builtin,2,125169,0x7ff7409da814,5956,StoreIC
code-creation,Builtin,2,125186,0x7ff7409dbf94,44,StoreICTrampoline
code-creation,Builtin,2,125206,0x7ff7409dbfd4,24,StoreICBaseline
code-creation,Builtin,2,125223,0x7ff7409dc014,5748,DefineNamedOwnIC
code-creation,Builtin,2,125240,0x7ff7409dd694,44,DefineNamedOwnICTrampoline
code-creation,Builtin,2,125258,0x7ff7409dd6d4,24,DefineNamedOwnICBaseline
code-creation,Builtin,2,125302,0x7ff7409dd714,6440,KeyedStoreIC
code-creation,Builtin,2,125349,0x7ff7409df054,44,KeyedStoreICTrampoline
code-creation,Builtin,2,125373,0x7ff7409df094,24,KeyedStoreICBaseline
code-creation,Builtin,2,125395,0x7ff7409df0d4,6372,DefineKeyedOwnIC
code-creation,Builtin,2,125417,0x7ff7409e09d4,52,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,125440,0x7ff7409e0a14,28,DefineKeyedOwnICBaseline
code-creation,Builtin,2,125465,0x7ff7409e0a54,320,StoreInArrayLiteralIC
code-creation,Builtin,2,125526,0x7ff7409e0bd4,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,125548,0x7ff7409e0c14,144,LookupContextTrampoline
code-creation,Builtin,2,125568,0x7ff7409e0cd4,156,LookupContextBaseline
code-creation,Builtin,2,125589,0x7ff7409e0d94,144,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,125617,0x7ff7409e0e54,156,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,125641,0x7ff7409e0f14,3252,LoadGlobalIC
code-creation,Builtin,2,125660,0x7ff7409e1bd4,3232,LoadGlobalICInsideTypeof
code-creation,Builtin,2,125685,0x7ff7409e2894,44,LoadGlobalICTrampoline
code-creation,Builtin,2,125708,0x7ff7409e28d4,24,LoadGlobalICBaseline
code-creation,Builtin,2,125730,0x7ff7409e2914,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,125753,0x7ff7409e2954,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,125788,0x7ff7409e2994,140,LookupGlobalIC
code-creation,Builtin,2,125806,0x7ff7409e2a54,176,LookupGlobalICTrampoline
code-creation,Builtin,2,125826,0x7ff7409e2b14,160,LookupGlobalICBaseline
code-creation,Builtin,2,125845,0x7ff7409e2bd4,140,LookupGlobalICInsideTypeof
code-creation,Builtin,2,125865,0x7ff7409e2c94,176,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,125885,0x7ff7409e2d54,160,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,125908,0x7ff7409e2e14,2692,CloneObjectIC
code-creation,Builtin,2,125929,0x7ff7409e38d4,24,CloneObjectICBaseline
code-creation,Builtin,2,125952,0x7ff7409e3914,2728,CloneObjectIC_Slow
code-creation,Builtin,2,125973,0x7ff7409e43d4,3108,KeyedHasIC
code-creation,Builtin,2,125994,0x7ff7409e5014,24,KeyedHasICBaseline
code-creation,Builtin,2,126013,0x7ff7409e5054,3468,KeyedHasIC_Megamorphic
code-creation,Builtin,2,126033,0x7ff7409e5e14,1720,IterableToList
code-creation,Builtin,2,126053,0x7ff7409e64d4,1532,IterableToFixedArray
code-creation,Builtin,2,126075,0x7ff7409e6ad4,728,IterableToListWithSymbolLookup
code-creation,Builtin,2,126098,0x7ff7409e6dd4,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,126125,0x7ff7409e6e14,112,IterableToListMayPreserveHoles
code-creation,Builtin,2,126146,0x7ff7409e6e94,1232,IterableToFixedArrayForWasm
code-creation,Builtin,2,126169,0x7ff7409e7394,1668,StringListFromIterable
code-creation,Builtin,2,126191,0x7ff7409e7a54,1144,FindOrderedHashMapEntry
code-creation,Builtin,2,126212,0x7ff7409e7ed4,4296,MapConstructor
code-creation,Builtin,2,126231,0x7ff7409e8fd4,1888,MapPrototypeSet
code-creation,Builtin,2,126252,0x7ff7409e9754,1460,MapPrototypeDelete
code-creation,Builtin,2,126271,0x7ff7409e9d14,212,MapPrototypeGet
code-creation,Builtin,2,126291,0x7ff7409e9e14,172,MapPrototypeHas
code-creation,Builtin,2,126313,0x7ff7409e9ed4,12,MapPrototypeClear
code-creation,Builtin,2,126341,0x7ff7409e9f14,288,MapPrototypeEntries
code-creation,Builtin,2,126359,0x7ff7409ea054,144,MapPrototypeGetSize
code-creation,Builtin,2,126377,0x7ff7409ea114,488,MapPrototypeForEach
code-creation,Builtin,2,126397,0x7ff7409ea314,288,MapPrototypeKeys
code-creation,Builtin,2,126414,0x7ff7409ea454,288,MapPrototypeValues
code-creation,Builtin,2,126433,0x7ff7409ea594,916,MapIteratorPrototypeNext
code-creation,Builtin,2,126453,0x7ff7409ea954,1180,MapIteratorToList
code-creation,Builtin,2,126473,0x7ff7409eae14,12,NumberPrototypeToExponential
code-creation,Builtin,2,126490,0x7ff7409eae54,12,NumberPrototypeToFixed
code-creation,Builtin,2,126508,0x7ff7409eae94,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,126525,0x7ff7409eaed4,12,NumberPrototypeToPrecision
code-creation,Builtin,2,126543,0x7ff7409eaf14,356,SameValue
code-creation,Builtin,2,126583,0x7ff7409eb094,200,SameValueNumbersOnly
code-creation,Builtin,2,126614,0x7ff7409eb194,1368,Add_Baseline
code-creation,Builtin,2,126635,0x7ff7409eb714,1072,AddSmi_Baseline
code-creation,Builtin,2,126652,0x7ff7409ebb54,1340,Subtract_Baseline
code-creation,Builtin,2,126671,0x7ff7409ec094,1076,SubtractSmi_Baseline
code-creation,Builtin,2,126688,0x7ff7409ec4d4,1436,Multiply_Baseline
code-creation,Builtin,2,126704,0x7ff7409eca94,1164,MultiplySmi_Baseline
code-creation,Builtin,2,126723,0x7ff7409ecf54,1532,Divide_Baseline
code-creation,Builtin,2,126741,0x7ff7409ed554,1304,DivideSmi_Baseline
code-creation,Builtin,2,126759,0x7ff7409eda94,1472,Modulus_Baseline
code-creation,Builtin,2,126778,0x7ff7409ee094,1188,ModulusSmi_Baseline
code-creation,Builtin,2,126794,0x7ff7409ee554,812,Exponentiate_Baseline
code-creation,Builtin,2,126811,0x7ff7409ee894,708,ExponentiateSmi_Baseline
code-creation,Builtin,2,126839,0x7ff7409eeb94,1520,BitwiseAnd_Baseline
code-creation,Builtin,2,126858,0x7ff7409ef194,368,BitwiseAndSmi_Baseline
code-creation,Builtin,2,126874,0x7ff7409ef314,1520,BitwiseOr_Baseline
code-creation,Builtin,2,126892,0x7ff7409ef914,368,BitwiseOrSmi_Baseline
code-creation,Builtin,2,126908,0x7ff7409efa94,1524,BitwiseXor_Baseline
code-creation,Builtin,2,126926,0x7ff7409f0094,368,BitwiseXorSmi_Baseline
code-creation,Builtin,2,126941,0x7ff7409f0214,976,ShiftLeft_Baseline
code-creation,Builtin,2,126956,0x7ff7409f0614,392,ShiftLeftSmi_Baseline
code-creation,Builtin,2,126972,0x7ff7409f07d4,976,ShiftRight_Baseline
code-creation,Builtin,2,126989,0x7ff7409f0bd4,376,ShiftRightSmi_Baseline
code-creation,Builtin,2,127007,0x7ff7409f0d54,1096,ShiftRightLogical_Baseline
code-creation,Builtin,2,127025,0x7ff7409f11d4,632,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,127042,0x7ff7409f1454,1304,Add_WithFeedback
code-creation,Builtin,2,127059,0x7ff7409f1994,1288,Subtract_WithFeedback
code-creation,Builtin,2,127075,0x7ff7409f1ed4,1380,Multiply_WithFeedback
code-creation,Builtin,2,127094,0x7ff7409f2454,1488,Divide_WithFeedback
code-creation,Builtin,2,127110,0x7ff7409f2a54,1408,Modulus_WithFeedback
code-creation,Builtin,2,127126,0x7ff7409f3014,772,Exponentiate_WithFeedback
code-creation,Builtin,2,127142,0x7ff7409f3354,1464,BitwiseAnd_WithFeedback
code-creation,Builtin,2,127160,0x7ff7409f3914,1464,BitwiseOr_WithFeedback
code-creation,Builtin,2,127176,0x7ff7409f3ed4,1464,BitwiseXor_WithFeedback
code-creation,Builtin,2,127198,0x7ff7409f4494,928,ShiftLeft_WithFeedback
code-creation,Builtin,2,127217,0x7ff7409f4854,928,ShiftRight_WithFeedback
code-creation,Builtin,2,127235,0x7ff7409f4c14,1040,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,127253,0x7ff7409f5054,1968,Equal_Baseline
code-creation,Builtin,2,127269,0x7ff7409f5814,1188,StrictEqual_Baseline
code-creation,Builtin,2,127292,0x7ff7409f5cd4,1440,LessThan_Baseline
code-creation,Builtin,2,127309,0x7ff7409f6294,1440,GreaterThan_Baseline
code-creation,Builtin,2,127331,0x7ff7409f6854,1440,LessThanOrEqual_Baseline
code-creation,Builtin,2,127348,0x7ff7409f6e14,1440,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,127365,0x7ff7409f73d4,1868,Equal_WithFeedback
code-creation,Builtin,2,127381,0x7ff7409f7b54,1188,StrictEqual_WithFeedback
code-creation,Builtin,2,127401,0x7ff7409f8014,1428,LessThan_WithFeedback
code-creation,Builtin,2,127419,0x7ff7409f85d4,1428,GreaterThan_WithFeedback
code-creation,Builtin,2,127436,0x7ff7409f8b94,1428,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,127455,0x7ff7409f9154,1428,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,127474,0x7ff7409f9714,360,BitwiseNot_Baseline
code-creation,Builtin,2,127489,0x7ff7409f9894,456,Decrement_Baseline
code-creation,Builtin,2,127506,0x7ff7409f9a94,460,Increment_Baseline
code-creation,Builtin,2,127527,0x7ff7409f9c94,488,Negate_Baseline
code-creation,Builtin,2,127545,0x7ff7409f9e94,348,BitwiseNot_WithFeedback
code-creation,Builtin,2,127570,0x7ff7409fa014,440,Decrement_WithFeedback
code-creation,Builtin,2,127588,0x7ff7409fa1d4,444,Increment_WithFeedback
code-creation,Builtin,2,127612,0x7ff7409fa394,468,Negate_WithFeedback
code-creation,Builtin,2,127654,0x7ff7409fa594,256,ObjectAssign
code-creation,Builtin,2,127687,0x7ff7409fa6d4,932,ObjectCreate
code-creation,Builtin,2,127709,0x7ff7409faa94,12,ObjectDefineGetter
code-creation,Builtin,2,127727,0x7ff7409faad4,12,ObjectDefineProperties
code-creation,Builtin,2,127750,0x7ff7409fab14,12,ObjectDefineProperty
code-creation,Builtin,2,127769,0x7ff7409fab54,12,ObjectDefineSetter
code-creation,Builtin,2,127788,0x7ff7409fab94,1484,ObjectEntries
code-creation,Builtin,2,127806,0x7ff7409fb194,12,ObjectFreeze
code-creation,Builtin,2,127826,0x7ff7409fb1d4,4760,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,127853,0x7ff7409fc494,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,127877,0x7ff7409fc4d4,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,127896,0x7ff7409fc754,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,127916,0x7ff7409fc794,168,ObjectHasOwn
code-creation,Builtin,2,127937,0x7ff7409fc854,416,ObjectIs
code-creation,Builtin,2,127959,0x7ff7409fca14,12,ObjectIsFrozen
code-creation,Builtin,2,127990,0x7ff7409fca54,12,ObjectIsSealed
code-creation,Builtin,2,128013,0x7ff7409fca94,532,ObjectKeys
code-creation,Builtin,2,128034,0x7ff7409fccd4,12,ObjectLookupGetter
code-creation,Builtin,2,128055,0x7ff7409fcd14,12,ObjectLookupSetter
code-creation,Builtin,2,128072,0x7ff7409fcd54,3056,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,128089,0x7ff7409fd954,240,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,128106,0x7ff7409fda54,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,128123,0x7ff7409fda94,12,ObjectPrototypeGetProto
code-creation,Builtin,2,128141,0x7ff7409fdad4,12,ObjectPrototypeSetProto
code-creation,Builtin,2,128156,0x7ff7409fdb14,12,ObjectSeal
code-creation,Builtin,2,128172,0x7ff7409fdb54,1356,ObjectToString
code-creation,Builtin,2,128190,0x7ff7409fe0d4,1260,ObjectValues
code-creation,Builtin,2,128207,0x7ff7409fe5d4,304,OrdinaryHasInstance
code-creation,Builtin,2,128270,0x7ff7409fe714,372,InstanceOf
code-creation,Builtin,2,128332,0x7ff7409fe894,644,InstanceOf_WithFeedback
code-creation,Builtin,2,128351,0x7ff7409feb54,664,InstanceOf_Baseline
code-creation,Builtin,2,128365,0x7ff7409fee14,276,ForInEnumerate
code-creation,Builtin,2,128378,0x7ff7409fef54,148,ForInPrepare
code-creation,Builtin,2,128391,0x7ff7409ff014,3408,ForInFilter
code-creation,Builtin,2,128404,0x7ff7409ffd94,56,ReflectApply
code-creation,Builtin,2,128417,0x7ff7409ffdd4,64,ReflectConstruct
code-creation,Builtin,2,128433,0x7ff7409ffe54,12,ReflectDefineProperty
code-creation,Builtin,2,128448,0x7ff7409ffe94,12,ReflectOwnKeys
code-creation,Builtin,2,128461,0x7ff7409ffed4,12,ReflectSet
code-creation,Builtin,2,128474,0x7ff7409fff14,12,RegExpCapture1Getter
code-creation,Builtin,2,128488,0x7ff7409fff54,12,RegExpCapture2Getter
code-creation,Builtin,2,128502,0x7ff7409fff94,12,RegExpCapture3Getter
code-creation,Builtin,2,128515,0x7ff7409fffd4,12,RegExpCapture4Getter
code-creation,Builtin,2,128529,0x7ff740a00014,12,RegExpCapture5Getter
code-creation,Builtin,2,128543,0x7ff740a00054,12,RegExpCapture6Getter
code-creation,Builtin,2,128558,0x7ff740a00094,12,RegExpCapture7Getter
code-creation,Builtin,2,128574,0x7ff740a000d4,12,RegExpCapture8Getter
code-creation,Builtin,2,128658,0x7ff740a00114,12,RegExpCapture9Getter
code-creation,Builtin,2,128675,0x7ff740a00154,2360,RegExpConstructor
code-creation,Builtin,2,128689,0x7ff740a00a94,12,RegExpInputGetter
code-creation,Builtin,2,128703,0x7ff740a00ad4,12,RegExpInputSetter
code-creation,Builtin,2,128717,0x7ff740a00b14,12,RegExpLastMatchGetter
code-creation,Builtin,2,128730,0x7ff740a00b54,12,RegExpLastParenGetter
code-creation,Builtin,2,128744,0x7ff740a00b94,12,RegExpLeftContextGetter
code-creation,Builtin,2,128759,0x7ff740a00bd4,952,RegExpPrototypeCompile
code-creation,Builtin,2,128773,0x7ff740a00f94,12,RegExpPrototypeToString
code-creation,Builtin,2,128787,0x7ff740a00fd4,12,RegExpRightContextGetter
code-creation,Builtin,2,128799,0x7ff740a01014,248,RegExpExecAtom
code-creation,Builtin,2,128812,0x7ff740a01114,1012,RegExpExecInternal
code-creation,Builtin,2,128839,0x7ff740a01514,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,128865,0x7ff740a01554,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,128880,0x7ff740a01594,1128,FindOrderedHashSetEntry
code-creation,Builtin,2,128893,0x7ff740a01a14,2972,SetConstructor
code-creation,Builtin,2,128905,0x7ff740a025d4,172,SetPrototypeHas
code-creation,Builtin,2,128917,0x7ff740a02694,1660,SetPrototypeAdd
code-creation,Builtin,2,128929,0x7ff740a02d14,1424,SetPrototypeDelete
code-creation,Builtin,2,128941,0x7ff740a032d4,12,SetPrototypeClear
code-creation,Builtin,2,128954,0x7ff740a03314,288,SetPrototypeEntries
code-creation,Builtin,2,128965,0x7ff740a03454,148,SetPrototypeGetSize
code-creation,Builtin,2,128979,0x7ff740a03514,456,SetPrototypeForEach
code-creation,Builtin,2,128993,0x7ff740a03714,288,SetPrototypeValues
code-creation,Builtin,2,129006,0x7ff740a03854,840,SetIteratorPrototypeNext
code-creation,Builtin,2,129019,0x7ff740a03bd4,1112,SetOrSetIteratorToList
code-creation,Builtin,2,129034,0x7ff740a04054,12,ShadowRealmConstructor
code-creation,Builtin,2,129048,0x7ff740a04094,576,ShadowRealmGetWrappedValue
code-creation,Builtin,2,129059,0x7ff740a04314,12,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,129074,0x7ff740a04354,1404,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,129087,0x7ff740a048d4,236,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,129100,0x7ff740a049d4,76,ShadowRealmImportValueRejected
code-creation,Builtin,2,129113,0x7ff740a04a54,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,129150,0x7ff740a04a94,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,129164,0x7ff740a04ad4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,129177,0x7ff740a04b14,2108,AtomicsLoad
code-creation,Builtin,2,129189,0x7ff740a05354,2240,AtomicsStore
code-creation,Builtin,2,129202,0x7ff740a05c54,2844,AtomicsExchange
code-creation,Builtin,2,129225,0x7ff740a06794,3128,AtomicsCompareExchange
code-creation,Builtin,2,129238,0x7ff740a073d4,2868,AtomicsAdd
code-creation,Builtin,2,129251,0x7ff740a07f14,2868,AtomicsSub
code-creation,Builtin,2,129264,0x7ff740a08a54,2868,AtomicsAnd
code-creation,Builtin,2,129277,0x7ff740a09594,2868,AtomicsOr
code-creation,Builtin,2,129289,0x7ff740a0a0d4,2868,AtomicsXor
code-creation,Builtin,2,129303,0x7ff740a0ac14,12,AtomicsNotify
code-creation,Builtin,2,129319,0x7ff740a0ac54,12,AtomicsIsLockFree
code-creation,Builtin,2,129333,0x7ff740a0ac94,12,AtomicsWait
code-creation,Builtin,2,129346,0x7ff740a0acd4,12,AtomicsWaitAsync
code-creation,Builtin,2,129358,0x7ff740a0ad14,12,StringFromCodePoint
code-creation,Builtin,2,129374,0x7ff740a0ad54,1308,StringFromCharCode
code-creation,Builtin,2,129389,0x7ff740a0b294,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,129404,0x7ff740a0b2d4,4612,StringPrototypeMatchAll
code-creation,Builtin,2,129417,0x7ff740a0c514,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,129431,0x7ff740a0c554,1292,StringPrototypeReplace
code-creation,Builtin,2,129445,0x7ff740a0ca94,2868,StringPrototypeSplit
code-creation,Builtin,2,129460,0x7ff740a0d5d4,12,StringRaw
code-creation,Builtin,2,129473,0x7ff740a0d614,12,SymbolConstructor
code-creation,Builtin,2,129487,0x7ff740a0d654,12,SymbolFor
code-creation,Builtin,2,129500,0x7ff740a0d694,12,SymbolKeyFor
code-creation,Builtin,2,129513,0x7ff740a0d6d4,88,TypedArrayBaseConstructor
code-creation,Builtin,2,129527,0x7ff740a0d754,252,TypedArrayConstructor
code-creation,Builtin,2,129540,0x7ff740a0d854,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,129554,0x7ff740a0d894,884,TypedArrayPrototypeByteLength
code-creation,Builtin,2,129568,0x7ff740a0dc14,364,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,129583,0x7ff740a0dd94,596,TypedArrayPrototypeLength
code-creation,Builtin,2,129597,0x7ff740a0e014,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,129612,0x7ff740a0e054,12,TypedArrayPrototypeFill
code-creation,Builtin,2,129626,0x7ff740a0e094,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,129641,0x7ff740a0e0d4,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,129664,0x7ff740a0e114,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,129684,0x7ff740a0e154,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,129697,0x7ff740a0e194,432,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,129711,0x7ff740a0e354,24556,TypedArrayPrototypeMap
code-creation,Builtin,2,129722,0x7ff740a14354,992,GenericJSToWasmWrapper
code-creation,Builtin,2,129735,0x7ff740a14754,1268,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,129749,0x7ff740a14c54,160,WasmSuspend
code-creation,Builtin,2,129762,0x7ff740a14d14,324,WasmResume
code-creation,Builtin,2,129775,0x7ff740a14e94,340,WasmReject
code-creation,Builtin,2,129788,0x7ff740a15014,156,WasmCompileLazy
code-creation,Builtin,2,129801,0x7ff740a150d4,192,WasmLiftoffFrameSetup
code-creation,Builtin,2,129814,0x7ff740a151d4,180,WasmDebugBreak
code-creation,Builtin,2,129827,0x7ff740a15294,16,WasmOnStackReplace
code-creation,Builtin,2,129840,0x7ff740a152d4,132,WasmFloat32ToNumber
code-creation,Builtin,2,129856,0x7ff740a15394,144,WasmFloat64ToNumber
code-creation,Builtin,2,129870,0x7ff740a15454,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,129886,0x7ff740a15494,4532,WeakMapConstructor
code-creation,Builtin,2,129901,0x7ff740a16654,264,WeakMapLookupHashIndex
code-creation,Builtin,2,129916,0x7ff740a16794,224,WeakMapGet
code-creation,Builtin,2,129930,0x7ff740a16894,184,WeakMapPrototypeHas
code-creation,Builtin,2,129945,0x7ff740a16954,256,WeakMapPrototypeSet
code-creation,Builtin,2,129961,0x7ff740a16a94,156,WeakMapPrototypeDelete
code-creation,Builtin,2,129976,0x7ff740a16b54,3156,WeakSetConstructor
code-creation,Builtin,2,129990,0x7ff740a177d4,184,WeakSetPrototypeHas
code-creation,Builtin,2,130004,0x7ff740a17894,260,WeakSetPrototypeAdd
code-creation,Builtin,2,130020,0x7ff740a179d4,156,WeakSetPrototypeDelete
code-creation,Builtin,2,130035,0x7ff740a17a94,448,WeakCollectionDelete
code-creation,Builtin,2,130050,0x7ff740a17c94,808,WeakCollectionSet
code-creation,Builtin,2,130065,0x7ff740a17fd4,12,SharedStructTypeConstructor
code-creation,Builtin,2,130080,0x7ff740a18014,12,SharedStructConstructor
code-creation,Builtin,2,130095,0x7ff740a18054,12,SharedArrayConstructor
code-creation,Builtin,2,130111,0x7ff740a18094,12,AtomicsMutexConstructor
code-creation,Builtin,2,130125,0x7ff740a180d4,12,AtomicsMutexLock
code-creation,Builtin,2,130140,0x7ff740a18114,12,AtomicsMutexTryLock
code-creation,Builtin,2,130155,0x7ff740a18154,12,AtomicsConditionConstructor
code-creation,Builtin,2,130169,0x7ff740a18194,12,AtomicsConditionWait
code-creation,Builtin,2,130184,0x7ff740a181d4,12,AtomicsConditionNotify
code-creation,Builtin,2,130199,0x7ff740a18214,292,AsyncGeneratorResolve
code-creation,Builtin,2,130213,0x7ff740a18354,104,AsyncGeneratorReject
code-creation,Builtin,2,130228,0x7ff740a183d4,1624,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,130243,0x7ff740a18a54,1912,AsyncGeneratorReturn
code-creation,Builtin,2,130258,0x7ff740a191d4,376,AsyncGeneratorResumeNext
code-creation,Builtin,2,130273,0x7ff740a19354,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,130289,0x7ff740a19394,1024,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,130304,0x7ff740a197d4,1032,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,130322,0x7ff740a19c14,1032,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,130348,0x7ff740a1a054,1600,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,130364,0x7ff740a1a6d4,1600,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,130378,0x7ff740a1ad54,176,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,130394,0x7ff740a1ae14,172,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,130410,0x7ff740a1aed4,124,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,130426,0x7ff740a1af54,124,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,130444,0x7ff740a1afd4,116,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,130461,0x7ff740a1b054,180,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,130476,0x7ff740a1b114,1656,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,130492,0x7ff740a1b794,1764,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,130517,0x7ff740a1be94,1788,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,130537,0x7ff740a1c594,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,130553,0x7ff740a1c614,200,CEntry_Return1_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,130570,0x7ff740a1c714,208,CEntry_Return1_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,130586,0x7ff740a1c814,208,CEntry_Return1_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,130602,0x7ff740a1c914,212,CEntry_Return2_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,130619,0x7ff740a1ca14,224,CEntry_Return2_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,130636,0x7ff740a1cb14,224,CEntry_Return2_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,130653,0x7ff740a1cc14,4,DirectCEntry
code-creation,Builtin,2,130666,0x7ff740a1cc54,1244,StringAdd_CheckNone
code-creation,Builtin,2,130680,0x7ff740a1d154,2384,SubString
code-creation,Builtin,2,130695,0x7ff740a1dad4,84,DoubleToI
code-creation,Builtin,2,130707,0x7ff740a1db54,3100,GetProperty
code-creation,Builtin,2,130721,0x7ff740a1e794,3272,GetPropertyWithReceiver
code-creation,Builtin,2,130737,0x7ff740a1f494,17132,SetProperty
code-creation,Builtin,2,130751,0x7ff740a23794,14220,CreateDataProperty
code-creation,Builtin,2,130767,0x7ff740a26f54,52,GetOwnPropertyDescriptor
code-creation,Builtin,2,130783,0x7ff740a26f94,8,MemCopyUint8Uint8
code-creation,Builtin,2,130797,0x7ff740a26fd4,8,MemMove
code-creation,Builtin,2,130811,0x7ff740a27014,180,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,130828,0x7ff740a270d4,2828,OrdinaryGetOwnPropertyDescriptor
code-creation,Builtin,2,130844,0x7ff740a27c14,12,IsTraceCategoryEnabled
code-creation,Builtin,2,130860,0x7ff740a27c54,12,Trace
code-creation,Builtin,2,130874,0x7ff740a27c94,12,FinalizationRegistryUnregister
code-creation,Builtin,2,130889,0x7ff740a27cd4,408,AsyncModuleEvaluate
code-creation,Builtin,2,130904,0x7ff740a27e94,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,130919,0x7ff740a27ed4,12,CallAsyncModuleRejected
code-creation,Builtin,2,130934,0x7ff740a27f14,12,TemporalNowTimeZone
code-creation,Builtin,2,130948,0x7ff740a27f54,12,TemporalNowInstant
code-creation,Builtin,2,130963,0x7ff740a27f94,12,TemporalNowPlainDateTime
code-creation,Builtin,2,130978,0x7ff740a27fd4,12,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,130993,0x7ff740a28014,12,TemporalNowZonedDateTime
code-creation,Builtin,2,131008,0x7ff740a28054,12,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,131023,0x7ff740a28094,12,TemporalNowPlainDate
code-creation,Builtin,2,131038,0x7ff740a280d4,12,TemporalNowPlainDateISO
code-creation,Builtin,2,131053,0x7ff740a28114,12,TemporalNowPlainTimeISO
code-creation,Builtin,2,131068,0x7ff740a28154,12,TemporalPlainDateConstructor
code-creation,Builtin,2,131084,0x7ff740a28194,12,TemporalPlainDateFrom
code-creation,Builtin,2,131099,0x7ff740a281d4,12,TemporalPlainDateCompare
code-creation,Builtin,2,131114,0x7ff740a28214,12,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,131130,0x7ff740a28254,12,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,131146,0x7ff740a28294,12,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,131161,0x7ff740a282d4,12,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,131177,0x7ff740a28314,12,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,131192,0x7ff740a28354,12,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,131209,0x7ff740a28394,12,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,131225,0x7ff740a283d4,12,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,131240,0x7ff740a28414,12,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,131256,0x7ff740a28454,12,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,131272,0x7ff740a28494,12,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,131288,0x7ff740a284d4,12,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,131304,0x7ff740a28514,12,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,131324,0x7ff740a28554,12,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,131348,0x7ff740a28594,12,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,131369,0x7ff740a285d4,12,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,131386,0x7ff740a28614,12,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,131401,0x7ff740a28654,12,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,131428,0x7ff740a28694,12,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,131444,0x7ff740a286d4,12,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,131460,0x7ff740a28714,12,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,131475,0x7ff740a28754,12,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,131492,0x7ff740a28794,12,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,131507,0x7ff740a287d4,12,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,131524,0x7ff740a28814,12,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,131540,0x7ff740a28854,12,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,131556,0x7ff740a28894,12,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,131572,0x7ff740a288d4,12,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,131588,0x7ff740a28914,12,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,131619,0x7ff740a28954,12,TemporalPlainTimeConstructor
code-creation,Builtin,2,131635,0x7ff740a28994,12,TemporalPlainTimeFrom
code-creation,Builtin,2,131650,0x7ff740a289d4,12,TemporalPlainTimeCompare
code-creation,Builtin,2,131665,0x7ff740a28a14,12,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,131681,0x7ff740a28a54,12,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,131696,0x7ff740a28a94,12,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,131712,0x7ff740a28ad4,12,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,131727,0x7ff740a28b14,12,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,131743,0x7ff740a28b54,12,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,131759,0x7ff740a28b94,12,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,131776,0x7ff740a28bd4,12,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,131791,0x7ff740a28c14,12,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,131807,0x7ff740a28c54,12,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,131823,0x7ff740a28c94,12,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,131839,0x7ff740a28cd4,12,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,131855,0x7ff740a28d14,12,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,131871,0x7ff740a28d54,12,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,131887,0x7ff740a28d94,12,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,131903,0x7ff740a28dd4,12,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,131919,0x7ff740a28e14,12,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,131935,0x7ff740a28e54,12,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,131951,0x7ff740a28e94,12,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,131967,0x7ff740a28ed4,12,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,131983,0x7ff740a28f14,12,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,131998,0x7ff740a28f54,12,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,132013,0x7ff740a28f94,12,TemporalPlainDateTimeFrom
code-creation,Builtin,2,132029,0x7ff740a28fd4,12,TemporalPlainDateTimeCompare
code-creation,Builtin,2,132044,0x7ff740a29014,12,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,132060,0x7ff740a29054,12,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,132076,0x7ff740a29094,12,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,132092,0x7ff740a290d4,12,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,132108,0x7ff740a29114,12,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,132124,0x7ff740a29154,12,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,132146,0x7ff740a29194,12,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,132165,0x7ff740a291d4,12,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,132181,0x7ff740a29214,12,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,132197,0x7ff740a29254,12,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,132214,0x7ff740a29294,12,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,132230,0x7ff740a292d4,12,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,132246,0x7ff740a29314,12,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,132262,0x7ff740a29354,12,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,132279,0x7ff740a29394,12,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,132295,0x7ff740a293d4,12,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,132314,0x7ff740a29414,12,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,132330,0x7ff740a29454,12,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,132346,0x7ff740a29494,12,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,132363,0x7ff740a294d4,12,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,132378,0x7ff740a29514,12,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,132395,0x7ff740a29554,12,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,132412,0x7ff740a29594,12,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,132429,0x7ff740a295d4,12,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,132454,0x7ff740a29614,12,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,132470,0x7ff740a29654,12,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,132486,0x7ff740a29694,12,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,132502,0x7ff740a296d4,12,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,132517,0x7ff740a29714,12,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,132533,0x7ff740a29754,12,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,132549,0x7ff740a29794,12,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,132565,0x7ff740a297d4,12,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,132582,0x7ff740a29814,12,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,132598,0x7ff740a29854,12,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,132614,0x7ff740a29894,12,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,132631,0x7ff740a298d4,12,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,132647,0x7ff740a29914,12,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,132664,0x7ff740a29954,12,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,132680,0x7ff740a29994,12,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,132696,0x7ff740a299d4,12,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,132712,0x7ff740a29a14,12,TemporalZonedDateTimeFrom
code-creation,Builtin,2,132728,0x7ff740a29a54,12,TemporalZonedDateTimeCompare
code-creation,Builtin,2,132742,0x7ff740a29a94,12,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,132760,0x7ff740a29ad4,12,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,132775,0x7ff740a29b14,12,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,132792,0x7ff740a29b54,12,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,132808,0x7ff740a29b94,12,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,132825,0x7ff740a29bd4,12,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,132843,0x7ff740a29c14,12,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,132858,0x7ff740a29c54,12,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,132874,0x7ff740a29c94,12,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,132892,0x7ff740a29cd4,12,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,132908,0x7ff740a29d14,12,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,133152,0x7ff740a29d54,12,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,133185,0x7ff740a29d94,12,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,133202,0x7ff740a29dd4,12,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,133220,0x7ff740a29e14,12,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,133236,0x7ff740a29e54,12,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,133254,0x7ff740a29e94,12,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,133271,0x7ff740a29ed4,12,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,133288,0x7ff740a29f14,12,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,133305,0x7ff740a29f54,12,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,133327,0x7ff740a29f94,12,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,133344,0x7ff740a29fd4,12,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,133360,0x7ff740a2a014,12,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,133376,0x7ff740a2a054,12,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,133394,0x7ff740a2a094,12,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,133413,0x7ff740a2a0d4,12,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,133431,0x7ff740a2a114,12,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,133449,0x7ff740a2a154,12,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,133464,0x7ff740a2a194,12,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,133507,0x7ff740a2a1d4,12,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,133524,0x7ff740a2a214,12,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,133543,0x7ff740a2a254,12,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,133562,0x7ff740a2a294,12,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,133578,0x7ff740a2a2d4,12,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,133596,0x7ff740a2a314,12,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,133612,0x7ff740a2a354,12,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,133630,0x7ff740a2a394,12,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,133647,0x7ff740a2a3d4,12,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,133664,0x7ff740a2a414,12,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,133681,0x7ff740a2a454,12,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,133697,0x7ff740a2a494,12,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,133714,0x7ff740a2a4d4,12,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,133730,0x7ff740a2a514,12,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,133746,0x7ff740a2a554,12,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,133763,0x7ff740a2a594,12,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,133780,0x7ff740a2a5d4,12,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,133800,0x7ff740a2a614,12,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,133816,0x7ff740a2a654,12,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,133834,0x7ff740a2a694,12,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,133853,0x7ff740a2a6d4,12,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,133871,0x7ff740a2a714,12,TemporalDurationConstructor
code-creation,Builtin,2,133889,0x7ff740a2a754,12,TemporalDurationFrom
code-creation,Builtin,2,133905,0x7ff740a2a794,12,TemporalDurationCompare
code-creation,Builtin,2,133922,0x7ff740a2a7d4,12,TemporalDurationPrototypeYears
code-creation,Builtin,2,133939,0x7ff740a2a814,12,TemporalDurationPrototypeMonths
code-creation,Builtin,2,133955,0x7ff740a2a854,12,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,133972,0x7ff740a2a894,12,TemporalDurationPrototypeDays
code-creation,Builtin,2,134087,0x7ff740a2a8d4,12,TemporalDurationPrototypeHours
code-creation,Builtin,2,134109,0x7ff740a2a914,12,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,134126,0x7ff740a2a954,12,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,134142,0x7ff740a2a994,12,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,134158,0x7ff740a2a9d4,12,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,134175,0x7ff740a2aa14,12,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,134190,0x7ff740a2aa54,12,TemporalDurationPrototypeSign
code-creation,Builtin,2,134205,0x7ff740a2aa94,12,TemporalDurationPrototypeBlank
code-creation,Builtin,2,134221,0x7ff740a2aad4,12,TemporalDurationPrototypeWith
code-creation,Builtin,2,134236,0x7ff740a2ab14,12,TemporalDurationPrototypeNegated
code-creation,Builtin,2,134252,0x7ff740a2ab54,12,TemporalDurationPrototypeAbs
code-creation,Builtin,2,134267,0x7ff740a2ab94,12,TemporalDurationPrototypeAdd
code-creation,Builtin,2,134282,0x7ff740a2abd4,12,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,134298,0x7ff740a2ac14,12,TemporalDurationPrototypeRound
code-creation,Builtin,2,134315,0x7ff740a2ac54,12,TemporalDurationPrototypeTotal
code-creation,Builtin,2,134331,0x7ff740a2ac94,12,TemporalDurationPrototypeToString
code-creation,Builtin,2,134348,0x7ff740a2acd4,12,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,134364,0x7ff740a2ad14,12,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,134380,0x7ff740a2ad54,12,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,134396,0x7ff740a2ad94,12,TemporalInstantConstructor
code-creation,Builtin,2,134411,0x7ff740a2add4,12,TemporalInstantFrom
code-creation,Builtin,2,134426,0x7ff740a2ae14,12,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,134440,0x7ff740a2ae54,12,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,134456,0x7ff740a2ae94,12,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,134472,0x7ff740a2aed4,12,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,134488,0x7ff740a2af14,12,TemporalInstantCompare
code-creation,Builtin,2,134503,0x7ff740a2af54,12,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,134519,0x7ff740a2af94,12,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,134535,0x7ff740a2afd4,12,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,134552,0x7ff740a2b014,12,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,134568,0x7ff740a2b054,12,TemporalInstantPrototypeAdd
code-creation,Builtin,2,134594,0x7ff740a2b094,12,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,134610,0x7ff740a2b0d4,12,TemporalInstantPrototypeUntil
code-creation,Builtin,2,134625,0x7ff740a2b114,12,TemporalInstantPrototypeSince
code-creation,Builtin,2,134641,0x7ff740a2b154,12,TemporalInstantPrototypeRound
code-creation,Builtin,2,134656,0x7ff740a2b194,12,TemporalInstantPrototypeEquals
code-creation,Builtin,2,134672,0x7ff740a2b1d4,12,TemporalInstantPrototypeToString
code-creation,Builtin,2,134688,0x7ff740a2b214,12,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,134705,0x7ff740a2b254,12,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,134721,0x7ff740a2b294,12,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,134737,0x7ff740a2b2d4,12,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,134753,0x7ff740a2b314,12,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,134770,0x7ff740a2b354,12,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,134786,0x7ff740a2b394,12,TemporalPlainYearMonthFrom
code-creation,Builtin,2,134802,0x7ff740a2b3d4,12,TemporalPlainYearMonthCompare
code-creation,Builtin,2,134817,0x7ff740a2b414,12,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,134833,0x7ff740a2b454,12,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,134850,0x7ff740a2b494,12,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,134866,0x7ff740a2b4d4,12,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,134882,0x7ff740a2b514,12,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,135021,0x7ff740a2b554,12,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,135053,0x7ff740a2b594,12,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,135072,0x7ff740a2b5d4,12,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,135089,0x7ff740a2b614,12,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,135106,0x7ff740a2b654,12,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,135121,0x7ff740a2b694,12,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,135138,0x7ff740a2b6d4,12,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,135155,0x7ff740a2b714,12,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,135171,0x7ff740a2b754,12,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,135187,0x7ff740a2b794,12,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,135204,0x7ff740a2b7d4,12,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,135221,0x7ff740a2b814,12,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,135239,0x7ff740a2b854,12,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,135254,0x7ff740a2b894,12,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,135271,0x7ff740a2b8d4,12,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,135290,0x7ff740a2b914,12,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,135306,0x7ff740a2b954,12,TemporalPlainMonthDayFrom
code-creation,Builtin,2,135324,0x7ff740a2b994,12,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,135343,0x7ff740a2b9d4,12,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,135361,0x7ff740a2ba14,12,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,135375,0x7ff740a2ba54,12,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,135389,0x7ff740a2ba94,12,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,135404,0x7ff740a2bad4,12,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,135419,0x7ff740a2bb14,12,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,135433,0x7ff740a2bb54,12,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,135459,0x7ff740a2bb94,12,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,135488,0x7ff740a2bbd4,12,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,135506,0x7ff740a2bc14,12,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,135521,0x7ff740a2bc54,12,TemporalTimeZoneConstructor
code-creation,Builtin,2,135537,0x7ff740a2bc94,12,TemporalTimeZoneFrom
code-creation,Builtin,2,135550,0x7ff740a2bcd4,12,TemporalTimeZonePrototypeId
code-creation,Builtin,2,135565,0x7ff740a2bd14,12,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,135581,0x7ff740a2bd54,12,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,135598,0x7ff740a2bd94,12,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,135613,0x7ff740a2bdd4,12,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,135628,0x7ff740a2be14,12,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,135645,0x7ff740a2be54,12,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,135660,0x7ff740a2be94,12,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,135676,0x7ff740a2bed4,12,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,135692,0x7ff740a2bf14,12,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,135707,0x7ff740a2bf54,12,TemporalCalendarConstructor
code-creation,Builtin,2,135722,0x7ff740a2bf94,12,TemporalCalendarFrom
code-creation,Builtin,2,135737,0x7ff740a2bfd4,12,TemporalCalendarPrototypeId
code-creation,Builtin,2,135752,0x7ff740a2c014,12,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,135778,0x7ff740a2c054,12,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,135795,0x7ff740a2c094,12,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,135812,0x7ff740a2c0d4,12,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,135925,0x7ff740a2c114,12,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,135950,0x7ff740a2c154,12,TemporalCalendarPrototypeYear
code-creation,Builtin,2,135967,0x7ff740a2c194,12,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,135984,0x7ff740a2c1d4,12,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,136001,0x7ff740a2c214,12,TemporalCalendarPrototypeDay
code-creation,Builtin,2,136018,0x7ff740a2c254,12,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,136035,0x7ff740a2c294,12,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,136052,0x7ff740a2c2d4,12,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,136069,0x7ff740a2c314,12,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,136085,0x7ff740a2c354,12,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,136101,0x7ff740a2c394,12,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,136117,0x7ff740a2c3d4,12,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,136133,0x7ff740a2c414,12,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,136148,0x7ff740a2c454,3460,TemporalCalendarPrototypeFields
code-creation,Builtin,2,136164,0x7ff740a2d214,12,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,136180,0x7ff740a2d254,12,TemporalCalendarPrototypeToString
code-creation,Builtin,2,136197,0x7ff740a2d294,12,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,136213,0x7ff740a2d2d4,12,DatePrototypeToTemporalInstant
code-creation,Builtin,2,136230,0x7ff740a2d314,1724,StringFixedArrayFromIterable
code-creation,Builtin,2,136247,0x7ff740a2d9d4,1724,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,136264,0x7ff740a2e094,260,AggregateErrorConstructor
code-creation,Builtin,2,136280,0x7ff740a2e1d4,808,ArrayPrototypeAt
code-creation,Builtin,2,136296,0x7ff740a2e514,552,ArrayPrototypeConcat
code-creation,Builtin,2,136314,0x7ff740a2e754,4980,ArrayPrototypeCopyWithin
code-creation,Builtin,2,136329,0x7ff740a2fad4,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,136343,0x7ff740a2fbd4,568,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,136357,0x7ff740a2fe14,4028,ArrayEveryLoopContinuation
code-creation,Builtin,2,136373,0x7ff740a30dd4,1452,ArrayEvery
code-creation,Builtin,2,136391,0x7ff740a31394,276,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,136408,0x7ff740a314d4,860,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,136424,0x7ff740a31854,4288,ArrayFilterLoopContinuation
code-creation,Builtin,2,136438,0x7ff740a32954,4284,ArrayFilter
code-creation,Builtin,2,136451,0x7ff740a33a14,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,136466,0x7ff740a33b14,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,136482,0x7ff740a33b54,308,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,136498,0x7ff740a33c94,496,ArrayFindLoopContinuation
code-creation,Builtin,2,136522,0x7ff740a33e94,1428,ArrayPrototypeFind
code-creation,Builtin,2,136535,0x7ff740a34454,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,136552,0x7ff740a34554,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,136570,0x7ff740a34594,308,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,136588,0x7ff740a346d4,492,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,136604,0x7ff740a348d4,1432,ArrayPrototypeFindIndex
code-creation,Builtin,2,136620,0x7ff740a34e94,428,ArrayFindLastLoopContinuation
code-creation,Builtin,2,136637,0x7ff740a35054,1624,ArrayPrototypeFindLast
code-creation,Builtin,2,136658,0x7ff740a356d4,424,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,136686,0x7ff740a35894,1620,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,136723,0x7ff740a35f14,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,136743,0x7ff740a36014,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,136760,0x7ff740a36114,3892,ArrayForEachLoopContinuation
code-creation,Builtin,2,136776,0x7ff740a37054,1292,ArrayForEach
code-creation,Builtin,2,136927,0x7ff740a37594,4300,ArrayFrom
code-creation,Builtin,2,136956,0x7ff740a38694,168,ArrayIsArray
code-creation,Builtin,2,136971,0x7ff740a38754,388,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,136987,0x7ff740a38914,40,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,137002,0x7ff740a38954,132,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,137017,0x7ff740a38a14,208,ConvertToLocaleString
code-creation,Builtin,2,137031,0x7ff740a38b14,732,JoinStackPush
code-creation,Builtin,2,137045,0x7ff740a38e14,276,JoinStackPop
code-creation,Builtin,2,137058,0x7ff740a38f54,9116,ArrayPrototypeJoin
code-creation,Builtin,2,137071,0x7ff740a3b314,5880,ArrayPrototypeToLocaleString
code-creation,Builtin,2,137086,0x7ff740a3ca14,236,ArrayPrototypeToString
code-creation,Builtin,2,137100,0x7ff740a3cb14,8948,TypedArrayPrototypeJoin
code-creation,Builtin,2,137114,0x7ff740a3ee14,5664,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,137130,0x7ff740a40454,4256,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,137144,0x7ff740a41514,256,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,137159,0x7ff740a41654,244,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,137174,0x7ff740a41754,468,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,137189,0x7ff740a41954,3924,ArrayMapLoopContinuation
code-creation,Builtin,2,137203,0x7ff740a428d4,3704,ArrayMap
code-creation,Builtin,2,137217,0x7ff740a43754,1412,ArrayOf
code-creation,Builtin,2,137230,0x7ff740a43d14,412,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,137246,0x7ff740a43ed4,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,137261,0x7ff740a43fd4,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,137276,0x7ff740a440d4,3944,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,137291,0x7ff740a45054,1880,ArrayReduceRight
code-creation,Builtin,2,137305,0x7ff740a457d4,180,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,137324,0x7ff740a45894,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,137425,0x7ff740a45994,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,137465,0x7ff740a45a94,3984,ArrayReduceLoopContinuation
code-creation,Builtin,2,137482,0x7ff740a46a54,1516,ArrayReduce
code-creation,Builtin,2,137497,0x7ff740a47054,3484,ArrayPrototypeReverse
code-creation,Builtin,2,137513,0x7ff740a47e14,3744,ArrayPrototypeShift
code-creation,Builtin,2,137528,0x7ff740a48cd4,5420,ArrayPrototypeSlice
code-creation,Builtin,2,137543,0x7ff740a4a214,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,137560,0x7ff740a4a314,532,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,137576,0x7ff740a4a554,4012,ArraySomeLoopContinuation
code-creation,Builtin,2,137592,0x7ff740a4b514,1436,ArraySome
code-creation,Builtin,2,137606,0x7ff740a4bad4,14240,ArrayPrototypeSplice
code-creation,Builtin,2,137622,0x7ff740a4f294,1624,GenericArrayToReversed
code-creation,Builtin,2,137637,0x7ff740a4f914,2768,ArrayPrototypeToReversed
code-creation,Builtin,2,137653,0x7ff740a50414,5060,ArrayTimSortIntoCopy
code-creation,Builtin,2,137668,0x7ff740a51814,2148,ArrayPrototypeToSorted
code-creation,Builtin,2,137683,0x7ff740a52094,8468,ArrayPrototypeToSpliced
code-creation,Builtin,2,137698,0x7ff740a541d4,2980,ArrayPrototypeUnshift
code-creation,Builtin,2,137714,0x7ff740a54d94,1004,GenericArrayWith
code-creation,Builtin,2,137728,0x7ff740a55194,1104,ArrayPrototypeWith
code-creation,Builtin,2,137745,0x7ff740a55614,324,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,137762,0x7ff740a55794,484,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,137777,0x7ff740a55994,216,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,137793,0x7ff740a55a94,216,ArrayBufferPrototypeGetDetached
code-creation,Builtin,2,137809,0x7ff740a55b94,324,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,137848,0x7ff740a55d14,216,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,137865,0x7ff740a55e14,100,ArrayBufferIsView
code-creation,Builtin,2,137992,0x7ff740a55e94,388,ToInteger
code-creation,Builtin,2,138016,0x7ff740a56054,3096,FastCreateDataProperty
code-creation,Builtin,2,138033,0x7ff740a56c94,640,CheckSameObject
code-creation,Builtin,2,138048,0x7ff740a56f54,1048,BooleanConstructor
code-creation,Builtin,2,138063,0x7ff740a57394,164,BooleanPrototypeToString
code-creation,Builtin,2,138078,0x7ff740a57454,160,BooleanPrototypeValueOf
code-creation,Builtin,2,138093,0x7ff740a57514,1072,BigIntAddNoThrow
code-creation,Builtin,2,138108,0x7ff740a57954,1148,BigIntAdd
code-creation,Builtin,2,138122,0x7ff740a57dd4,1072,BigIntSubtractNoThrow
code-creation,Builtin,2,138137,0x7ff740a58214,1144,BigIntSubtract
code-creation,Builtin,2,138152,0x7ff740a58694,324,BigIntMultiplyNoThrow
code-creation,Builtin,2,138167,0x7ff740a58814,444,BigIntMultiply
code-creation,Builtin,2,138181,0x7ff740a589d4,552,BigIntDivideNoThrow
code-creation,Builtin,2,138196,0x7ff740a58c14,656,BigIntDivide
code-creation,Builtin,2,138210,0x7ff740a58ed4,464,BigIntModulusNoThrow
code-creation,Builtin,2,138225,0x7ff740a590d4,572,BigIntModulus
code-creation,Builtin,2,138238,0x7ff740a59314,960,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,138253,0x7ff740a59714,1116,BigIntBitwiseAnd
code-creation,Builtin,2,138267,0x7ff740a59b94,940,BigIntBitwiseOrNoThrow
code-creation,Builtin,2,138282,0x7ff740a59f54,1064,BigIntBitwiseOr
code-creation,Builtin,2,138298,0x7ff740a5a394,976,BigIntBitwiseXorNoThrow
code-creation,Builtin,2,138324,0x7ff740a5a794,1132,BigIntBitwiseXor
code-creation,Builtin,2,138339,0x7ff740a5ac14,1280,BigIntShiftLeftNoThrow
code-creation,Builtin,2,138354,0x7ff740a5b154,1388,BigIntShiftLeft
code-creation,Builtin,2,138374,0x7ff740a5b6d4,1280,BigIntShiftRightNoThrow
code-creation,Builtin,2,138395,0x7ff740a5bc14,1388,BigIntShiftRight
code-creation,Builtin,2,138410,0x7ff740a5c194,108,BigIntEqual
code-creation,Builtin,2,138425,0x7ff740a5c214,168,BigIntLessThan
code-creation,Builtin,2,138437,0x7ff740a5c2d4,168,BigIntGreaterThan
code-creation,Builtin,2,138461,0x7ff740a5c394,168,BigIntLessThanOrEqual
code-creation,Builtin,2,138480,0x7ff740a5c454,168,BigIntGreaterThanOrEqual
code-creation,Builtin,2,138504,0x7ff740a5c514,264,BigIntUnaryMinus
code-creation,Builtin,2,138518,0x7ff740a5c654,1992,ToString
code-creation,Builtin,2,138531,0x7ff740a5ce54,160,StringPrototypeToString
code-creation,Builtin,2,138545,0x7ff740a5cf14,160,StringPrototypeValueOf
code-creation,Builtin,2,138559,0x7ff740a5cfd4,2232,StringToList
code-creation,Builtin,2,138572,0x7ff740a5d894,788,StringPrototypeCharAt
code-creation,Builtin,2,138586,0x7ff740a5dbd4,680,StringPrototypeCharCodeAt
code-creation,Builtin,2,138600,0x7ff740a5de94,1188,StringPrototypeCodePointAt
code-creation,Builtin,2,138615,0x7ff740a5e354,416,StringPrototypeConcat
code-creation,Builtin,2,138629,0x7ff740a5e514,1048,StringConstructor
code-creation,Builtin,2,138642,0x7ff740a5e954,2060,StringAddConvertLeft
code-creation,Builtin,2,138656,0x7ff740a5f194,2084,StringAddConvertRight
code-creation,Builtin,2,138670,0x7ff740a5f9d4,572,StringCharAt
code-creation,Builtin,2,138683,0x7ff740a5fc14,16,FastNewClosureBaseline
code-creation,Builtin,2,138697,0x7ff740a5fc54,228,FastNewFunctionContextEval
code-creation,Builtin,2,138711,0x7ff740a5fd54,228,FastNewFunctionContextFunction
code-creation,Builtin,2,138726,0x7ff740a5fe54,240,CreateRegExpLiteral
code-creation,Builtin,2,138739,0x7ff740a5ff54,1188,CreateShallowArrayLiteral
code-creation,Builtin,2,138753,0x7ff740a60414,480,CreateEmptyArrayLiteral
code-creation,Builtin,2,138767,0x7ff740a60614,2020,CreateShallowObjectLiteral
code-creation,Builtin,2,138781,0x7ff740a60e14,392,ObjectConstructor
code-creation,Builtin,2,138805,0x7ff740a60fd4,188,CreateEmptyLiteralObject
code-creation,Builtin,2,138818,0x7ff740a61094,540,NumberConstructor
code-creation,Builtin,2,138831,0x7ff740a612d4,60,GenericLazyDeoptContinuation
code-creation,Builtin,2,138845,0x7ff740a61314,60,StringToNumber
code-creation,Builtin,2,138858,0x7ff740a61354,188,NonNumberToNumber
code-creation,Builtin,2,138871,0x7ff740a61414,244,NonNumberToNumeric
code-creation,Builtin,2,138932,0x7ff740a61514,36,ToNumeric
code-creation,Builtin,2,138950,0x7ff740a61554,1272,NumberToString
code-creation,Builtin,2,138964,0x7ff740a61a54,108,ToBoolean
code-creation,Builtin,2,138976,0x7ff740a61ad4,104,ToBooleanForBaselineJump
code-creation,Builtin,2,138990,0x7ff740a61b54,600,ToLength
code-creation,Builtin,2,139003,0x7ff740a61dd4,1312,ToName
code-creation,Builtin,2,139015,0x7ff740a62314,864,ToObject
code-creation,Builtin,2,139028,0x7ff740a62694,236,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,139042,0x7ff740a62794,236,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,139056,0x7ff740a62894,584,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,139069,0x7ff740a62b14,20,OrdinaryToPrimitive_Number
code-creation,Builtin,2,139083,0x7ff740a62b54,380,OrdinaryToPrimitive_Number_Inline
code-creation,Builtin,2,139097,0x7ff740a62cd4,380,OrdinaryToPrimitive_String
code-creation,Builtin,2,139111,0x7ff740a62e54,224,FastConsoleAssert
code-creation,Builtin,2,139124,0x7ff740a62f54,184,DataViewPrototypeGetBuffer
code-creation,Builtin,2,139138,0x7ff740a63014,764,DataViewPrototypeGetByteLength
code-creation,Builtin,2,139152,0x7ff740a63314,440,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,139166,0x7ff740a634d4,848,DataViewPrototypeGetUint8
code-creation,Builtin,2,139180,0x7ff740a63854,848,DataViewPrototypeGetInt8
code-creation,Builtin,2,139194,0x7ff740a63bd4,932,DataViewPrototypeGetUint16
code-creation,Builtin,2,139207,0x7ff740a63f94,928,DataViewPrototypeGetInt16
code-creation,Builtin,2,139222,0x7ff740a64354,1076,DataViewPrototypeGetUint32
code-creation,Builtin,2,139236,0x7ff740a64794,964,DataViewPrototypeGetInt32
code-creation,Builtin,2,139250,0x7ff740a64b94,1108,DataViewPrototypeGetFloat32
code-creation,Builtin,2,139264,0x7ff740a65014,1172,DataViewPrototypeGetFloat64
code-creation,Builtin,2,139278,0x7ff740a654d4,1228,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,139293,0x7ff740a659d4,1252,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,139318,0x7ff740a65ed4,1268,DataViewPrototypeSetUint8
code-creation,Builtin,2,139333,0x7ff740a663d4,1268,DataViewPrototypeSetInt8
code-creation,Builtin,2,139346,0x7ff740a668d4,1356,DataViewPrototypeSetUint16
code-creation,Builtin,2,139361,0x7ff740a66e54,1356,DataViewPrototypeSetInt16
code-creation,Builtin,2,139375,0x7ff740a673d4,1392,DataViewPrototypeSetUint32
code-creation,Builtin,2,139389,0x7ff740a67954,1392,DataViewPrototypeSetInt32
code-creation,Builtin,2,139403,0x7ff740a67ed4,1356,DataViewPrototypeSetFloat32
code-creation,Builtin,2,139417,0x7ff740a68454,1420,DataViewPrototypeSetFloat64
code-creation,Builtin,2,139432,0x7ff740a68a14,1268,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,139448,0x7ff740a68f14,1268,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,139462,0x7ff740a69414,928,FinalizationRegistryConstructor
code-creation,Builtin,2,139477,0x7ff740a697d4,1236,FinalizationRegistryRegister
code-creation,Builtin,2,139491,0x7ff740a69cd4,672,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,139506,0x7ff740a69f94,340,FunctionPrototypeHasInstance
code-creation,Builtin,2,139521,0x7ff740a6a114,940,FastFunctionPrototypeBind
code-creation,Builtin,2,139535,0x7ff740a6a4d4,92,IncBlockCounter
code-creation,Builtin,2,139560,0x7ff740a6a554,236,GetTemplateObject
code-creation,Builtin,2,139570,0x7ff740a6a654,92,ForInNext
code-creation,Builtin,2,139582,0x7ff740a6a6d4,136,GetImportMetaObjectBaseline
code-creation,Builtin,2,139595,0x7ff740a6a794,112,GetIteratorWithFeedback
code-creation,Builtin,2,139608,0x7ff740a6a814,100,GetIteratorBaseline
code-creation,Builtin,2,139620,0x7ff740a6a894,296,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,139633,0x7ff740a6a9d4,1072,CallIteratorWithFeedback
code-creation,Builtin,2,139646,0x7ff740a6ae14,916,IteratorConstructor
code-creation,Builtin,2,139659,0x7ff740a6b1d4,1012,IteratorFrom
code-creation,Builtin,2,139671,0x7ff740a6b5d4,160,WrapForValidIteratorPrototypeNext
code-creation,Builtin,2,139684,0x7ff740a6b694,408,WrapForValidIteratorPrototypeReturn
code-creation,Builtin,2,139698,0x7ff740a6b854,256,IteratorHelperPrototypeNext
code-creation,Builtin,2,139856,0x7ff740a6b994,400,IteratorHelperPrototypeReturn
code-creation,Builtin,2,139889,0x7ff740a6bb54,440,IteratorPrototypeMap
code-creation,Builtin,2,139905,0x7ff740a6bd14,1204,IteratorMapHelperNext
code-creation,Builtin,2,139921,0x7ff740a6c1d4,440,IteratorPrototypeFilter
code-creation,Builtin,2,139936,0x7ff740a6c394,1352,IteratorFilterHelperNext
code-creation,Builtin,2,139952,0x7ff740a6c914,568,IteratorPrototypeTake
code-creation,Builtin,2,139967,0x7ff740a6cb54,1356,IteratorTakeHelperNext
code-creation,Builtin,2,139982,0x7ff740a6d0d4,568,IteratorPrototypeDrop
code-creation,Builtin,2,139997,0x7ff740a6d314,1540,IteratorDropHelperNext
code-creation,Builtin,2,140012,0x7ff740a6d954,272,MathAbs
code-creation,Builtin,2,140027,0x7ff740a6da94,420,MathCeil
code-creation,Builtin,2,140041,0x7ff740a6dc54,424,MathFloor
code-creation,Builtin,2,140054,0x7ff740a6de14,472,MathRound
code-creation,Builtin,2,140068,0x7ff740a6e014,420,MathTrunc
code-creation,Builtin,2,140081,0x7ff740a6e1d4,364,MathPow
code-creation,Builtin,2,140095,0x7ff740a6e354,408,MathMax
code-creation,Builtin,2,140109,0x7ff740a6e514,412,MathMin
code-creation,Builtin,2,140122,0x7ff740a6e6d4,312,MathAcos
code-creation,Builtin,2,140138,0x7ff740a6e814,312,MathAcosh
code-creation,Builtin,2,140151,0x7ff740a6e954,312,MathAsin
code-creation,Builtin,2,140167,0x7ff740a6ea94,312,MathAsinh
code-creation,Builtin,2,140180,0x7ff740a6ebd4,312,MathAtan
code-creation,Builtin,2,140195,0x7ff740a6ed14,408,MathAtan2
code-creation,Builtin,2,140211,0x7ff740a6eed4,312,MathAtanh
code-creation,Builtin,2,140225,0x7ff740a6f014,312,MathCbrt
code-creation,Builtin,2,140239,0x7ff740a6f154,168,MathClz32
code-creation,Builtin,2,140254,0x7ff740a6f214,312,MathCos
code-creation,Builtin,2,140268,0x7ff740a6f354,312,MathCosh
code-creation,Builtin,2,140282,0x7ff740a6f494,312,MathExp
code-creation,Builtin,2,140297,0x7ff740a6f5d4,312,MathExpm1
code-creation,Builtin,2,140356,0x7ff740a6f714,264,MathFround
code-creation,Builtin,2,140381,0x7ff740a6f854,304,MathImul
code-creation,Builtin,2,140394,0x7ff740a6f994,312,MathLog
code-creation,Builtin,2,140407,0x7ff740a6fad4,312,MathLog1p
code-creation,Builtin,2,140422,0x7ff740a6fc14,312,MathLog10
code-creation,Builtin,2,140435,0x7ff740a6fd54,312,MathLog2
code-creation,Builtin,2,140458,0x7ff740a6fe94,312,MathSin
code-creation,Builtin,2,140470,0x7ff740a6ffd4,176,MathSign
code-creation,Builtin,2,140478,0x7ff740a70094,312,MathSinh
code-creation,Builtin,2,140488,0x7ff740a701d4,260,MathSqrt
code-creation,Builtin,2,140496,0x7ff740a70314,312,MathTan
code-creation,Builtin,2,140504,0x7ff740a70454,312,MathTanh
code-creation,Builtin,2,140515,0x7ff740a70594,1016,MathHypot
code-creation,Builtin,2,140523,0x7ff740a70994,324,MathRandom
code-creation,Builtin,2,140531,0x7ff740a70b14,2536,NumberPrototypeToString
code-creation,Builtin,2,140541,0x7ff740a71514,132,NumberIsFinite
code-creation,Builtin,2,140550,0x7ff740a715d4,332,NumberIsInteger
code-creation,Builtin,2,140558,0x7ff740a71754,128,NumberIsNaN
code-creation,Builtin,2,140566,0x7ff740a71814,364,NumberIsSafeInteger
code-creation,Builtin,2,140575,0x7ff740a71994,160,NumberPrototypeValueOf
code-creation,Builtin,2,140586,0x7ff740a71a54,200,NumberParseFloat
code-creation,Builtin,2,140594,0x7ff740a71b54,248,ParseInt
code-creation,Builtin,2,140603,0x7ff740a71c54,84,NumberParseInt
code-creation,Builtin,2,140612,0x7ff740a71cd4,816,Add
code-creation,Builtin,2,140625,0x7ff740a72014,428,Subtract
code-creation,Builtin,2,140636,0x7ff740a721d4,556,Multiply
code-creation,Builtin,2,140645,0x7ff740a72414,500,Divide
code-creation,Builtin,2,140653,0x7ff740a72614,548,Modulus
code-creation,Builtin,2,140664,0x7ff740a72854,520,Exponentiate
code-creation,Builtin,2,140673,0x7ff740a72a94,336,Negate
code-creation,Builtin,2,140684,0x7ff740a72c14,160,BitwiseNot
code-creation,Builtin,2,140697,0x7ff740a72cd4,112,Decrement
code-creation,Builtin,2,140708,0x7ff740a72d54,112,Increment
code-creation,Builtin,2,140717,0x7ff740a72dd4,516,ShiftLeft
code-creation,Builtin,2,140726,0x7ff740a73014,516,ShiftRight
code-creation,Builtin,2,140940,0x7ff740a73254,588,ShiftRightLogical
code-creation,Builtin,2,140994,0x7ff740a734d4,304,BitwiseAnd
code-creation,Builtin,2,141008,0x7ff740a73614,304,BitwiseOr
code-creation,Builtin,2,141021,0x7ff740a73754,304,BitwiseXor
code-creation,Builtin,2,141033,0x7ff740a73894,948,LessThan
code-creation,Builtin,2,141045,0x7ff740a73c54,948,LessThanOrEqual
code-creation,Builtin,2,141058,0x7ff740a74014,948,GreaterThan
code-creation,Builtin,2,141068,0x7ff740a743d4,948,GreaterThanOrEqual
code-creation,Builtin,2,141077,0x7ff740a74794,1060,Equal
code-creation,Builtin,2,141085,0x7ff740a74bd4,512,StrictEqual
code-creation,Builtin,2,141093,0x7ff740a74e14,3236,ObjectFromEntries
code-creation,Builtin,2,141102,0x7ff740a75ad4,820,CreateObjectWithoutProperties
code-creation,Builtin,2,141111,0x7ff740a75e14,144,ObjectIsExtensible
code-creation,Builtin,2,141120,0x7ff740a75ed4,152,ObjectPreventExtensions
code-creation,Builtin,2,141129,0x7ff740a75f94,148,ObjectGetPrototypeOf
code-creation,Builtin,2,141138,0x7ff740a76054,304,ObjectSetPrototypeOf
code-creation,Builtin,2,141147,0x7ff740a76194,80,ObjectPrototypeToString
code-creation,Builtin,2,141156,0x7ff740a76214,100,ObjectPrototypeValueOf
code-creation,Builtin,2,141164,0x7ff740a76294,176,ObjectPrototypeToLocaleString
code-creation,Builtin,2,141175,0x7ff740a76354,884,FulfillPromise
code-creation,Builtin,2,141184,0x7ff740a766d4,1024,RejectPromise
code-creation,Builtin,2,141192,0x7ff740a76b14,2500,NewPromiseCapability
code-creation,Builtin,2,141201,0x7ff740a77514,192,PromiseCapabilityDefaultReject
code-creation,Builtin,2,141210,0x7ff740a77614,172,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,141219,0x7ff740a776d4,1332,PerformPromiseThen
code-creation,Builtin,2,141230,0x7ff740a77c14,668,PromiseReject
code-creation,Builtin,2,141238,0x7ff740a77ed4,292,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,141273,0x7ff740a78014,108,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,141285,0x7ff740a78094,4524,PromiseAll
code-creation,Builtin,2,141295,0x7ff740a79254,4860,PromiseAllSettled
code-creation,Builtin,2,141325,0x7ff740a7a554,1096,PromiseAllResolveElementClosure
code-creation,Builtin,2,141336,0x7ff740a7a9d4,1444,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,141347,0x7ff740a7af94,1452,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,141357,0x7ff740a7b554,1172,PromiseAnyRejectElementClosure
code-creation,Builtin,2,141366,0x7ff740a7ba14,2724,PromiseAny
code-creation,Builtin,2,141375,0x7ff740a7c4d4,3040,PromiseConstructor
code-creation,Builtin,2,141385,0x7ff740a7d0d4,292,PromisePrototypeCatch
code-creation,Builtin,2,141395,0x7ff740a7d214,92,PromiseValueThunkFinally
code-creation,Builtin,2,141405,0x7ff740a7d294,84,PromiseThrowerFinally
code-creation,Builtin,2,141413,0x7ff740a7d314,988,PromiseCatchFinally
code-creation,Builtin,2,141423,0x7ff740a7d714,988,PromiseThenFinally
code-creation,Builtin,2,141432,0x7ff740a7db14,1676,PromisePrototypeFinally
code-creation,Builtin,2,141442,0x7ff740a7e1d4,1524,PromiseRace
code-creation,Builtin,2,141450,0x7ff740a7e7d4,348,PromiseFulfillReactionJob
code-creation,Builtin,2,141461,0x7ff740a7e954,468,PromiseRejectReactionJob
code-creation,Builtin,2,141471,0x7ff740a7eb54,156,PromiseResolveTrampoline
code-creation,Builtin,2,141481,0x7ff740a7ec14,704,PromiseResolve
code-creation,Builtin,2,141501,0x7ff740a7ef14,716,ResolvePromise
code-creation,Builtin,2,141509,0x7ff740a7f214,2288,PromisePrototypeThen
code-creation,Builtin,2,141520,0x7ff740a7fb14,1260,PromiseResolveThenableJob
code-creation,Builtin,2,141530,0x7ff740a80014,440,ProxyConstructor
code-creation,Builtin,2,141554,0x7ff740a801d4,2484,ProxyDeleteProperty
code-creation,Builtin,2,141584,0x7ff740a80b94,2800,ProxyGetProperty
code-creation,Builtin,2,141611,0x7ff740a81694,1088,ProxyGetPrototypeOf
code-creation,Builtin,2,141625,0x7ff740a81b14,2432,ProxyHasProperty
code-creation,Builtin,2,141634,0x7ff740a824d4,776,ProxyIsExtensible
code-creation,Builtin,2,141645,0x7ff740a82814,828,ProxyPreventExtensions
code-creation,Builtin,2,141655,0x7ff740a82b54,1136,ProxyRevocable
code-creation,Builtin,2,141758,0x7ff740a82fd4,136,ProxyRevoke
code-creation,Builtin,2,141774,0x7ff740a83094,2996,ProxySetProperty
code-creation,Builtin,2,141783,0x7ff740a83c54,1344,ProxySetPrototypeOf
code-creation,Builtin,2,141794,0x7ff740a841d4,208,ReflectIsExtensible
code-creation,Builtin,2,141803,0x7ff740a842d4,216,ReflectPreventExtensions
code-creation,Builtin,2,141811,0x7ff740a843d4,188,ReflectGetPrototypeOf
code-creation,Builtin,2,141820,0x7ff740a84494,332,ReflectSetPrototypeOf
code-creation,Builtin,2,141828,0x7ff740a84614,288,ReflectGet
code-creation,Builtin,2,141836,0x7ff740a84754,156,ReflectDeleteProperty
code-creation,Builtin,2,141844,0x7ff740a84814,144,ReflectHas
code-creation,Builtin,2,141852,0x7ff740a848d4,4680,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,141862,0x7ff740a85b54,5156,RegExpPrototypeExecSlow
code-creation,Builtin,2,141871,0x7ff740a86f94,5212,RegExpPrototypeExec
code-creation,Builtin,2,141879,0x7ff740a88414,2596,RegExpPrototypeMatchAll
code-creation,Builtin,2,141887,0x7ff740a88e54,9276,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,141898,0x7ff740a8b294,8732,RegExpMatchFast
code-creation,Builtin,2,141906,0x7ff740a8d4d4,3668,RegExpPrototypeMatch
code-creation,Builtin,2,141915,0x7ff740a8e354,5916,RegExpReplace
code-creation,Builtin,2,141923,0x7ff740a8fa94,508,RegExpPrototypeReplace
code-creation,Builtin,2,141931,0x7ff740a8fc94,1364,RegExpSearchFast
code-creation,Builtin,2,141939,0x7ff740a90214,1660,RegExpPrototypeSearch
code-creation,Builtin,2,141947,0x7ff740a90894,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,141956,0x7ff740a90994,5884,RegExpSplit
code-creation,Builtin,2,141964,0x7ff740a92094,468,RegExpPrototypeSplit
code-creation,Builtin,2,141973,0x7ff740a92294,2252,RegExpPrototypeTest
code-creation,Builtin,2,141981,0x7ff740a92b94,1288,RegExpPrototypeTestFast
code-creation,Builtin,2,141990,0x7ff740a930d4,236,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,141998,0x7ff740a931d4,252,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,142007,0x7ff740a932d4,252,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,142016,0x7ff740a933d4,252,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,142025,0x7ff740a934d4,252,RegExpPrototypeLinearGetter
code-creation,Builtin,2,142034,0x7ff740a935d4,252,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,142043,0x7ff740a936d4,284,RegExpPrototypeStickyGetter
code-creation,Builtin,2,142052,0x7ff740a93814,284,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,142060,0x7ff740a93954,252,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,142069,0x7ff740a93a54,2556,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,142078,0x7ff740a94454,1236,StringPrototypeAt
code-creation,Builtin,2,142086,0x7ff740a94954,3020,StringPrototypeEndsWith
code-creation,Builtin,2,142095,0x7ff740a95554,496,CreateHTML
code-creation,Builtin,2,142103,0x7ff740a95754,140,StringPrototypeAnchor
code-creation,Builtin,2,142111,0x7ff740a95814,120,StringPrototypeBig
code-creation,Builtin,2,142120,0x7ff740a95894,120,StringPrototypeBlink
code-creation,Builtin,2,142128,0x7ff740a95914,120,StringPrototypeBold
code-creation,Builtin,2,142136,0x7ff740a95994,148,StringPrototypeFontcolor
code-creation,Builtin,2,142145,0x7ff740a95a54,148,StringPrototypeFontsize
code-creation,Builtin,2,142153,0x7ff740a95b14,120,StringPrototypeFixed
code-creation,Builtin,2,142162,0x7ff740a95b94,120,StringPrototypeItalics
code-creation,Builtin,2,142170,0x7ff740a95c14,148,StringPrototypeLink
code-creation,Builtin,2,142178,0x7ff740a95cd4,120,StringPrototypeSmall
code-creation,Builtin,2,142187,0x7ff740a95d54,120,StringPrototypeStrike
code-creation,Builtin,2,142198,0x7ff740a95dd4,120,StringPrototypeSub
code-creation,Builtin,2,142212,0x7ff740a95e54,120,StringPrototypeSup
code-creation,Builtin,2,142226,0x7ff740a95ed4,1024,StringPrototypeIncludes
code-creation,Builtin,2,142240,0x7ff740a96314,648,StringPrototypeIndexOf
code-creation,Builtin,2,142254,0x7ff740a965d4,632,StringPrototypeIsWellFormed
code-creation,Builtin,2,142269,0x7ff740a96854,348,StringPrototypeIterator
code-creation,Builtin,2,142342,0x7ff740a969d4,1692,StringIteratorPrototypeNext
code-creation,Builtin,2,142361,0x7ff740a97094,1372,StringPrototypeMatch
code-creation,Builtin,2,142376,0x7ff740a97614,1372,StringPrototypeSearch
code-creation,Builtin,2,142390,0x7ff740a97b94,768,StringPrototypePadStart
code-creation,Builtin,2,142404,0x7ff740a97ed4,772,StringPrototypePadEnd
code-creation,Builtin,2,142417,0x7ff740a98214,120,StringRepeat
code-creation,Builtin,2,142431,0x7ff740a98294,408,StringPrototypeRepeat
code-creation,Builtin,2,142444,0x7ff740a98454,10736,StringPrototypeReplaceAll
code-creation,Builtin,2,142458,0x7ff740a9ae54,3212,StringPrototypeSlice
code-creation,Builtin,2,142472,0x7ff740a9bb14,3020,StringPrototypeStartsWith
code-creation,Builtin,2,142486,0x7ff740a9c714,3140,StringPrototypeSubstr
code-creation,Builtin,2,142500,0x7ff740a9d394,3064,StringPrototypeSubstring
code-creation,Builtin,2,142514,0x7ff740a9df94,928,StringPrototypeToWellFormed
code-creation,Builtin,2,142529,0x7ff740a9e354,6452,StringPrototypeTrim
code-creation,Builtin,2,142542,0x7ff740a9fc94,5940,StringPrototypeTrimStart
code-creation,Builtin,2,142567,0x7ff740aa13d4,5512,StringPrototypeTrimEnd
code-creation,Builtin,2,142578,0x7ff740aa2994,164,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,142592,0x7ff740aa2a54,160,SymbolPrototypeToPrimitive
code-creation,Builtin,2,142605,0x7ff740aa2b14,180,SymbolPrototypeToString
code-creation,Builtin,2,142617,0x7ff740aa2bd4,160,SymbolPrototypeValueOf
code-creation,Builtin,2,142630,0x7ff740aa2c94,1120,TypedArrayPrototypeAt
code-creation,Builtin,2,142642,0x7ff740aa3114,10544,CreateTypedArray
code-creation,Builtin,2,142654,0x7ff740aa5a54,1740,TypedArrayPrototypeEvery
code-creation,Builtin,2,142667,0x7ff740aa6154,412,TypedArrayPrototypeEntries
code-creation,Builtin,2,142682,0x7ff740aa6314,4448,TypedArrayPrototypeFilter
code-creation,Builtin,2,142696,0x7ff740aa7494,1740,TypedArrayPrototypeFind
code-creation,Builtin,2,142710,0x7ff740aa7b94,1744,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,142725,0x7ff740aa8294,1744,TypedArrayPrototypeFindLast
code-creation,Builtin,2,142740,0x7ff740aa8994,1752,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,142755,0x7ff740aa9094,1604,TypedArrayPrototypeForEach
code-creation,Builtin,2,142769,0x7ff740aa9714,3052,TypedArrayFrom
code-creation,Builtin,2,142782,0x7ff740aaa314,404,TypedArrayPrototypeKeys
code-creation,Builtin,2,142796,0x7ff740aaa4d4,1392,TypedArrayOf
code-creation,Builtin,2,142810,0x7ff740aaaa54,1700,TypedArrayPrototypeReduce
code-creation,Builtin,2,142824,0x7ff740aab114,1688,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,142838,0x7ff740aab7d4,3320,TypedArrayPrototypeSet
code-creation,Builtin,2,142852,0x7ff740aac4d4,4068,TypedArrayPrototypeSlice
code-creation,Builtin,2,142866,0x7ff740aad4d4,1740,TypedArrayPrototypeSome
code-creation,Builtin,2,142880,0x7ff740aadbd4,896,TypedArrayMergeSort
code-creation,Builtin,2,142894,0x7ff740aadf94,2260,TypedArrayPrototypeSort
code-creation,Builtin,2,142908,0x7ff740aae894,3084,TypedArrayPrototypeSubArray
code-creation,Builtin,2,142922,0x7ff740aaf4d4,1736,TypedArrayPrototypeToReversed
code-creation,Builtin,2,142937,0x7ff740aafbd4,3252,TypedArrayPrototypeToSorted
code-creation,Builtin,2,142951,0x7ff740ab0894,412,TypedArrayPrototypeValues
code-creation,Builtin,2,142965,0x7ff740ab0a54,3136,TypedArrayPrototypeWith
code-creation,Builtin,2,142979,0x7ff740ab16d4,1096,WeakRefConstructor
code-creation,Builtin,2,142992,0x7ff740ab1b54,188,WeakRefDeref
code-creation,Builtin,2,143006,0x7ff740ab1c14,644,NewSloppyArgumentsElements
code-creation,Builtin,2,143020,0x7ff740ab1ed4,296,NewStrictArgumentsElements
code-creation,Builtin,2,143035,0x7ff740ab2014,320,NewRestArgumentsElements
code-creation,Builtin,2,143049,0x7ff740ab2194,1400,FastNewSloppyArguments
code-creation,Builtin,2,143063,0x7ff740ab2714,508,FastNewStrictArguments
code-creation,Builtin,2,143077,0x7ff740ab2914,552,FastNewRestArguments
code-creation,Builtin,2,143090,0x7ff740ab2b54,664,StringSlowFlatten
code-creation,Builtin,2,143104,0x7ff740ab2e14,2036,StringIndexOf
code-creation,Builtin,2,143166,0x7ff740ab3614,2028,TestTurbofanType
code-creation,Builtin,2,143185,0x7ff740ab3e14,192,CheckTurbofanType
code-creation,Builtin,2,143199,0x7ff740ab3f14,520,CheckTurboshaftWord32Type
code-creation,Builtin,2,143213,0x7ff740ab4154,952,CheckTurboshaftWord64Type
code-creation,Builtin,2,143227,0x7ff740ab4514,652,CheckTurboshaftFloat32Type
code-creation,Builtin,2,143241,0x7ff740ab47d4,620,CheckTurboshaftFloat64Type
code-creation,Builtin,2,143255,0x7ff740ab4a54,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,143269,0x7ff740ab4a94,20,TestHelperPlus1
code-creation,Builtin,2,143283,0x7ff740ab4ad4,20,TestHelperPlus2
code-creation,Builtin,2,143296,0x7ff740ab4b14,92,NewSmiBox
code-creation,Builtin,2,143315,0x7ff740ab4b94,24,ReturnTwoValues
code-creation,Builtin,2,143328,0x7ff740ab4bd4,28,Load_FastSmiElements_0
code-creation,Builtin,2,143342,0x7ff740ab4c14,28,Load_FastObjectElements_0
code-creation,Builtin,2,143356,0x7ff740ab4c54,140,Load_FastDoubleElements_0
code-creation,Builtin,2,143370,0x7ff740ab4d14,28,Store_FastSmiElements_0
code-creation,Builtin,2,143394,0x7ff740ab4d54,92,Store_FastObjectElements_0
code-creation,Builtin,2,143409,0x7ff740ab4dd4,44,Store_FastDoubleElements_0
code-creation,Builtin,2,143423,0x7ff740ab4e14,36,Delete_FastSmiElements_0
code-creation,Builtin,2,143438,0x7ff740ab4e54,36,Delete_FastObjectElements_0
code-creation,Builtin,2,143451,0x7ff740ab4e94,40,Delete_FastDoubleElements_0
code-creation,Builtin,2,143465,0x7ff740ab4ed4,200,SortCompareDefault
code-creation,Builtin,2,143479,0x7ff740ab4fd4,96,SortCompareUserFn
code-creation,Builtin,2,143491,0x7ff740ab5054,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,143507,0x7ff740ab5094,300,Copy
code-creation,Builtin,2,143518,0x7ff740ab51d4,5732,MergeAt
code-creation,Builtin,2,143529,0x7ff740ab6854,824,GallopLeft
code-creation,Builtin,2,143540,0x7ff740ab6b94,868,GallopRight
code-creation,Builtin,2,143551,0x7ff740ab6f14,3728,ArrayTimSort
code-creation,Builtin,2,143562,0x7ff740ab7dd4,2020,ArrayPrototypeSort
code-creation,Builtin,2,143573,0x7ff740ab85d4,3560,StringFastLocaleCompare
code-creation,Builtin,2,143585,0x7ff740ab93d4,92,WasmInt32ToHeapNumber
code-creation,Builtin,2,143600,0x7ff740ab9454,32,WasmFuncRefToJS
code-creation,Builtin,2,143612,0x7ff740ab9494,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,143624,0x7ff740ab9514,76,WasmTaggedToFloat64
code-creation,Builtin,2,143636,0x7ff740ab9594,72,WasmMemoryGrow
code-creation,Builtin,2,143649,0x7ff740ab9614,88,WasmTableInit
code-creation,Builtin,2,143660,0x7ff740ab9694,88,WasmTableCopy
code-creation,Builtin,2,143817,0x7ff740ab9714,76,WasmTableFill
code-creation,Builtin,2,143851,0x7ff740ab9794,68,WasmTableGrow
code-creation,Builtin,2,143867,0x7ff740ab9814,76,WasmTableGet
code-creation,Builtin,2,143879,0x7ff740ab9894,148,WasmTableSet
code-creation,Builtin,2,143891,0x7ff740ab9954,144,WasmTableGetFuncRef
code-creation,Builtin,2,143903,0x7ff740ab9a14,104,WasmTableSetFuncRef
code-creation,Builtin,2,143917,0x7ff740ab9a94,80,WasmRefFunc
code-creation,Builtin,2,143929,0x7ff740ab9b14,136,WasmAllocateFixedArray
code-creation,Builtin,2,143943,0x7ff740ab9bd4,44,WasmThrow
code-creation,Builtin,2,143955,0x7ff740ab9c14,56,WasmRethrow
code-creation,Builtin,2,143967,0x7ff740ab9c54,44,WasmRethrowExplicitContext
code-creation,Builtin,2,143981,0x7ff740ab9c94,44,WasmTriggerTierUp
code-creation,Builtin,2,143993,0x7ff740ab9cd4,32,WasmStackGuard
code-creation,Builtin,2,144009,0x7ff740ab9d14,32,WasmStackOverflow
code-creation,Builtin,2,144025,0x7ff740ab9d54,40,WasmTraceMemory
code-creation,Builtin,2,144039,0x7ff740ab9d94,32,WasmTraceEnter
code-creation,Builtin,2,144054,0x7ff740ab9dd4,40,WasmTraceExit
code-creation,Builtin,2,144068,0x7ff740ab9e14,340,WasmAllocateJSArray
code-creation,Builtin,2,144082,0x7ff740ab9f94,100,WasmAllocateStructWithRtt
code-creation,Builtin,2,144097,0x7ff740aba014,128,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,144112,0x7ff740aba0d4,84,WasmArrayNewSegment
code-creation,Builtin,2,144125,0x7ff740aba154,136,WasmArrayCopyWithChecks
code-creation,Builtin,2,144266,0x7ff740aba214,100,WasmArrayCopy
code-creation,Builtin,2,144297,0x7ff740aba294,260,WasmAllocateObjectWrapper
code-creation,Builtin,2,144317,0x7ff740aba3d4,48,WasmSubtypeCheck
code-creation,Builtin,2,144331,0x7ff740aba414,8,WasmInt32ToNumber
code-creation,Builtin,2,144344,0x7ff740aba454,108,WasmUint32ToNumber
code-creation,Builtin,2,144358,0x7ff740aba4d4,140,UintPtr53ToNumber
code-creation,Builtin,2,144371,0x7ff740aba594,92,WasmAtomicNotify
code-creation,Builtin,2,144383,0x7ff740aba614,100,WasmI32AtomicWait
code-creation,Builtin,2,144396,0x7ff740aba694,88,WasmI64AtomicWait
code-creation,Builtin,2,144410,0x7ff740aba714,1224,CallRefIC
code-creation,Builtin,2,144421,0x7ff740abac14,1580,WasmGetOwnProperty
code-creation,Builtin,2,144432,0x7ff740abb254,76,WasmTrap
code-creation,Builtin,2,144444,0x7ff740abb2d4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,144458,0x7ff740abb314,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,144472,0x7ff740abb354,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,144487,0x7ff740abb394,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,144500,0x7ff740abb3d4,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,144514,0x7ff740abb414,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,144526,0x7ff740abb454,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,144539,0x7ff740abb494,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,144552,0x7ff740abb4d4,16,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,144566,0x7ff740abb514,16,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,144580,0x7ff740abb554,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,144594,0x7ff740abb594,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,144606,0x7ff740abb5d4,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,144619,0x7ff740abb614,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,144632,0x7ff740abb654,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,144648,0x7ff740abb694,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,145026,0x7ff740abb6d4,16,ThrowWasmTrapStringOffsetOutOfBounds
code-creation,Builtin,2,145071,0x7ff740abb714,1016,ExperimentalWasmConvertArrayToString
code-creation,Builtin,2,145090,0x7ff740abbb14,832,ExperimentalWasmConvertStringToArray
code-creation,Builtin,2,145105,0x7ff740abbe94,148,WasmStringNewWtf8
code-creation,Builtin,2,145120,0x7ff740abbf54,104,WasmStringNewWtf8Array
code-creation,Builtin,2,145134,0x7ff740abbfd4,140,WasmStringNewWtf16
code-creation,Builtin,2,145148,0x7ff740abc094,868,WasmStringNewWtf16Array
code-creation,Builtin,2,145160,0x7ff740abc414,52,WasmStringAsWtf16
code-creation,Builtin,2,145173,0x7ff740abc454,48,WasmStringConst
code-creation,Builtin,2,145186,0x7ff740abc494,108,WasmStringMeasureUtf8
code-creation,Builtin,2,145197,0x7ff740abc514,108,WasmStringMeasureWtf8
code-creation,Builtin,2,145210,0x7ff740abc594,156,WasmStringEncodeWtf8
code-creation,Builtin,2,145223,0x7ff740abc654,148,WasmStringEncodeWtf8Array
code-creation,Builtin,2,145313,0x7ff740abc714,104,WasmStringEncodeWtf16
code-creation,Builtin,2,145331,0x7ff740abc794,724,WasmStringEncodeWtf16Array
code-creation,Builtin,2,145345,0x7ff740abca94,68,ThrowToLowerCaseCalledOnNull
code-creation,Builtin,2,145538,0x7ff740abcb14,20,WasmStringConcat
code-creation,Builtin,2,145562,0x7ff740abcb54,60,WasmStringEqual
code-creation,Builtin,2,145576,0x7ff740abcb94,140,WasmStringIsUSVSequence
code-creation,Builtin,2,145589,0x7ff740abcc54,40,WasmStringAsWtf8
code-creation,Builtin,2,145601,0x7ff740abcc94,224,WasmStringViewWtf8Advance
code-creation,Builtin,2,145615,0x7ff740abcd94,168,WasmStringViewWtf8Encode
code-creation,Builtin,2,145629,0x7ff740abce54,172,WasmStringViewWtf8Slice
code-creation,Builtin,2,145642,0x7ff740abcf14,512,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,145656,0x7ff740abd154,140,WasmStringViewWtf16Encode
code-creation,Builtin,2,145727,0x7ff740abd214,2420,WasmStringViewWtf16Slice
code-creation,Builtin,2,145783,0x7ff740abdb94,100,WasmStringAsIter
code-creation,Builtin,2,145800,0x7ff740abdc14,1124,WasmStringViewIterNext
code-creation,Builtin,2,145970,0x7ff740abe094,1224,WasmStringViewIterAdvance
code-creation,Builtin,2,146028,0x7ff740abe594,1204,WasmStringViewIterRewind
code-creation,Builtin,2,146053,0x7ff740abea54,3252,WasmStringViewIterSlice
code-creation,Builtin,2,146066,0x7ff740abf714,80,WasmStringFromCodePoint
code-creation,Builtin,2,146078,0x7ff740abf794,36,WasmStringHash
code-creation,Builtin,2,146090,0x7ff740abf7d4,60,WasmExternInternalize
code-creation,Builtin,2,146102,0x7ff740abf814,164,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,146116,0x7ff740abf8d4,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,146129,0x7ff740abf914,108,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,146142,0x7ff740abf994,104,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,146156,0x7ff740abfa14,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,146170,0x7ff740abfa54,208,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,146183,0x7ff740abfb54,236,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,146200,0x7ff740abfc54,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,146215,0x7ff740abfc94,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,146246,0x7ff740abfcd4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,146270,0x7ff740abfd14,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,146287,0x7ff740abfd54,124,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,146311,0x7ff740abfdd4,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,146334,0x7ff740abfe14,40,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,146353,0x7ff740abfe54,40,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,146370,0x7ff740abfe94,40,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,146390,0x7ff740abfed4,24,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,146408,0x7ff740abff14,3508,Load_GenericElementsAccessor_0
code-creation,Builtin,2,146426,0x7ff740ac0cd4,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,146447,0x7ff740ac0d14,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,146466,0x7ff740ac0d54,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,146484,0x7ff740ac0d94,176,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,146505,0x7ff740ac0e54,544,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,146525,0x7ff740ac1094,108,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,146543,0x7ff740ac1114,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,146564,0x7ff740ac1154,516,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,146586,0x7ff740ac1394,104,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,146601,0x7ff740ac1414,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,146616,0x7ff740ac1454,512,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,146631,0x7ff740ac1694,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,146645,0x7ff740ac16d4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,146663,0x7ff740ac1714,972,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,146679,0x7ff740ac1b14,208,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,146694,0x7ff740ac1c14,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,146709,0x7ff740ac1c54,548,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,146725,0x7ff740ac1e94,236,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,146741,0x7ff740ac1f94,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,146757,0x7ff740ac1fd4,548,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,146774,0x7ff740ac2214,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,146790,0x7ff740ac2254,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,146806,0x7ff740ac2294,544,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,146822,0x7ff740ac24d4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,146970,0x7ff740ac2514,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,146999,0x7ff740ac2554,544,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,147016,0x7ff740ac2794,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,147030,0x7ff740ac27d4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,147045,0x7ff740ac2814,544,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,147071,0x7ff740ac2a54,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,147088,0x7ff740ac2a94,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,147105,0x7ff740ac2ad4,544,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,147121,0x7ff740ac2d14,124,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,147137,0x7ff740ac2d94,176,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,147152,0x7ff740ac2e54,544,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,147166,0x7ff740ac3094,12,CollatorConstructor
code-creation,Builtin,2,147180,0x7ff740ac30d4,12,CollatorInternalCompare
code-creation,Builtin,2,147194,0x7ff740ac3114,12,CollatorPrototypeCompare
code-creation,Builtin,2,147208,0x7ff740ac3154,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,147223,0x7ff740ac3194,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,147238,0x7ff740ac31d4,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,147252,0x7ff740ac3214,12,DatePrototypeToLocaleString
code-creation,Builtin,2,147266,0x7ff740ac3254,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,147279,0x7ff740ac3294,12,DateTimeFormatConstructor
code-creation,Builtin,2,147293,0x7ff740ac32d4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,147315,0x7ff740ac3314,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,147329,0x7ff740ac3354,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,147343,0x7ff740ac3394,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,147358,0x7ff740ac33d4,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,147372,0x7ff740ac3414,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,147390,0x7ff740ac3454,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,147404,0x7ff740ac3494,12,DisplayNamesConstructor
code-creation,Builtin,2,147419,0x7ff740ac34d4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,147433,0x7ff740ac3514,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,147448,0x7ff740ac3554,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,147463,0x7ff740ac3594,12,DurationFormatConstructor
code-creation,Builtin,2,147479,0x7ff740ac35d4,12,DurationFormatPrototypeFormat
code-creation,Builtin,2,147492,0x7ff740ac3614,12,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,147507,0x7ff740ac3654,12,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,147521,0x7ff740ac3694,12,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,147536,0x7ff740ac36d4,12,IntlGetCanonicalLocales
code-creation,Builtin,2,147550,0x7ff740ac3714,12,IntlSupportedValuesOf
code-creation,Builtin,2,147564,0x7ff740ac3754,12,ListFormatConstructor
code-creation,Builtin,2,147580,0x7ff740ac3794,200,ListFormatPrototypeFormat
code-creation,Builtin,2,147593,0x7ff740ac3894,200,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,147608,0x7ff740ac3994,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,147623,0x7ff740ac39d4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,147636,0x7ff740ac3a14,12,LocaleConstructor
code-creation,Builtin,2,147649,0x7ff740ac3a54,12,LocalePrototypeBaseName
code-creation,Builtin,2,147665,0x7ff740ac3a94,12,LocalePrototypeCalendar
code-creation,Builtin,2,147679,0x7ff740ac3ad4,12,LocalePrototypeCalendars
code-creation,Builtin,2,147695,0x7ff740ac3b14,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,147707,0x7ff740ac3b54,12,LocalePrototypeCollation
code-creation,Builtin,2,147763,0x7ff740ac3b94,12,LocalePrototypeCollations
code-creation,Builtin,2,147783,0x7ff740ac3bd4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,147802,0x7ff740ac3c14,12,LocalePrototypeHourCycles
code-creation,Builtin,2,147822,0x7ff740ac3c54,12,LocalePrototypeLanguage
code-creation,Builtin,2,147837,0x7ff740ac3c94,12,LocalePrototypeMaximize
code-creation,Builtin,2,147851,0x7ff740ac3cd4,12,LocalePrototypeMinimize
code-creation,Builtin,2,147866,0x7ff740ac3d14,12,LocalePrototypeNumeric
code-creation,Builtin,2,147881,0x7ff740ac3d54,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,147896,0x7ff740ac3d94,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,147912,0x7ff740ac3dd4,12,LocalePrototypeRegion
code-creation,Builtin,2,147926,0x7ff740ac3e14,12,LocalePrototypeScript
code-creation,Builtin,2,147939,0x7ff740ac3e54,12,LocalePrototypeTextInfo
code-creation,Builtin,2,147953,0x7ff740ac3e94,12,LocalePrototypeTimeZones
code-creation,Builtin,2,147968,0x7ff740ac3ed4,12,LocalePrototypeToString
code-creation,Builtin,2,147982,0x7ff740ac3f14,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,147991,0x7ff740ac3f54,12,NumberFormatConstructor
code-creation,Builtin,2,147999,0x7ff740ac3f94,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,148008,0x7ff740ac3fd4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,148017,0x7ff740ac4014,12,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,148026,0x7ff740ac4054,12,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,148036,0x7ff740ac4094,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,148045,0x7ff740ac40d4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,148055,0x7ff740ac4114,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,148064,0x7ff740ac4154,12,PluralRulesConstructor
code-creation,Builtin,2,148072,0x7ff740ac4194,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,148081,0x7ff740ac41d4,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,148090,0x7ff740ac4214,12,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,148099,0x7ff740ac4254,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,148108,0x7ff740ac4294,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,148116,0x7ff740ac42d4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,148125,0x7ff740ac4314,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,148137,0x7ff740ac4354,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,148153,0x7ff740ac4394,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,148168,0x7ff740ac43d4,12,SegmenterConstructor
code-creation,Builtin,2,148182,0x7ff740ac4414,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,148197,0x7ff740ac4454,12,SegmenterPrototypeSegment
code-creation,Builtin,2,148211,0x7ff740ac4494,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,148225,0x7ff740ac44d4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,148239,0x7ff740ac4514,12,SegmentsPrototypeContaining
code-creation,Builtin,2,148254,0x7ff740ac4554,12,SegmentsPrototypeIterator
code-creation,Builtin,2,148268,0x7ff740ac4594,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,148284,0x7ff740ac45d4,1160,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,148315,0x7ff740ac4a94,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,148337,0x7ff740ac4ad4,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,148360,0x7ff740ac4bd4,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,148376,0x7ff740ac4c14,648,StringToLowerCaseIntl
code-creation,Builtin,2,148392,0x7ff740ac4ed4,12,TemporalCalendarPrototypeEra
code-creation,Builtin,2,148412,0x7ff740ac4f14,12,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,148431,0x7ff740ac4f54,12,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,148454,0x7ff740ac4f94,12,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,148471,0x7ff740ac4fd4,12,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,148493,0x7ff740ac5014,12,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,148521,0x7ff740ac5054,12,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,148540,0x7ff740ac5094,12,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,148566,0x7ff740ac50d4,12,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,148600,0x7ff740ac5114,12,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,148613,0x7ff740ac5154,12,V8BreakIteratorConstructor
code-creation,Builtin,2,148626,0x7ff740ac5194,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,148639,0x7ff740ac51d4,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,148652,0x7ff740ac5214,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,148665,0x7ff740ac5254,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,148678,0x7ff740ac5294,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,148691,0x7ff740ac52d4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,148704,0x7ff740ac5314,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,148717,0x7ff740ac5354,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,148730,0x7ff740ac5394,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,148743,0x7ff740ac53d4,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,148756,0x7ff740ac5414,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,148770,0x7ff740ac5454,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,148792,0x7ff740ac5494,24,Wide
code-creation,BytecodeHandler,0,148804,0x7ff740ac54d4,24,ExtraWide
code-creation,BytecodeHandler,0,148816,0x7ff740ac5514,104,DebugBreakWide
code-creation,BytecodeHandler,0,148828,0x7ff740ac5594,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,148841,0x7ff740ac5614,164,DebugBreak0
code-creation,BytecodeHandler,0,148853,0x7ff740ac56d4,104,DebugBreak1
code-creation,BytecodeHandler,0,148864,0x7ff740ac5754,104,DebugBreak2
code-creation,BytecodeHandler,0,148876,0x7ff740ac57d4,104,DebugBreak3
code-creation,BytecodeHandler,0,148888,0x7ff740ac5854,104,DebugBreak4
code-creation,BytecodeHandler,0,148899,0x7ff740ac58d4,104,DebugBreak5
code-creation,BytecodeHandler,0,148911,0x7ff740ac5954,104,DebugBreak6
code-creation,BytecodeHandler,0,148923,0x7ff740ac59d4,32,Ldar
code-creation,BytecodeHandler,0,148934,0x7ff740ac5a14,56,LdaZero
tick,0x7fff1c16bea4,148954,0,0x0,6
tick,0x7fff1c16bea4,148975,0,0x0,6
code-creation,BytecodeHandler,0,148987,0x7ff740ac5a54,64,LdaSmi
code-creation,BytecodeHandler,0,149012,0x7ff740ac5ad4,64,LdaUndefined
code-creation,BytecodeHandler,0,149021,0x7ff740ac5b54,64,LdaNull
code-creation,BytecodeHandler,0,149029,0x7ff740ac5bd4,64,LdaTheHole
code-creation,BytecodeHandler,0,149037,0x7ff740ac5c54,24,LdaTrue
code-creation,BytecodeHandler,0,149045,0x7ff740ac5c94,24,LdaFalse
code-creation,BytecodeHandler,0,149053,0x7ff740ac5cd4,64,LdaConstant
code-creation,BytecodeHandler,0,149061,0x7ff740ac5d54,124,LdaContextSlot
code-creation,BytecodeHandler,0,149069,0x7ff740ac5dd4,124,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,149078,0x7ff740ac5e54,72,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,149087,0x7ff740ac5ed4,72,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,149096,0x7ff740ac5f54,32,Star
code-creation,BytecodeHandler,0,149103,0x7ff740ac5f94,48,Mov
code-creation,BytecodeHandler,0,149111,0x7ff740ac5fd4,40,PushContext
code-creation,BytecodeHandler,0,149119,0x7ff740ac6014,36,PopContext
code-creation,BytecodeHandler,0,149127,0x7ff740ac6054,56,TestReferenceEqual
code-creation,BytecodeHandler,0,149135,0x7ff740ac6094,60,TestUndetectable
code-creation,BytecodeHandler,0,149143,0x7ff740ac60d4,44,TestNull
code-creation,BytecodeHandler,0,149151,0x7ff740ac6114,44,TestUndefined
code-creation,BytecodeHandler,0,149159,0x7ff740ac6154,368,TestTypeOf
code-creation,BytecodeHandler,0,149167,0x7ff740ac62d4,5588,LdaGlobal
code-creation,BytecodeHandler,0,149175,0x7ff740ac78d4,4388,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,149184,0x7ff740ac8a14,160,StaGlobal
code-creation,BytecodeHandler,0,149191,0x7ff740ac8ad4,160,StaContextSlot
code-creation,BytecodeHandler,0,149200,0x7ff740ac8b94,112,StaCurrentContextSlot
code-creation,BytecodeHandler,0,149209,0x7ff740ac8c14,124,LdaLookupSlot
code-creation,BytecodeHandler,0,149221,0x7ff740ac8c94,256,LdaLookupContextSlot
code-creation,BytecodeHandler,0,149232,0x7ff740ac8dd4,4692,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,149241,0x7ff740aca054,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,149250,0x7ff740aca0d4,256,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,149259,0x7ff740aca214,4644,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,149268,0x7ff740acb454,220,StaLookupSlot
code-creation,BytecodeHandler,0,149276,0x7ff740acb554,5244,GetNamedProperty
code-creation,BytecodeHandler,0,149285,0x7ff740acc9d4,184,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,149294,0x7ff740acca94,200,GetKeyedProperty
code-creation,BytecodeHandler,0,149304,0x7ff740accb94,168,LdaModuleVariable
code-creation,BytecodeHandler,0,149312,0x7ff740accc54,300,StaModuleVariable
code-creation,BytecodeHandler,0,149321,0x7ff740accd94,176,SetNamedProperty
code-creation,BytecodeHandler,0,149329,0x7ff740acce54,176,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,149337,0x7ff740accf14,168,SetKeyedProperty
code-creation,BytecodeHandler,0,149345,0x7ff740accfd4,184,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,149354,0x7ff740acd094,168,StaInArrayLiteral
code-creation,BytecodeHandler,0,149363,0x7ff740acd154,200,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,149372,0x7ff740acd254,1504,Add
code-creation,BytecodeHandler,0,149379,0x7ff740acd854,1472,Sub
code-creation,BytecodeHandler,0,149387,0x7ff740acde54,1592,Mul
code-creation,BytecodeHandler,0,149394,0x7ff740ace494,1660,Div
code-creation,BytecodeHandler,0,149402,0x7ff740aceb14,1608,Mod
code-creation,BytecodeHandler,0,149409,0x7ff740acf194,960,Exp
code-creation,BytecodeHandler,0,149417,0x7ff740acf594,1796,BitwiseOr
code-creation,BytecodeHandler,0,149425,0x7ff740acfcd4,1800,BitwiseXor
code-creation,BytecodeHandler,0,149433,0x7ff740ad0414,1796,BitwiseAnd
code-creation,BytecodeHandler,0,149440,0x7ff740ad0b54,1216,ShiftLeft
code-creation,BytecodeHandler,0,149448,0x7ff740ad1054,1216,ShiftRight
code-creation,BytecodeHandler,0,149456,0x7ff740ad1554,1288,ShiftRightLogical
code-creation,BytecodeHandler,0,149464,0x7ff740ad1a94,1388,AddSmi
code-creation,BytecodeHandler,0,149472,0x7ff740ad2014,1356,SubSmi
code-creation,BytecodeHandler,0,149480,0x7ff740ad2594,1432,MulSmi
code-creation,BytecodeHandler,0,149487,0x7ff740ad2b54,1572,DivSmi
code-creation,BytecodeHandler,0,149495,0x7ff740ad3194,1440,ModSmi
code-creation,BytecodeHandler,0,149502,0x7ff740ad3754,848,ExpSmi
code-creation,BytecodeHandler,0,149510,0x7ff740ad3ad4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,149518,0x7ff740ad3cd4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,149526,0x7ff740ad3ed4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,149534,0x7ff740ad40d4,508,ShiftLeftSmi
code-creation,BytecodeHandler,0,149542,0x7ff740ad42d4,496,ShiftRightSmi
code-creation,BytecodeHandler,0,149550,0x7ff740ad44d4,784,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,149558,0x7ff740ad4814,644,Inc
code-creation,BytecodeHandler,0,149566,0x7ff740ad4ad4,644,Dec
code-creation,BytecodeHandler,0,149573,0x7ff740ad4d94,632,Negate
code-creation,BytecodeHandler,0,149581,0x7ff740ad5014,504,BitwiseNot
code-creation,BytecodeHandler,0,149589,0x7ff740ad5214,124,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,149597,0x7ff740ad5294,44,LogicalNot
code-creation,BytecodeHandler,0,149605,0x7ff740ad52d4,204,TypeOf
code-creation,BytecodeHandler,0,149612,0x7ff740ad53d4,124,DeletePropertyStrict
code-creation,BytecodeHandler,0,149621,0x7ff740ad5454,116,DeletePropertySloppy
code-creation,BytecodeHandler,0,149629,0x7ff740ad54d4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,149648,0x7ff740ad5514,352,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,149657,0x7ff740ad5694,1108,CallAnyReceiver
code-creation,BytecodeHandler,0,149665,0x7ff740ad5b14,1108,CallProperty
code-creation,BytecodeHandler,0,149673,0x7ff740ad5f94,1016,CallProperty0
code-creation,BytecodeHandler,0,149681,0x7ff740ad6394,1028,CallProperty1
code-creation,BytecodeHandler,0,149691,0x7ff740ad67d4,1040,CallProperty2
code-creation,BytecodeHandler,0,149700,0x7ff740ad6c14,1000,CallUndefinedReceiver
code-creation,BytecodeHandler,0,149709,0x7ff740ad7014,1040,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,149717,0x7ff740ad7454,1028,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,149726,0x7ff740ad7894,1048,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,149734,0x7ff740ad7cd4,1108,CallWithSpread
code-creation,BytecodeHandler,0,149742,0x7ff740ad8154,128,CallRuntime
code-creation,BytecodeHandler,0,149750,0x7ff740ad8214,164,CallRuntimeForPair
code-creation,BytecodeHandler,0,149759,0x7ff740ad82d4,80,CallJSRuntime
code-creation,BytecodeHandler,0,149767,0x7ff740ad8354,1328,InvokeIntrinsic
code-creation,BytecodeHandler,0,149775,0x7ff740ad8894,1016,Construct
code-creation,BytecodeHandler,0,149783,0x7ff740ad8c94,512,ConstructWithSpread
code-creation,BytecodeHandler,0,149791,0x7ff740ad8ed4,2180,TestEqual
code-creation,BytecodeHandler,0,149799,0x7ff740ad9794,1336,TestEqualStrict
code-creation,BytecodeHandler,0,149807,0x7ff740ad9cd4,1808,TestLessThan
code-creation,BytecodeHandler,0,149815,0x7ff740ada414,1808,TestGreaterThan
code-creation,BytecodeHandler,0,149823,0x7ff740adab54,1808,TestLessThanOrEqual
code-creation,BytecodeHandler,0,149832,0x7ff740adb294,1808,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,149841,0x7ff740adb9d4,884,TestInstanceOf
code-creation,BytecodeHandler,0,149849,0x7ff740adbd54,156,TestIn
code-creation,BytecodeHandler,0,149856,0x7ff740adbe14,116,ToName
code-creation,BytecodeHandler,0,149864,0x7ff740adbe94,220,ToNumber
code-creation,BytecodeHandler,0,149872,0x7ff740adbf94,244,ToNumeric
code-creation,BytecodeHandler,0,149880,0x7ff740adc094,116,ToObject
code-creation,BytecodeHandler,0,149888,0x7ff740adc114,124,ToString
code-creation,BytecodeHandler,0,149895,0x7ff740adc194,396,CreateRegExpLiteral
code-creation,BytecodeHandler,0,149904,0x7ff740adc354,1568,CreateArrayLiteral
code-creation,BytecodeHandler,0,149912,0x7ff740adc994,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,149921,0x7ff740adca14,764,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,149929,0x7ff740adcd14,2376,CreateObjectLiteral
code-creation,BytecodeHandler,0,149938,0x7ff740add694,236,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,149946,0x7ff740add794,172,CloneObject
code-creation,BytecodeHandler,0,149955,0x7ff740add854,204,GetTemplateObject
code-creation,BytecodeHandler,0,149963,0x7ff740add954,336,CreateClosure
code-creation,BytecodeHandler,0,149971,0x7ff740addad4,116,CreateBlockContext
code-creation,BytecodeHandler,0,149979,0x7ff740addb54,132,CreateCatchContext
code-creation,BytecodeHandler,0,149987,0x7ff740addc14,292,CreateFunctionContext
code-creation,BytecodeHandler,0,149996,0x7ff740addd54,292,CreateEvalContext
code-creation,BytecodeHandler,0,150004,0x7ff740adde94,132,CreateWithContext
code-creation,BytecodeHandler,0,150012,0x7ff740addf54,1556,CreateMappedArguments
code-creation,BytecodeHandler,0,150021,0x7ff740ade594,572,CreateUnmappedArguments
code-creation,BytecodeHandler,0,150030,0x7ff740ade7d4,624,CreateRestParameter
code-creation,BytecodeHandler,0,150038,0x7ff740adea54,868,JumpLoop
code-creation,BytecodeHandler,0,150046,0x7ff740adedd4,44,Jump
code-creation,BytecodeHandler,0,150053,0x7ff740adee14,56,JumpConstant
code-creation,BytecodeHandler,0,150061,0x7ff740adee54,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,150070,0x7ff740adeed4,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,150078,0x7ff740adef54,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,150087,0x7ff740adefd4,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,150096,0x7ff740adf054,92,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,150105,0x7ff740adf0d4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,150113,0x7ff740adf154,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,150122,0x7ff740adf1d4,92,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,150130,0x7ff740adf254,164,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,150140,0x7ff740adf314,160,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,150150,0x7ff740adf3d4,148,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,150159,0x7ff740adf494,148,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,150167,0x7ff740adf554,68,JumpIfTrue
code-creation,BytecodeHandler,0,150175,0x7ff740adf5d4,68,JumpIfFalse
code-creation,BytecodeHandler,0,150183,0x7ff740adf654,68,JumpIfNull
code-creation,BytecodeHandler,0,150191,0x7ff740adf6d4,68,JumpIfNotNull
code-creation,BytecodeHandler,0,150199,0x7ff740adf754,68,JumpIfUndefined
code-creation,BytecodeHandler,0,150207,0x7ff740adf7d4,68,JumpIfNotUndefined
code-creation,BytecodeHandler,0,150215,0x7ff740adf854,76,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,150224,0x7ff740adf8d4,80,JumpIfJSReceiver
code-creation,BytecodeHandler,0,150232,0x7ff740adf954,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,150241,0x7ff740adf9d4,472,ForInEnumerate
code-creation,BytecodeHandler,0,150249,0x7ff740adfbd4,260,ForInPrepare
code-creation,BytecodeHandler,0,150257,0x7ff740adfd14,64,ForInContinue
code-creation,BytecodeHandler,0,150265,0x7ff740adfd94,260,ForInNext
code-creation,BytecodeHandler,0,150273,0x7ff740adfed4,48,ForInStep
code-creation,BytecodeHandler,0,150280,0x7ff740adff14,36,SetPendingMessage
code-creation,BytecodeHandler,0,150289,0x7ff740adff54,116,Throw
code-creation,BytecodeHandler,0,150296,0x7ff740adffd4,116,ReThrow
code-creation,BytecodeHandler,0,150305,0x7ff740ae0054,112,Return
code-creation,BytecodeHandler,0,150313,0x7ff740ae00d4,188,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,150322,0x7ff740ae0194,136,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,150331,0x7ff740ae0254,136,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,150340,0x7ff740ae0314,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,150349,0x7ff740ae03d4,124,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,150358,0x7ff740ae0454,520,SuspendGenerator
code-creation,BytecodeHandler,0,150366,0x7ff740ae0694,140,ResumeGenerator
code-creation,BytecodeHandler,0,150374,0x7ff740ae0754,164,GetIterator
code-creation,BytecodeHandler,0,150390,0x7ff740ae0814,116,Debugger
code-creation,BytecodeHandler,0,150398,0x7ff740ae0894,124,IncBlockCounter
code-creation,BytecodeHandler,0,150407,0x7ff740ae0914,56,Abort
code-creation,BytecodeHandler,0,150415,0x7ff740ae0954,32,Star0
code-creation,BytecodeHandler,0,150422,0x7ff740ae0994,60,Illegal
code-creation,BytecodeHandler,0,150434,0x7ff740ae09d4,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,150443,0x7ff740ae0a54,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,150452,0x7ff740ae0ad4,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,150460,0x7ff740ae0b54,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,150468,0x7ff740ae0bd4,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,150477,0x7ff740ae0c54,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,150486,0x7ff740ae0cd4,32,Ldar.Wide
code-creation,BytecodeHandler,0,150494,0x7ff740ae0d14,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,150502,0x7ff740ae0d54,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,150510,0x7ff740ae0d94,96,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,150519,0x7ff740ae0e14,96,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,150528,0x7ff740ae0e94,44,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,150538,0x7ff740ae0ed4,44,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,150547,0x7ff740ae0f14,32,Star.Wide
code-creation,BytecodeHandler,0,150555,0x7ff740ae0f54,48,Mov.Wide
code-creation,BytecodeHandler,0,150563,0x7ff740ae0f94,40,PushContext.Wide
code-creation,BytecodeHandler,0,150572,0x7ff740ae0fd4,36,PopContext.Wide
code-creation,BytecodeHandler,0,150580,0x7ff740ae1014,56,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,150589,0x7ff740ae1054,4536,LdaGlobal.Wide
code-creation,BytecodeHandler,0,150598,0x7ff740ae2214,4460,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,150607,0x7ff740ae3394,164,StaGlobal.Wide
code-creation,BytecodeHandler,0,150617,0x7ff740ae3454,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,150627,0x7ff740ae3514,112,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,150637,0x7ff740ae3594,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,150645,0x7ff740ae3654,260,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,150654,0x7ff740ae3794,4716,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,150663,0x7ff740ae4a14,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,150673,0x7ff740ae4ad4,260,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,150683,0x7ff740ae4c14,4660,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,150693,0x7ff740ae5e54,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,150701,0x7ff740ae5f54,5300,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,150711,0x7ff740ae7414,192,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,150720,0x7ff740ae7514,156,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,150728,0x7ff740ae75d4,168,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,150737,0x7ff740ae7694,308,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,150746,0x7ff740ae77d4,180,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,150755,0x7ff740ae7894,180,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,150764,0x7ff740ae7954,172,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,150772,0x7ff740ae7a14,188,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,150782,0x7ff740ae7ad4,172,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,150791,0x7ff740ae7b94,204,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,150801,0x7ff740ae7c94,1476,Add.Wide
code-creation,BytecodeHandler,0,150809,0x7ff740ae8294,1440,Sub.Wide
code-creation,BytecodeHandler,0,150816,0x7ff740ae8854,1560,Mul.Wide
code-creation,BytecodeHandler,0,150824,0x7ff740ae8e94,1672,Div.Wide
code-creation,BytecodeHandler,0,150832,0x7ff740ae9554,1624,Mod.Wide
code-creation,BytecodeHandler,0,150840,0x7ff740ae9bd4,984,Exp.Wide
code-creation,BytecodeHandler,0,150848,0x7ff740ae9fd4,1848,BitwiseOr.Wide
code-creation,BytecodeHandler,0,150856,0x7ff740aea714,1852,BitwiseXor.Wide
code-creation,BytecodeHandler,0,150864,0x7ff740aeae54,1848,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,150872,0x7ff740aeb594,1272,ShiftLeft.Wide
code-creation,BytecodeHandler,0,150881,0x7ff740aeba94,1272,ShiftRight.Wide
code-creation,BytecodeHandler,0,150889,0x7ff740aebf94,1344,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,150897,0x7ff740aec514,1368,AddSmi.Wide
code-creation,BytecodeHandler,0,150905,0x7ff740aeca94,1332,SubSmi.Wide
code-creation,BytecodeHandler,0,150913,0x7ff740aecfd4,1444,MulSmi.Wide
code-creation,BytecodeHandler,0,150921,0x7ff740aed594,1588,DivSmi.Wide
code-creation,BytecodeHandler,0,150929,0x7ff740aedbd4,1456,ModSmi.Wide
code-creation,BytecodeHandler,0,150937,0x7ff740aee194,844,ExpSmi.Wide
code-creation,BytecodeHandler,0,150945,0x7ff740aee514,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,150954,0x7ff740aee714,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,150962,0x7ff740aee914,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,150971,0x7ff740aeeb14,516,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,150979,0x7ff740aeed54,500,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,150988,0x7ff740aeef54,792,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,150996,0x7ff740aef294,616,Inc.Wide
code-creation,BytecodeHandler,0,151004,0x7ff740aef514,616,Dec.Wide
code-creation,BytecodeHandler,0,151012,0x7ff740aef794,636,Negate.Wide
code-creation,BytecodeHandler,0,151020,0x7ff740aefa14,516,BitwiseNot.Wide
code-creation,BytecodeHandler,0,151028,0x7ff740aefc54,128,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,151037,0x7ff740aefd14,120,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,151046,0x7ff740aefd94,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,151055,0x7ff740aefdd4,356,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,151064,0x7ff740aeff54,1108,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,151075,0x7ff740af03d4,1108,CallProperty.Wide
code-creation,BytecodeHandler,0,151084,0x7ff740af0854,1020,CallProperty0.Wide
code-creation,BytecodeHandler,0,151093,0x7ff740af0c54,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,151101,0x7ff740af1094,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,151110,0x7ff740af14d4,1004,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,151119,0x7ff740af18d4,1044,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,151128,0x7ff740af1d14,1032,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,151137,0x7ff740af2154,1052,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,151146,0x7ff740af2594,1108,CallWithSpread.Wide
code-creation,BytecodeHandler,0,151155,0x7ff740af2a14,132,CallRuntime.Wide
code-creation,BytecodeHandler,0,151163,0x7ff740af2ad4,172,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,151172,0x7ff740af2b94,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,151180,0x7ff740af2c14,1332,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,151188,0x7ff740af3154,972,Construct.Wide
code-creation,BytecodeHandler,0,151197,0x7ff740af3554,460,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,151205,0x7ff740af3754,2212,TestEqual.Wide
code-creation,BytecodeHandler,0,151214,0x7ff740af4014,1344,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,151223,0x7ff740af4594,1788,TestLessThan.Wide
code-creation,BytecodeHandler,0,151231,0x7ff740af4c94,1788,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,151239,0x7ff740af5394,1788,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,151248,0x7ff740af5a94,1788,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,151257,0x7ff740af6194,892,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,151266,0x7ff740af6514,156,TestIn.Wide
code-creation,BytecodeHandler,0,151274,0x7ff740af65d4,120,ToName.Wide
code-creation,BytecodeHandler,0,151282,0x7ff740af6654,224,ToNumber.Wide
code-creation,BytecodeHandler,0,151290,0x7ff740af6754,248,ToNumeric.Wide
code-creation,BytecodeHandler,0,151299,0x7ff740af6854,120,ToObject.Wide
code-creation,BytecodeHandler,0,151308,0x7ff740af68d4,400,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,151317,0x7ff740af6a94,1500,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,151325,0x7ff740af7094,764,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,151334,0x7ff740af7394,2312,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,151343,0x7ff740af7cd4,176,CloneObject.Wide
code-creation,BytecodeHandler,0,151352,0x7ff740af7d94,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,151361,0x7ff740af7e54,336,CreateClosure.Wide
code-creation,BytecodeHandler,0,151369,0x7ff740af7fd4,120,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,151378,0x7ff740af8054,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,151387,0x7ff740af8114,292,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,151396,0x7ff740af8254,292,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,151404,0x7ff740af8394,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,151413,0x7ff740af8454,900,JumpLoop.Wide
code-creation,BytecodeHandler,0,151431,0x7ff740af8814,44,Jump.Wide
code-creation,BytecodeHandler,0,151439,0x7ff740af8854,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,151448,0x7ff740af8894,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,151456,0x7ff740af8914,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,151465,0x7ff740af8994,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,151474,0x7ff740af8a14,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,151484,0x7ff740af8a94,92,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,151493,0x7ff740af8b14,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,151502,0x7ff740af8b94,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,151510,0x7ff740af8c14,92,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,151520,0x7ff740af8c94,164,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,151531,0x7ff740af8d54,160,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,151541,0x7ff740af8e14,148,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,151550,0x7ff740af8ed4,148,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,151558,0x7ff740af8f94,68,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,151567,0x7ff740af9014,68,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,151575,0x7ff740af9094,68,JumpIfNull.Wide
code-creation,BytecodeHandler,0,151583,0x7ff740af9114,68,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,151592,0x7ff740af9194,68,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,151600,0x7ff740af9214,68,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,151609,0x7ff740af9294,76,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,151618,0x7ff740af9314,80,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,151627,0x7ff740af9394,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,151636,0x7ff740af9414,476,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,151644,0x7ff740af9614,260,ForInPrepare.Wide
code-creation,BytecodeHandler,0,151653,0x7ff740af9754,64,ForInContinue.Wide
code-creation,BytecodeHandler,0,151661,0x7ff740af97d4,264,ForInNext.Wide
code-creation,BytecodeHandler,0,151670,0x7ff740af9914,48,ForInStep.Wide
code-creation,BytecodeHandler,0,151678,0x7ff740af9954,160,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,151687,0x7ff740af9a14,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,151696,0x7ff740af9ad4,124,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,151705,0x7ff740af9b54,528,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,151714,0x7ff740af9d94,140,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,151723,0x7ff740af9e54,168,GetIterator.Wide
code-creation,BytecodeHandler,0,151731,0x7ff740af9f14,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,151740,0x7ff740af9fd4,56,Abort.Wide
code-creation,BytecodeHandler,0,151748,0x7ff740afa014,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,151757,0x7ff740afa094,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,151766,0x7ff740afa114,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,151774,0x7ff740afa194,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,151783,0x7ff740afa214,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,151791,0x7ff740afa294,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,151800,0x7ff740afa314,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,151809,0x7ff740afa354,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,151817,0x7ff740afa394,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,151826,0x7ff740afa3d4,92,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,151835,0x7ff740afa454,92,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,151844,0x7ff740afa4d4,44,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,151853,0x7ff740afa514,44,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,151863,0x7ff740afa554,32,Star.ExtraWide
code-creation,BytecodeHandler,0,151871,0x7ff740afa594,44,Mov.ExtraWide
code-creation,BytecodeHandler,0,151879,0x7ff740afa5d4,40,PushContext.ExtraWide
code-creation,BytecodeHandler,0,151888,0x7ff740afa614,36,PopContext.ExtraWide
code-creation,BytecodeHandler,0,151896,0x7ff740afa654,52,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,151905,0x7ff740afa694,4524,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,151914,0x7ff740afb854,4448,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,151923,0x7ff740afc9d4,164,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,151932,0x7ff740afca94,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,151941,0x7ff740afcb54,112,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,151950,0x7ff740afcbd4,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,151959,0x7ff740afcc94,260,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,151968,0x7ff740afcdd4,4700,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,151979,0x7ff740afe054,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,151989,0x7ff740afe114,260,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,151999,0x7ff740afe254,4648,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,152009,0x7ff740aff494,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,152018,0x7ff740aff594,5280,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,152027,0x7ff740b00a54,188,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,152036,0x7ff740b00b14,156,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,152045,0x7ff740b00bd4,164,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,152054,0x7ff740b00c94,304,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,152063,0x7ff740b00dd4,176,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,152072,0x7ff740b00e94,176,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,152082,0x7ff740b00f54,168,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,152091,0x7ff740b01014,184,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,152100,0x7ff740b010d4,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,152110,0x7ff740b01194,200,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,152120,0x7ff740b01294,1472,Add.ExtraWide
code-creation,BytecodeHandler,0,152128,0x7ff740b01894,1436,Sub.ExtraWide
code-creation,BytecodeHandler,0,152136,0x7ff740b01e54,1556,Mul.ExtraWide
code-creation,BytecodeHandler,0,152144,0x7ff740b02494,1668,Div.ExtraWide
code-creation,BytecodeHandler,0,152152,0x7ff740b02b54,1620,Mod.ExtraWide
code-creation,BytecodeHandler,0,152160,0x7ff740b031d4,980,Exp.ExtraWide
code-creation,BytecodeHandler,0,152169,0x7ff740b035d4,1836,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,152178,0x7ff740b03d14,1840,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,152186,0x7ff740b04454,1836,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,152195,0x7ff740b04b94,1268,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,152204,0x7ff740b05094,1268,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,152212,0x7ff740b05594,1332,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,152221,0x7ff740b05ad4,1360,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,152230,0x7ff740b06054,1328,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,152238,0x7ff740b06594,1440,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,152247,0x7ff740b06b54,1584,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,152255,0x7ff740b07194,1452,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,152264,0x7ff740b07754,844,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,152272,0x7ff740b07ad4,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,152281,0x7ff740b07cd4,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,152290,0x7ff740b07ed4,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,152300,0x7ff740b080d4,516,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,152309,0x7ff740b08314,500,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,152318,0x7ff740b08514,788,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,152327,0x7ff740b08854,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,152335,0x7ff740b08ad4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,152348,0x7ff740b08d54,636,Negate.ExtraWide
tick,0x7ff74115ef88,152440,0,0x0,6
code-creation,BytecodeHandler,0,152489,0x7ff740b08fd4,516,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,152534,0x7ff740b09214,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,152559,0x7ff740b09294,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,152583,0x7ff740b09314,40,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,152606,0x7ff740b09354,352,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,152633,0x7ff740b094d4,1100,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,152657,0x7ff740b09954,1100,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,152688,0x7ff740b09dd4,1016,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,152720,0x7ff740b0a1d4,1028,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,152743,0x7ff740b0a614,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,152764,0x7ff740b0aa54,1000,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,152786,0x7ff740b0ae54,1044,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,152819,0x7ff740b0b294,1028,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,152842,0x7ff740b0b6d4,1048,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,152864,0x7ff740b0bb14,1100,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,152886,0x7ff740b0bf94,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,152906,0x7ff740b0c054,168,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,152929,0x7ff740b0c114,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,152951,0x7ff740b0c194,1328,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,152971,0x7ff740b0c6d4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,152991,0x7ff740b0cad4,456,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,153012,0x7ff740b0ccd4,2212,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,153031,0x7ff740b0d594,1340,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,153053,0x7ff740b0dad4,1788,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,153073,0x7ff740b0e1d4,1788,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,153095,0x7ff740b0e8d4,1788,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,153119,0x7ff740b0efd4,1788,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,153142,0x7ff740b0f6d4,888,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,153166,0x7ff740b0fa54,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,153188,0x7ff740b0fb14,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,153210,0x7ff740b0fb94,220,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,153232,0x7ff740b0fc94,244,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,153254,0x7ff740b0fd94,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,153276,0x7ff740b0fe14,396,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,153305,0x7ff740b0ffd4,1500,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,153328,0x7ff740b105d4,764,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,153351,0x7ff740b108d4,2312,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,153376,0x7ff740b11214,172,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,153399,0x7ff740b112d4,164,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,153423,0x7ff740b11394,332,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,153443,0x7ff740b11514,120,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,153465,0x7ff740b11594,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,153488,0x7ff740b11654,288,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,153512,0x7ff740b11794,288,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,153535,0x7ff740b118d4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,153559,0x7ff740b11994,896,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,153581,0x7ff740b11d54,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,153603,0x7ff740b11d94,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,153624,0x7ff740b11dd4,80,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,153647,0x7ff740b11e54,80,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,153671,0x7ff740b11ed4,80,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,153695,0x7ff740b11f54,80,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,153718,0x7ff740b11fd4,88,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,153742,0x7ff740b12054,80,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,153763,0x7ff740b120d4,80,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,153798,0x7ff740b12154,92,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,153831,0x7ff740b121d4,164,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,153856,0x7ff740b12294,160,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,153880,0x7ff740b12354,144,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,153902,0x7ff740b12414,144,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,153924,0x7ff740b124d4,68,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,153944,0x7ff740b12554,68,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,153965,0x7ff740b125d4,68,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,153985,0x7ff740b12654,68,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,154005,0x7ff740b126d4,68,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,154027,0x7ff740b12754,68,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,154050,0x7ff740b127d4,76,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,154072,0x7ff740b12854,76,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,154092,0x7ff740b128d4,104,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,154113,0x7ff740b12954,476,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,154128,0x7ff740b12b54,256,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,154142,0x7ff740b12c94,64,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,154156,0x7ff740b12d14,260,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,154168,0x7ff740b12e54,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,154182,0x7ff740b12e94,160,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,154196,0x7ff740b12f54,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,154211,0x7ff740b13014,124,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,154224,0x7ff740b13094,524,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,154239,0x7ff740b132d4,136,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,154252,0x7ff740b13394,164,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,154265,0x7ff740b13454,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,154278,0x7ff740b134d4,56,Abort.ExtraWide
new,MemoryChunk,0x24e356c0000,262144
new,MemoryChunk,0x2a989a80000,262144
new,MemoryChunk,0x13616d00000,262144
new,MemoryChunk,0x9f12980000,262144
new,MemoryChunk,0x3d485140000,262144
tick,0x7ff74059916a,167384,0,0x0,5
code-creation,Eval,10,168959,0x3d485179bee,5, node:internal/main/run_main_module:1:1,0x3d485179aa8,~
script-source,80,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst { RegExpPrototypeExec } = primordials;\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x2C\x0d\n  markBootstrapComplete\x2C\x0d\n} = require('internal/process/pre_execution');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst mainEntry = prepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Necessary to reset RegExp statics before user code runs.\x0d\nRegExpPrototypeExec(/^/\x2C '');\x0d\n\x0d\nif (getOptionValue('--experimental-default-type') === 'module') {\x0d\n  require('internal/modules/run_main').executeUserEntryPoint(mainEntry);\x0d\n} else {\x0d\n  /**\x0d\n   * To support legacy monkey-patching of `Module.runMain`\x2C we call `runMain` here to have the CommonJS loader begin\x0d\n   * the execution of the main entry point\x2C even if the ESM loader immediately takes over because the main entry is an\x0d\n   * ES module or one of the other opt-in conditions (such as the use of `--import`) are met. Users can monkey-patch\x0d\n   * before the main entry point is loaded by doing so via scripts loaded through `--require`. This monkey-patchability\x0d\n   * is undesirable and is removed in `--experimental-default-type=module` mode.\x0d\n   */\x0d\n  require('internal/modules/cjs/loader').Module.runMain(mainEntry);\x0d\n}\x0d\n
code-source-info,0x3d485179bee,80,0,1211,C0O0C4O1211,,
code-creation,JS,10,169116,0x3d485179cde,120, node:internal/main/run_main_module:1:1,0x3d485179b68,~
code-source-info,0x3d485179cde,80,0,1211,C0O25C5O135C8O135C13O76C18O107C23O206C26O206C31O187C36O256C38O256C43O293C46O382C55O382C60O415C63O419C70O465C75O484C78O484C83O520C88O521C95O1141C98O1141C103O1179C108O1186C113O1187C119O1210,,
code-creation,JS,10,169798,0x3d48517a346,45,prepareMainThreadExecution node:internal/process/pre_execution:54:36,0x3a6c8fb8b98,~
script-source,67,node:internal/process/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Date\x2C\x0d\n  DatePrototypeGetDate\x2C\x0d\n  DatePrototypeGetFullYear\x2C\x0d\n  DatePrototypeGetHours\x2C\x0d\n  DatePrototypeGetMinutes\x2C\x0d\n  DatePrototypeGetMonth\x2C\x0d\n  DatePrototypeGetSeconds\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolDispose\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  refreshOptions\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  exposeInterface\x2C\x0d\n  exposeLazyInterfaces\x2C\x0d\n  defineReplaceableLazyAttribute\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_MANIFEST_ASSERT_INTEGRITY\x2C\x0d\n  ERR_NO_CRYPTO\x2C\x0d\n  ERR_MISSING_OPTION\x2C\x0d\n  ERR_ACCESS_DENIED\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\x0d\n  return prepareExecution({\x0d\n    expandArgv1\x2C\x0d\n    initializeModules\x2C\x0d\n    isMainThread: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareWorkerThreadExecution() {\x0d\n  prepareExecution({\x0d\n    expandArgv1: false\x2C\x0d\n    initializeModules: false\x2C  // Will need to initialize it after policy setup\x0d\n    isMainThread: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareExecution(options) {\x0d\n  const { expandArgv1\x2C initializeModules\x2C isMainThread } = options;\x0d\n\x0d\n  refreshRuntimeOptions();\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object and get the resolved main entry point.\x0d\n  const mainEntry = patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupUndici();\x0d\n  setupWebCrypto();\x0d\n  setupCustomEvent();\x0d\n  setupCodeCoverage();\x0d\n  setupDebugEnv();\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n\x0d\n  // Load permission system API\x0d\n  initializePermission();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n\x0d\n  require('internal/dns/utils').initializeDns();\x0d\n\x0d\n  setupSymbolDisposePolyfill();\x0d\n\x0d\n  if (isMainThread) {\x0d\n    assert(internalBinding('worker').isMainThread);\x0d\n    // Worker threads will get the manifest in the message handler.\x0d\n    const policy = readPolicyFromDisk();\x0d\n    if (policy) {\x0d\n      require('internal/process/policy')\x0d\n        .setup(policy.manifestSrc\x2C policy.manifestURL);\x0d\n    }\x0d\n\x0d\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n    setupStacktracePrinterOnSigint();\x0d\n    initializeReportSignalHandlers();  // Main-thread-only.\x0d\n    initializeHeapSnapshotSignalHandlers();\x0d\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n    // spawned by our child_process module\x2C then initialize IPC.\x0d\n    // This attaches some internal event listeners and creates:\x0d\n    // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n    // process.disconnect().\x0d\n    setupChildProcessIpcChannel();\x0d\n    // If this is a worker in cluster mode\x2C start up the communication\x0d\n    // channel. This needs to be done before any user code gets executed\x0d\n    // (including preload modules).\x0d\n    initializeClusterIPC();\x0d\n\x0d\n    // TODO(joyeecheung): do this for worker threads as well.\x0d\n    require('internal/v8/startup_snapshot').runDeserializeCallbacks();\x0d\n  } else {\x0d\n    assert(!internalBinding('worker').isMainThread);\x0d\n    // The setup should be called in LOAD_SCRIPT message handler.\x0d\n    assert(!initializeModules);\x0d\n  }\x0d\n\x0d\n  if (initializeModules) {\x0d\n    setupUserModules();\x0d\n  }\x0d\n\x0d\n  return mainEntry;\x0d\n}\x0d\n\x0d\nfunction setupSymbolDisposePolyfill() {\x0d\n  // TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\x0d\n  // eslint-disable-next-line node-core/prefer-primordials\x0d\n  if (typeof Symbol.dispose !== 'symbol') {\x0d\n    ObjectDefineProperty(Symbol\x2C 'dispose'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: SymbolDispose\x2C\x0d\n      writable: false\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line node-core/prefer-primordials\x0d\n  if (typeof Symbol.asyncDispose !== 'symbol') {\x0d\n    ObjectDefineProperty(Symbol\x2C 'asyncDispose'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: SymbolAsyncDispose\x2C\x0d\n      writable: false\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupUserModules(isLoaderWorker = false) {\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader(isLoaderWorker);\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  // Loader workers are responsible for doing this themselves.\x0d\n  if (isLoaderWorker) {\x0d\n    return;\x0d\n  }\x0d\n  loadPreloadModules();\x0d\n  // Need to be done after --require setup.\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction refreshRuntimeOptions() {\x0d\n  refreshOptions();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Patch the process object with legacy properties and normalizations.\x0d\n * Replace `process.argv[0]` with `process.execPath`\x2C preserving the original `argv[0]` value as `process.argv0`.\x0d\n * Replace `process.argv[1]` with the resolved absolute file path of the entry point\x2C if found.\x0d\n * @param {boolean} expandArgv1 - Whether to replace `process.argv[1]` with the resolved absolute file path of\x0d\n * the main entry point.\x0d\n */\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  // Since we replace process.argv[0] below\x2C preserve the original value in case the user needs it.\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    // Only set it to true during snapshot building.\x0d\n    configurable: isBuildingSnapshot()\x2C\x0d\n    value: process.argv[0]\x2C\x0d\n  });\x0d\n\x0d\n  process.exitCode = undefined;\x0d\n  process._exiting = false;\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  /** @type {string} */\x0d\n  let mainEntry;\x0d\n  // If requested\x2C update process.argv[1] to replace whatever the user provided with the resolved absolute file path of\x0d\n  // the entry point.\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      mainEntry = path.resolve(process.argv[1]);\x0d\n      process.argv[1] = mainEntry;\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // We need to initialize the global console here again with process.stdout\x0d\n  // and friends for snapshot deserialization.\x0d\n  const globalConsole = require('internal/console/global');\x0d\n  const { initializeGlobalConsole } = require('internal/console/constructor');\x0d\n  initializeGlobalConsole(globalConsole);\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n\x0d\n  return mainEntry;\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x2C\x0d\n    resetForSerialization\x2C\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n\x0d\n    // The code above would add the listener back during deserialization\x2C\x0d\n    // if applicable.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      addSerializeCallback(() => {\x0d\n        process.removeListener('warning'\x2C onWarning);\x0d\n        resetForSerialization();\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\n// https://websockets.spec.whatwg.org/\x0d\nfunction setupUndici() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let undici;\x0d\n  function lazyUndici() {\x0d\n    if (undici) {\x0d\n      return undici;\x0d\n    }\x0d\n\x0d\n    undici = require('internal/deps/undici/undici');\x0d\n    return undici;\x0d\n  }\x0d\n\x0d\n  function lazyInterface(name) {\x0d\n    return {\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      get() {\x0d\n        return lazyUndici()[name];\x0d\n      }\x2C\x0d\n      set(value) {\x0d\n        exposeInterface(globalThis\x2C name\x2C value);\x0d\n      }\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  if (!getOptionValue('--no-experimental-fetch')) {\x0d\n    // Fetch is meant to return a Promise\x2C but not be async.\x0d\n    function fetch(input\x2C init = undefined) {\x0d\n      return lazyUndici().fetch(input\x2C init);\x0d\n    }\x0d\n\x0d\n    defineOperation(globalThis\x2C 'fetch'\x2C fetch);\x0d\n\x0d\n    ObjectDefineProperties(globalThis\x2C {\x0d\n      FormData: lazyInterface('FormData')\x2C\x0d\n      Headers: lazyInterface('Headers')\x2C\x0d\n      Request: lazyInterface('Request')\x2C\x0d\n      Response: lazyInterface('Response')\x2C\x0d\n    });\x0d\n\x0d\n    // The WebAssembly Web API: https://webassembly.github.io/spec/web-api\x0d\n    internalBinding('wasm_web_api').setImplementation((streamState\x2C source) => {\x0d\n      require('internal/wasm_web_api').wasmStreamingCallback(streamState\x2C source);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (getOptionValue('--experimental-websocket')) {\x0d\n    ObjectDefineProperties(globalThis\x2C {\x0d\n      WebSocket: lazyInterface('WebSocket')\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals ||\x0d\n      getOptionValue('--no-experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    defineReplaceableLazyAttribute(\x0d\n      globalThis\x2C\x0d\n      'internal/crypto/webcrypto'\x2C\x0d\n      ['crypto']\x2C\x0d\n      false\x2C\x0d\n      function cryptoThisCheck() {\x0d\n        if (this !== globalThis && this != null)\x0d\n          throw new ERR_INVALID_THIS(\x0d\n            'nullish or must be the global object');\x0d\n      }\x2C\x0d\n    );\x0d\n    exposeLazyInterfaces(\x0d\n      globalThis\x2C 'internal/crypto/webcrypto'\x2C\x0d\n      ['Crypto'\x2C 'CryptoKey'\x2C 'SubtleCrypto']\x2C\x0d\n    );\x0d\n  } else {\x0d\n    ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                         { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\x0d\n                           get crypto() {\x0d\n                             throw new ERR_NO_CRYPTO();\x0d\n                           }\x2C\x0d\n                         }\x2C 'crypto') });\x0d\n\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupCodeCoverage() {\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd. Don't do anything if the\x0d\n  // --experimental-test-coverage flag is present\x2C as the test runner will\x0d\n  // handle coverage.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !getOptionValue('--experimental-test-coverage')) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(daeyeon): move this to internal/bootstrap/web/* when the CLI flag is\x0d\n//                removed.\x0d\nfunction setupCustomEvent() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals ||\x0d\n      getOptionValue('--no-experimental-global-customevent')) {\x0d\n    return;\x0d\n  }\x0d\n  const { CustomEvent } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      const { report } = require('internal/process/report');\x0d\n      return report;\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/realm').BuiltinModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  if (getOptionValue('--report-on-signal')) {\x0d\n    const { addSignalHandler } = require('internal/process/report');\x0d\n    addSignalHandler();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n  const diagnosticDir = getOptionValue('--diagnostic-dir');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  function doWriteHeapSnapshot() {\x0d\n    const heapSnapshotFilename = getHeapSnapshotFilename(diagnosticDir);\x0d\n    writeHeapSnapshot(heapSnapshotFilename);\x0d\n  }\x0d\n  process.on(signal\x2C doWriteHeapSnapshot);\x0d\n\x0d\n  // The code above would add the listener back during deserialization\x2C\x0d\n  // if applicable.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    addSerializeCallback(() => {\x0d\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x2C\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePermission() {\x0d\n  const experimentalPermission = getOptionValue('--experimental-permission');\x0d\n  if (experimentalPermission) {\x0d\n    process.binding = function binding(_module) {\x0d\n      throw new ERR_ACCESS_DENIED('process.binding');\x0d\n    };\x0d\n    process.emitWarning('Permission is an experimental feature'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { has\x2C deny } = require('internal/process/permission');\x0d\n    const warnFlags = [\x0d\n      '--allow-child-process'\x2C\x0d\n      '--allow-worker'\x2C\x0d\n    ];\x0d\n    for (const flag of warnFlags) {\x0d\n      if (getOptionValue(flag)) {\x0d\n        process.emitWarning(\x0d\n          `The flag ${flag} must be used with extreme caution. ` +\x0d\n        'It could invalidate the permission model.'\x2C 'SecurityWarning');\x0d\n      }\x0d\n    }\x0d\n    const warnCommaFlags = [\x0d\n      '--allow-fs-read'\x2C\x0d\n      '--allow-fs-write'\x2C\x0d\n    ];\x0d\n    for (const flag of warnCommaFlags) {\x0d\n      const value = getOptionValue(flag);\x0d\n      if (value.length === 1 && value[0].includes('\x2C')) {\x0d\n        process.emitWarning(\x0d\n          `The ${flag} CLI flag has changed. ` +\x0d\n        'Passing a comma-separated list of paths is no longer valid. ' +\x0d\n        'Documentation can be found at ' +\x0d\n        'https://nodejs.org/api/permissions.html#file-system-permissions'\x2C\x0d\n          'Warning'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ObjectDefineProperty(process\x2C 'permission'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x2C\x0d\n      value: {\x0d\n        has\x2C\x0d\n        deny\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  } else {\x0d\n    const availablePermissionFlags = [\x0d\n      '--allow-fs-read'\x2C\x0d\n      '--allow-fs-write'\x2C\x0d\n      '--allow-child-process'\x2C\x0d\n      '--allow-worker'\x2C\x0d\n    ];\x0d\n    ArrayPrototypeForEach(availablePermissionFlags\x2C (flag) => {\x0d\n      const value = getOptionValue(flag);\x0d\n      if (value.length) {\x0d\n        throw new ERR_MISSING_OPTION('--experimental-permission');\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPolicyFromDisk() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = pathToFileURL(experimentalPolicy);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x2C\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    return {\x0d\n      manifestSrc: src\x2C manifestURL: manifestURL.href\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const { initializeCJS } = require('internal/modules/cjs/loader');\x0d\n  initializeCJS();\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader(isLoaderWorker) {\x0d\n  const { initializeESM } = require('internal/modules/esm/utils');\x0d\n  initializeESM(isLoaderWorker);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n  } = require('internal/source_map/source_map_cache');\x0d\n  setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x2C\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markBootstrapComplete() {\x0d\n  internalBinding('performance').markBootstrapComplete();\x0d\n}\x0d\n\x0d\n// Sequence number for diagnostic filenames\x0d\nlet sequenceNumOfheapSnapshot = 0;\x0d\n\x0d\n// To generate the HeapSnapshotFilename while using custom diagnosticDir\x0d\nfunction getHeapSnapshotFilename(diagnosticDir) {\x0d\n  if (!diagnosticDir) return undefined;\x0d\n\x0d\n  const date = new Date();\x0d\n\x0d\n  const year = DatePrototypeGetFullYear(date);\x0d\n  const month = String(DatePrototypeGetMonth(date) + 1).padStart(2\x2C '0');\x0d\n  const day = String(DatePrototypeGetDate(date)).padStart(2\x2C '0');\x0d\n  const hours = String(DatePrototypeGetHours(date)).padStart(2\x2C '0');\x0d\n  const minutes = String(DatePrototypeGetMinutes(date)).padStart(2\x2C '0');\x0d\n  const seconds = String(DatePrototypeGetSeconds(date)).padStart(2\x2C '0');\x0d\n\x0d\n  const dateString = `${year}${month}${day}`;\x0d\n  const timeString = `${hours}${minutes}${seconds}`;\x0d\n  const pid = process.pid;\x0d\n  const threadId = internalBinding('worker').threadId;\x0d\n  const fileSequence = (++sequenceNumOfheapSnapshot).toString().padStart(3\x2C '0');\x0d\n\x0d\n  return `${diagnosticDir}/Heap.${dateString}.${timeString}.${pid}.${threadId}.${fileSequence}.heapsnapshot`;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupUserModules\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  prepareWorkerThreadExecution\x2C\x0d\n  markBootstrapComplete\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n};\x0d\n
code-source-info,0x3d48517a346,67,1179,1334,C20O1232C30O1263C36O1281C40O1239C44O1331,,
code-creation,JS,10,172145,0x3d48517bf4e,309,prepareExecution node:internal/process/pre_execution:70:26,0x3a6c8fb90d0,~
code-source-info,0x3d48517bf4e
code-creation,JS,10,172355,0x3d48517c23e,10,refreshRuntimeOptions node:internal/process/pre_execution:177:31,0x3a6c8fb91c0,~
code-source-info,0x3d48517c23e,67,5047,5075,C0O5055C5O5055C9O5074,,
code-creation,JS,10,172431,0x3d48517c326,22,refreshOptions node:internal/options:39:24,0x3a6c8f84918,~
script-source,17,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction refreshOptions() {\x0d\n  optionsMap = undefined;\x0d\n  aliasesMap = undefined;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x2C\x0d\n};\x0d\n
code-source-info,0x3d48517c326,17,940,1001,C0O948C4O959C10O975C14O986C21O1000,,
code-creation,JS,10,172771,0x3d48517c68e,19,reconnectZeroFillToggle node:internal/buffer:1074:33,0x3a6c8f95528,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x2C\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    untransferable_object_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  obj[untransferable_object_private_symbol] = true;\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x2C\x0d\n};\x0d\n
code-source-info,0x3d48517c68e,25,31787,31829,C0O31795C5O31806C11O31804C18O31828,,
code-creation,JS,10,175637,0x3d48517ef86,462,patchProcessObject node:internal/process/pre_execution:188:28,0x3a6c8fb9210,~
code-source-info,0x3d48517ef
new,MemoryChunk,0x5169d80000,262144
code-creation,JS,10,176164,0x3d48517f586,134,set node:internal/bootstrap/node:116:8,0x2b98313bf10,~
script-source,12,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `Realm::BootstrapRealm()` in `src/node_realm.cc`\x2C\x0d\n// and is responsible for setting up Node.js core before main scripts\x0d\n// under `lib/internal/main/` are executed.\x0d\n//\x0d\n// By default\x2C Node.js binaries come with an embedded V8 startup snapshot\x0d\n// that is generated at build-time with a `node_mksnapshot` executable.\x0d\n// The snapshot generation code can be found in `SnapshotBuilder::Generate()`\x0d\n// from `src/node_snapshotable.cc`.\x0d\n// This snapshot captures the V8 heap initialized by scripts under\x0d\n// `lib/internal/bootstrap/`\x2C including this file. When initializing the main\x0d\n// thread\x2C Node.js deserializes the heap from the snapshot\x2C instead of actually\x0d\n// running this script and others in `lib/internal/bootstrap/`. To disable this\x0d\n// behavior\x2C pass `--no-node-snapshot` when starting the process so that\x0d\n// Node.js actually runs this script to initialize the heap.\x0d\n//\x0d\n// This script is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/process/pre_execution.js` or in main scripts. It should not\x0d\n// query any run-time states (e.g. command line arguments\x2C environment\x0d\n// variables) when being executed - functions in this script that are invoked\x0d\n// at a later time can\x2C however\x2C query those states lazily.\x0d\n// The majority of the code here focuses on setting up the global object and\x0d\n// the process object in a synchronous\x2C environment-independent manner.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: this saves copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/per_context/domexception.js`: implementation of the\x0d\n//   `DOMException` class.\x0d\n// - `lib/internal/per_context/messageport.js`: JS-side components of the\x0d\n//   `MessagePort` implementation.\x0d\n// - `lib/internal/bootstrap/realm.js`: this sets up internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `BuiltinModule`\x2C and per-realm internal states\x0d\n//   and bindings\x2C including `prepare_stack_trace_callback`.\x0d\n//\x0d\n// The initialization done in this script is included in both the main thread\x0d\n// and the worker threads. After this\x2C further initialization is done based\x0d\n// on the configuration of the Node.js instance by executing the scripts in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/process/pre_execution.js` depending on the run-time states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by `BuiltinLoader::CompileAndCall()`.\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  constants: {\x0d\n    kExitCode\x2C\x0d\n    kExiting\x2C\x0d\n    kHasExitCode\x2C\x0d\n  }\x2C\x0d\n  privateSymbols: {\x0d\n    exit_info_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\n\x0d\n// process._exiting and process.exitCode\x0d\n{\x0d\n  const fields = process[exit_info_private_symbol];\x0d\n  ObjectDefineProperty(process\x2C '_exiting'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return fields[kExiting] === 1;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      fields[kExiting] = value ? 1 : 0;\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n\x0d\n  let exitCode;\x0d\n  ObjectDefineProperty(process\x2C 'exitCode'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return exitCode;\x0d\n    }\x2C\x0d\n    set(code) {\x0d\n      if (code !== null && code !== undefined) {\x0d\n        let value = code;\x0d\n        if (typeof code === 'string' && code !== '' &&\x0d\n          NumberIsNaN((value = Number(code)))) {\x0d\n          value = code;\x0d\n        }\x0d\n        validateInteger(value\x2C 'code');\x0d\n        fields[kExitCode] = value;\x0d\n        fields[kHasExitCode] = 1;\x0d\n      } else {\x0d\n        fields[kHasExitCode] = 0;\x0d\n      }\x0d\n      exitCode = code;\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n  });\x0d\n}\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst binding = internalBinding('builtins');\x0d\n\x0d\nconst processConfig = JSONParse(binding.config\x2C (_key\x2C value) => {\x0d\n  // The `reviver` argument of the JSONParse method will visit all the values of\x0d\n  // the parsed config\x2C including the "root" object\x2C so there is no need to\x0d\n  // explicitly freeze the config outside of this method\x0d\n  return ObjectFreeze(value);\x0d\n});\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  value: processConfig\x2C\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n  process.getActiveResourcesInfo = rawMethods.getActiveResourcesInfo;\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.constrainedMemory = rawMethods.constrainedMemory;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n} = require('internal/process/task_queues');\x0d\nconst timers = require('timers');\x0d\n// Non-standard extensions:\x0d\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x2C\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because --no-node-snapshot disables the\x0d\n  // code cache even if the binary is built with embedded code cache.\x0d\n  get cached_builtins() {\x0d\n    return binding.hasCachedBuiltins();\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x2C\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x2C\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n{\x0d\n  const {\x0d\n    getSourceMapsEnabled\x2C\x0d\n    setSourceMapsEnabled\x2C\x0d\n    maybeCacheGeneratedSourceMap\x2C\x0d\n  } = require('internal/source_map/source_map_cache');\x0d\n  const {\x0d\n    setMaybeCacheGeneratedSourceMap\x2C\x0d\n  } = internalBinding('errors');\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'sourceMapsEnabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return getSourceMapsEnabled();\x0d\n    }\x2C\x0d\n  });\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n  // The C++ land calls back to maybeCacheGeneratedSourceMap()\x0d\n  // when code is generated by user with eval() or new Function()\x0d\n  // to cache the source maps from the evaluated code\x2C if any.\x0d\n  setMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x2C\x0d\n  });\x0d\n\x0d\n  // Create global.process as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  globalThis.global = globalThis;\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n\x0d\n  // Create global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x3d48517f586,12,4246,4676,C0O4262C8O4326C11O4341C19O4378C28O4399C35O4420C38O4420C43O4399C49O4449C54O4483C64O4483C69O4524C78O4531C83O4542C87O4560C96O4567C101O4581C107O4611C116O4618C120O4632C124O4653C126O4662C133O4675,,
code-creation,JS,10,178809,0x5169d820b6,852,resolve node:path:162:10,0x3a6c8f9ad38,~
script-source,34,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction formatExt(ext) {\x0d\n  return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C `paths[${i}]`);\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x2C\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n      validateString(path\x2C `paths[${i}]`);\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x2C\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x5169d820b
tick,0x7ff74117ceb6,183810,0,0x0,3,0x7ff7404a14f0,0x3d48517f05b,0x3d48517bf6e,0x3d48517a36e,0x3d485179d04
code-creation,JS,10,183926,0x5169d8570e,17,isPathSeparator node:path:52:25,0x3a6c8f9a960,~
code-source-info,0x5169d8570e,34,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,JS,10,184014,0x5169d8580e,35,isWindowsDeviceRoot node:path:60:29,0x3a6c8f9abf8,~
code-source-info,0x5169d8580e,34,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,JS,10,184130,0x5169d8592e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:136:20,0x3a6c8fbc668,~
script-source,73,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x2C\x0d\n    }\x2C\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x2C\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x2C\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id >>>= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nif (isBuildingSnapshot()) {\x0d\n  addSerializeCallback(() => {\x0d\n    cachedCwd = '';\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x5169d8592e,73,3695,3783,C0O3703C7O3717C12O3730C17O3753C22O3753C29O3740C35O3763C39O3780,,
code-creation,JS,10,184832,0x5169d85ff6,444,normalizeString node:path:66:25,0x3a6c8f9ac48,~
code-source-info,0x5169d85ff
new,MemoryChunk,0x2b5ae340000,262144
new,MemoryChunk,0x7ff6c0b40000,262144
code-creation,JS,11,185588,0x7ff6c0b43040,3028,normalizeString node:path:66:25,0x3a6c8f9ac48,^
code-source-info,0x7ff6c0b43040,34,2226,4212,,,
code-creation,JS,11,185742,0x7ff6c0b43c40,628,requireBuiltin node:internal/bootstrap/realm:414:24,0x2b9831370a0,^
script-source,9,node:internal/bootstrap/realm,// This file is executed in every realm that is created by Node.js\x2C including\x0d\n// the context of main thread\x2C worker threads\x2C and ShadowRealms.\x0d\n// Only per-realm internal states and bindings should be bootstrapped in this\x0d\n// file and no globals should be exposed to the user code.\x0d\n//\x0d\n// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_BINDING_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_BINDING_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - BuiltinModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/realm') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n});\x0d\n\x0d\n\x0d\n// processBindingAllowList contains the name of bindings that are allowed\x0d\n// for access via process.binding(). This is used to provide a transition\x0d\n// path for modules that are being moved over to internalBinding.\x0d\n// Certain bindings may not actually correspond to an internalBinding any\x0d\n// more\x2C we just implement them as legacy wrappers instead. See the\x0d\n// legacyWrapperList.\x0d\nconst processBindingAllowList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'natives'\x2C\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// The code bellow assumes that the two lists must not contain any modules\x0d\n// beginning with "internal/".\x0d\n// Modules that can only be imported via the node: scheme.\x0d\nconst schemelessBlockList = new SafeSet([\x0d\n  'test'\x2C\x0d\n  'test/reporters'\x2C\x0d\n]);\x0d\n// Modules that will only be enabled at run time.\x0d\nconst experimentalModuleList = new SafeSet();\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = { __proto__: null };\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (processBindingAllowList.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return requireBuiltin('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Set up internalBinding() in the closure.\x0d\n * @type {import('typings/globals').internalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = { __proto__: null };\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst selfId = 'internal/bootstrap/realm';\x0d\nconst {\x0d\n  builtinIds\x2C\x0d\n  compileFunction\x2C\x0d\n  setInternalLoaders\x2C\x0d\n} = internalBinding('builtins');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\nconst publicBuiltinIds = builtinIds\x0d\n  .filter((id) =>\x0d\n    !StringPrototypeStartsWith(id\x2C 'internal/') &&\x0d\n      !experimentalModuleList.has(id)\x2C\x0d\n  );\x0d\n// Do not expose the loaders to user land even with --expose-internals.\x0d\nconst internalBuiltinIds = builtinIds\x0d\n  .filter((id) => StringPrototypeStartsWith(id\x2C 'internal/') && id !== selfId);\x0d\n\x0d\n// When --expose-internals is on we'll add the internal builtin ids to these.\x0d\nconst canBeRequiredByUsersList = new SafeSet(publicBuiltinIds);\x0d\nconst canBeRequiredByUsersWithoutSchemeList =\x0d\n  new SafeSet(publicBuiltinIds.filter((id) => !schemelessBlockList.has(id)));\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass BuiltinModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C BuiltinModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\x2C\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the built-in module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  static allowRequireByUsers(id) {\x0d\n    if (id === selfId) {\x0d\n      // No code because this is an assertion against bugs.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not allow ${id}`);\x0d\n    }\x0d\n    canBeRequiredByUsersList.add(id);\x0d\n    if (!schemelessBlockList.has(id)) {\x0d\n      canBeRequiredByUsersWithoutSchemeList.add(id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (let i = 0; i < internalBuiltinIds.length; ++i) {\x0d\n      BuiltinModule.allowRequireByUsers(internalBuiltinIds[i]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return BuiltinModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    return canBeRequiredByUsersList.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredWithoutScheme(id) {\x0d\n    return canBeRequiredByUsersWithoutSchemeList.has(id);\x0d\n  }\x0d\n\x0d\n  static normalizeRequirableId(id) {\x0d\n    if (StringPrototypeStartsWith(id\x2C 'node:')) {\x0d\n      const normalizedId = StringPrototypeSlice(id\x2C 5);\x0d\n      if (BuiltinModule.canBeRequiredByUsers(normalizedId)) {\x0d\n        return normalizedId;\x0d\n      }\x0d\n    } else if (BuiltinModule.canBeRequiredWithoutScheme(id)) {\x0d\n      return id;\x0d\n    }\x0d\n\x0d\n    return undefined;\x0d\n  }\x0d\n\x0d\n  static isBuiltin(id) {\x0d\n    return BuiltinModule.canBeRequiredWithoutScheme(id) || (\x0d\n      typeof id === 'string' &&\x0d\n        StringPrototypeStartsWith(id\x2C 'node:') &&\x0d\n        BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(id\x2C 5))\x0d\n    );\x0d\n  }\x0d\n\x0d\n  static getCanBeRequiredByUsersWithoutSchemeList() {\x0d\n    return ArrayFrom(canBeRequiredByUsersWithoutSchemeList);\x0d\n  }\x0d\n\x0d\n  static getSchemeOnlyModuleNames() {\x0d\n    return ArrayFrom(schemelessBlockList);\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!BuiltinModule.canBeRequiredByUsers(this.id)) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    // TODO(aduh95): move this to C++\x2C alongside the initialization of the class.\x0d\n    ObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\x0d\n    const url = `node:${this.id}`;\x0d\n    const builtin = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        builtin.syncExports();\x0d\n        this.setExport('default'\x2C builtin.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : requireBuiltin;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      // Arguments must match the parameters specified in\x0d\n      // BuiltinLoader::LookupAndCompile().\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\x0d\n    // here to avoid breaking users who parse process.moduleLoadList.\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  BuiltinModule\x2C\x0d\n  require: requireBuiltin\x2C\x0d\n};\x0d\n\x0d\nfunction requireBuiltin(id) {\x0d\n  if (id === selfId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = BuiltinModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    request = StringPrototypeSlice(request\x2C 5);\x0d\n  } else if (!BuiltinModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return requireBuiltin(request);\x0d\n}\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x2C\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x2C\x0d\n    }\x2C\x0d\n  } = requireBuiltin('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\n// Store the internal loaders in C++.\x0d\nsetInternalLoaders(internalBinding\x2C requireBuiltin);\x0d\n\x0d\n// Setup per-realm bindings.\x0d\nsetupPrepareStackTrace();\x0d\n
code-source-info,0x7ff6c0b43c40,9,13681,14033,,,
code-creation,JS,11,187994,0x7ff6c0b43f00,1228,compileForInternalLoader node:internal/bootstrap/realm:377:27,0x2b983136e28,^
code-source-info,0x7ff6c0b43f00,9,12628,13452,,,
code-creation,JS,11,188085,0x7ff6c0b44400,536,internalBinding node:internal/bootstrap/realm:185:45,0x2b983136650,^
code-source-info,0x7ff6c0b44400,9,6163,6408,,,
code-creation,JS,11,188151,0x7ff6c0b44640,204,isPathSeparator node:path:52:25,0x3a6c8f9a960,^
code-source-info,0x7ff6c0b44640,34,1794,1876,,,
code-creation,JS,10,189291,0x5169d87996,376,initializeGlobalConsole node:internal/console/constructor:690:33,0x3a6c8fa3388,~
script-source,44,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\nlet utilColors;\x0d\nfunction lazyUtilColors() {\x0d\n  utilColors ??= require('internal/util/colors');\x0d\n  return utilColors;\x0d\n}\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (new.target === undefined) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: key\x2C\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x2C\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x2C\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x2C\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          __proto__: null\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x2C\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x2C\x0d\n        }\x2C\x0d\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x2C\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          __proto__: null\x2C\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x2C\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = lazyUtilColors().shouldColorize(stream);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x2C\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x2C\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x2C\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    cliTable ??= require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = { __proto__: null };\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          map[key] ??= [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x2C\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nfunction initializeGlobalConsole(globalConsole) {\x0d\n  globalConsole[kBindStreamsLazy](process);\x0d\n  globalConsole[kBindProperties](true\x2C 'auto');\x0d\n\x0d\n  const {\x0d\n    namespace: {\x0d\n      addSerializeCallback\x2C\x0d\n      isBuildingSnapshot\x2C\x0d\n    }\x2C\x0d\n  } = require('internal/v8/startup_snapshot');\x0d\n\x0d\n  if (!internalBinding('config').hasInspector || !isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n  const { console: consoleFromVM } = internalBinding('inspector');\x0d\n  const nodeConsoleKeys = ObjectKeys(Console.prototype);\x0d\n  const vmConsoleKeys = ObjectKeys(consoleFromVM);\x0d\n  const originalKeys = new SafeSet(vmConsoleKeys.concat(nodeConsoleKeys));\x0d\n  const inspectorConsoleKeys = new SafeSet();\x0d\n  for (const key of ObjectKeys(globalConsole)) {\x0d\n    if (!originalKeys.has(key)) {\x0d\n      inspectorConsoleKeys.add(key);\x0d\n    }\x0d\n  }\x0d\n  // During deserialization these should be reinstalled to console by\x0d\n  // V8 when the inspector client is created.\x0d\n  addSerializeCallback(() => {\x0d\n    for (const key of inspectorConsoleKeys) {\x0d\n      globalConsole[key] = undefined;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  initializeGlobalConsole\x2C\x0d\n  formatTime\x2C // exported for tests\x0d\n};\x0d\n
code-source-info,0x5169d87996,44,21146,22184,C0O21146C12O21167C19O21181C21O21180C30O21198C35O21212C42O21226C44O21225C53O21242C59O21360C67O21360C72O21287C77O21296C82O21325C87O21406C95O21411C100O21436C106O21454C111O21483C112O21490C113O21534C121O21534C126O21516C131O21591C143O21610C148O21591C153O21647C160O21647C165O21698C172O21724C177O21724C185O21698C191O21782C198O21782C203O21782C205O21818C215O21818C237O21811C267O21811C270O21870C276O21870C283O21889C287O21910C293O21910C298O21800C365O22053C370O22053C375O22183,,
code-creation,JS,10,192151,0x5169d8966e,94,value node:internal/console/constructor:205:20,0x3a6c8fa29e0,~
code-source-info,0x5169d8966e,44,6044,6706,C0O6044C15O6066C16O6066C18O6085C19O6085C21O6100C33O6151C38O6253C46O6364C60O6428C65O6530C73O6645C87O6100C93O6705,,
code-creation,JS,10,192557,0x5169d89cf6,414,value node:internal/console/constructor:235:20,0x3a6c8fa2aa0,~
code-source-info,0x5169d89cf6,44,6811,8247,C17O6868C27O6931C34O6975C52O7046C55O7016C73O7119C86O7218C89O7188C104O7269C111O7313C126O7354C129O7354C144O7408C151O7430C166O7464C169O7460C187O7557C191O7567C198O7589C213O7623C216O7619C235O7646C239O7659C246O7681C261O7711C275O7734C279O7747C286O7769C300O7799C314O7817C318O7832C325O7854C340O7884C354O7900C358O7925C365O7969C380O8010C394O8050C398O8070C407O6868C413O8246,,
code-creation,JS,10,192764,0x5169d8a276,18,createWriteErrorHandler node:internal/console/constructor:357:33,0x3a6c8fa2d48,~
code-source-info,0x5169d8a276,44,11050,11925,C0O11050C13O11080C17O11922,,
code-creation,JS,10,193005,0x5169d8a7fe,63,addReadOnlyProcessAlias node:internal/process/pre_execution:248:33,0x3a6c8fb9260,~
code-source-info,0x5169d8a7fe,67,8035,8295,C16O8088C21O8088C26O8115C28O8133C36O8163C43O8253C49O8272C56O8133C62O8294,,
code-creation,JS,10,193120,0x5169d8a99e,82,getOptionValue node:internal/options:44:24,0x3a6c8f84968,~
code-source-info,0x5169d8a99e,17,1028,1278,C0O1062C3O1062C7O1108C15O1108C22O1159C30O1181C38O1181C43O1168C47O1159C53O1197C55O1222C60O1228C61O1252C66O1252C74O1267C81O1275,,
code-creation,JS,10,193208,0x5169d8aaf6,33,getCLIOptionsFromBinding node:internal/options:18:34,0x3a6c8f84750,~
code-source-info,0x5169d8aaf6,17,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,JS,10,193903,0x5169d8b166,46,setupTraceCategoryState node:internal/process/pre_execution:460:33,0x3a6c8fb96a8,~
code-source-info,0x5169d8b166,67,14166,14397,C0O14209C6O14209C11O14182C16O14282C22O14282C27O14253C32O14325C35O14350C40O14325C45O14396,,
code-creation,JS,10,194064,0x5169d8b2fe,77,toggleTraceCategoryState node:internal/process/per_thread:410:34,0x3a6c8f969a0,~
script-source,27,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\nconst { exitCodes: { kNoFailure } } = internalBinding('errors');\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x2C\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    const {\x0d\n      handleProcessExit\x2C\x0d\n    } = require('internal/modules/esm/handle_process_exit');\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (arguments.length !== 0) {\x0d\n      process.exitCode = code;\x0d\n    }\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || kNoFailure);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || kNoFailure);\x0d\n\x0d\n    // If this is a worker\x2C v8::Isolate::TerminateExecution() is called above.\x0d\n    // That function spoofs the stack pointer to cause the stack guard\x0d\n    // check to throw the termination exception. Because v8 performs\x0d\n    // stack guard check upon every function call\x2C we give it a chance.\x0d\n    //\x0d\n    // Without this\x2C user code after `process.exit()` would take effect.\x0d\n    // test/parallel/test-worker-voluntarily-exit-followed-by-addition.js\x0d\n    // test/parallel/test-worker-voluntarily-exit-followed-by-throw.js\x0d\n    nop();\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvvar }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvvar) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvvar;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x2C\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x5169d8b2fe,27,12422,12729,C0O12447C4O12477C10O12513C16O12545C21O12589C26O12590C33O12534C39O12616C44O12637C49O12637C55O12657C61O12690C66O12711C71O12711C76O12728,,
code-creation,JS,10,195708,0x5169d8c22e,62,setupInspectorHooks node:internal/process/pre_execution:466:29,0x3a6c8fb96f8,~
code-source-info,0x5169d8c22e,67,14429,14996,C0O14778C6O14782C11O14807C17O14877C23O14877C28O14844C33O14859C38O14924C44O14924C49O14952C54O14953C61O14995,,
code-creation,JS,10,195932,0x5169d8c4be,126,setupWarningHandler node:internal/process/pre_execution:261:29,0x3a6c8fb92b0,~
code-source-info,0x5169d8c4be,67,8327,8837,C0O8327C11O8394C19O8394C24O8348C30O8364C36O8434C46O8438C57O8483C62O8487C69O8504C74O8520C79O8528C90O8528C96O8659C103O8663C108O8694C120O8694C125O8836,,
code-creation,JS,10,196269,0x5169d8cb1e,236,setupUndici node:internal/process/pre_execution:283:21,0x3a6c8fb9300,~
code-source-info,0x5169d8cb1e,67,8936,10350,C0O8936C19O8944C26O8948C30O8968C36O8994C37O9001C38O9016C39O9016C41O9443C51O9448C62O9663C73O9679C82O9663C87O9715C98O9738C109O9769C120O9812C131O9854C142O9897C150O9715C155O10016C163O10016C168O10047C178O10048C183O10196C193O10200C199O10251C210O10274C221O10306C229O10251C235O10349,,
code-creation,JS,10,196439,0x5169d8cdd6,28,getEmbedderOptions node:internal/options:32:28,0x3a6c8f848c8,~
code-source-info,0x5169d8cdd6,17,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,JS,10,196599,0x5169d8d356,33,lazyInterface node:internal/process/pre_execution:298:25,0x5169d8c8a8,~
code-source-info,0x5169d8d356,67,9207,9437,C0O9207C9O9221C14O9290C22O9351C32O9432,,
code-creation,JS,10,196820,0x5169d8d9e6,174,setupWebCrypto node:internal/process/pre_execution:341:24,0x3a6c8fb93b0,~
code-source-info,0x5169d8d9e6,67,10481,11441,C0O10489C5O10493C9O10513C17O10541C23O10541C29O10602C30O10609C31O10620C37O10624C42O10649C48O10669C55O10708C73O10669C78O10991C85O11020C96O10991C103O11134C110O11155C123O11225C154O11225C167O11134C173O11440,,
code-creation,JS,10,197084,0x5169d8e136,70,setupCustomEvent node:internal/process/pre_execution:389:26,0x3a6c8fb9478,~
code-source-info,0x5169d8e136,67,12112,12371,C0O12120C5O12124C9O12144C17O12172C23O12172C29O12235C30O12242C31O12275C37O12275C42O12259C47O12312C54O12328C63O12312C69O12370,,
code-creation,JS,10,197200,0x5169d8e306,64,setupCodeCoverage node:internal/process/pre_execution:374:27,0x3a6c8fb9428,~
code-source-info,0x5169d8e306,67,11471,11977,C0O11783C3O11795C8O11799C16O11827C22O11827C28O11882C31O11890C38O11920C44O11947C49O11951C54O11920C58O11911C63O11976,,
code-creation,JS,10,197307,0x5169d8e4e6,75,setupDebugEnv node:internal/process/pre_execution:420:23,0x3a6c8fb9590,~
code-source-info,0x5169d8e4e6,67,12897,13111,C0O12905C6O12905C11O12938C19O12966C24O12970C29O12939C34O12986C42O12990C48O13035C54O13035C59O13070C64O13084C69O13085C74O13110,,
code-creation,JS,10,197517,0x5169d8e84e,153,initializeDebugEnv node:internal/util/debuglog:21:28,0x3a6c8f8a410,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = { __proto__: null };\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nlet utilColors;\x0d\nfunction lazyUtilColors() {\x0d\n  utilColors ??= require('internal/util/colors');\x0d\n  return utilColors;\x0d\n}\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = lazyUtilColors().shouldColorize(process.stderr);\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x2C\x0d\n};\x0d\n
code-source-info,0x5169d8e84e,22,550,1008,C0O566C7O577C13O603C24O718C38O718C45O763C56O764C63O793C74O794C82O845C94O860C110O845C115O845C117O884C126O896C138O974C145O986C152O1007,,
code-creation,JS,10,198135,0x5169d8eee6,31,initializeReport node:internal/process/pre_execution:408:26,0x3a6c8fb9518,~
code-source-info,0x5169d8eee6,67,12637,12871,C0O12645C11O12666C16O12762C24O12645C30O12870,,
tick,0x7ff7405316e0,198429,0,0x0,2,0x7ff7404a14f0,0x3d48517bfac,0x3d48517a36e,0x3d485179d04
code-creation,JS,10,198969,0x5169d8f736,557,initializePermission node:internal/process/pre_execution:573:30,0x3a6c8fb9838,~
code-source-info,0x5169d8f
code-creation,JS,10,199378,0x5169d8fb5e,34, node:internal/process/pre_execution:626:53,0x5169d8f3f0,~
code-source-info,0x5169d8fb5e,67,19846,20011,C0O19879C5O19879C10O19918C16O19937C26O19943C31O19937C33O20010,,
code-creation,JS,10,199516,0x5169d8fd2e,35,initializeSourceMapsHandlers node:internal/process/pre_execution:707:38,0x3a6c8fb99b0,~
code-source-info,0x5169d8fd2e,67,22655,22821,C0O22705C6O22705C11O22676C16O22757C18O22778C24O22778C29O22757C34O22820,,
code-creation,JS,10,199685,0x5169d8fede,94,setSourceMapsEnabled node:internal/source_map/source_map_cache:52:30,0x3a6c8f9c610,~
script-source,38,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectKeys\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\nconst {\x0d\n  setSourceMapsEnabled: setSourceMapsNative\x2C\x0d\n  setPrepareStackTraceCallback\x2C\x0d\n} = internalBinding('errors');\x0d\nconst { getLazy } = require('internal/util');\x0d\n\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst getCjsSourceMapCache = getLazy(() => {\x0d\n  const { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\n  return new IterableWeakMap();\x0d\n});\x0d\n\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst generatedSourceMapCache = new SafeMap();\x0d\nconst kLeadingProtocol = /^\\w+:\\/\\//;\x0d\nconst kSourceMappingURLMagicComment = /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/g;\x0d\nconst kSourceURLMagicComment = /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/g;\x0d\n\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\n\x0d\nlet SourceMap;\x0d\n\x0d\n// This is configured with --enable-source-maps during pre-execution.\x0d\nlet sourceMapsEnabled = false;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  setSourceMapsNative(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction extractSourceURLMagicComment(content) {\x0d\n  let match;\x0d\n  let matchSourceURL;\x0d\n  // A while loop is used here to get the last occurrence of sourceURL.\x0d\n  // This is needed so that we don't match sourceURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceURLMagicComment\x2C content))) {\x0d\n    matchSourceURL = match;\x0d\n  }\x0d\n  if (matchSourceURL == null) {\x0d\n    return null;\x0d\n  }\x0d\n  let sourceURL = matchSourceURL.groups.sourceURL;\x0d\n  if (sourceURL != null && RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  return sourceURL;\x0d\n}\x0d\n\x0d\nfunction extractSourceMapURLMagicComment(content) {\x0d\n  let match;\x0d\n  let lastMatch;\x0d\n  // A while loop is used here to get the last occurrence of sourceMappingURL.\x0d\n  // This is needed so that we don't match sourceMappingURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceMappingURLMagicComment\x2C content))) {\x0d\n    lastMatch = match;\x0d\n  }\x0d\n  if (lastMatch == null) {\x0d\n    return null;\x0d\n  }\x0d\n  return lastMatch.groups.sourceMappingURL;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource\x2C sourceURL\x2C sourceMapURL) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    const { normalizeReferrerURL } = require('internal/modules/helpers');\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (sourceMapURL === undefined) {\x0d\n    sourceMapURL = extractSourceMapURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  // Bail out when there is no source map url.\x0d\n  if (typeof sourceMapURL !== 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (sourceURL === undefined) {\x0d\n    sourceURL = extractSourceURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  const data = dataFromUrl(filename\x2C sourceMapURL);\x0d\n  const url = data ? null : sourceMapURL;\x0d\n  if (cjsModuleInstance) {\x0d\n    getCjsSourceMapCache().set(cjsModuleInstance\x2C {\x0d\n      __proto__: null\x2C\x0d\n      filename\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    });\x0d\n  } else if (isGeneratedSource) {\x0d\n    const entry = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    };\x0d\n    generatedSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      generatedSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  } else {\x0d\n    // If there is no cjsModuleInstance and is not generated source assume we are in a\x0d\n    // "modules/esm" context.\x0d\n    const entry = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    };\x0d\n    esmSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      esmSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCacheGeneratedSourceMap(content) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n\x0d\n  const sourceURL = extractSourceURLMagicComment(content);\x0d\n  if (sourceURL === null) {\x0d\n    return;\x0d\n  }\x0d\n  try {\x0d\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true\x2C sourceURL);\x0d\n  } catch (err) {\x0d\n    // This can happen if the filename is not a valid URL.\x0d\n    // If we fail to cache the source map\x2C we should not fail the whole process.\x0d\n    debug(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/\x2C content)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const fs = require('fs');\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = { __proto__: null };\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of getCjsSourceMapCache()) {\x0d\n    obj[value.filename] = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: value.lineLengths\x2C\x0d\n      data: value.data\x2C\x0d\n      url: value.url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let entry = esmSourceMapCache.get(sourceURL) ?? generatedSourceMapCache.get(sourceURL);\x0d\n  if (entry === undefined) {\x0d\n    for (const value of getCjsSourceMapCache()) {\x0d\n      const filename = value.filename;\x0d\n      const cachedSourceURL = value.sourceURL;\x0d\n      if (sourceURL === filename || sourceURL === cachedSourceURL) {\x0d\n        entry = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (entry === undefined) {\x0d\n    return undefined;\x0d\n  }\x0d\n  let sourceMap = entry.sourceMap;\x0d\n  if (sourceMap === undefined) {\x0d\n    sourceMap = new SourceMap(entry.data\x2C { lineLengths: entry.lineLengths });\x0d\n    entry.sourceMap = sourceMap;\x0d\n  }\x0d\n  return sourceMap;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  maybeCacheGeneratedSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x5169d8fede,38,1741,2272,C0O1752C8O1752C13O1786C18O1786C22O1815C26O1874C32O1874C37O1846C42O1931C47O1931C53O1990C59O2153C65O2153C70O2125C75O2186C80O2186C84O2245C86O2263C93O2271,,
code-creation,JS,10,200761,0x5169d90ac6,30,validateBoolean node:internal/validators:216:25,0x2b98313f428,~
script-source,15,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateUint32(value\x2C name);\x0d\n  return value;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateInteger\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInteger} */\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateInt32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInt32} */\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateUint32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number|boolean} [positive=false]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateUint32} */\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\x0d\n  if (typeof value !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n  }\x0d\n  if (!NumberIsInteger(value)) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n  const min = positive ? 1 : 0;\x0d\n  // 2 ** 32 === 4294967296\x0d\n  const max = 4_294_967_295;\x0d\n  if (value < min || value > max) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateString\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string}\x0d\n */\x0d\n\x0d\n/** @type {validateString} */\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateNumber\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateNumber} */\x0d\nfunction validateNumber(value\x2C name\x2C min = undefined\x2C max) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n\x0d\n  if ((min != null && value < min) || (max != null && value > max) ||\x0d\n    ((min != null || max != null) && NumberIsNaN(value))) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      name\x2C\x0d\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\x0d\n      value);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateOneOf\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} oneOf\x0d\n */\x0d\n\x0d\n/** @type {validateOneOf} */\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBoolean\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean}\x0d\n */\x0d\n\x0d\n/** @type {validateBoolean} */\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\nconst kValidateObjectNone = 0;\x0d\nconst kValidateObjectAllowNullable = 1 << 0;\x0d\nconst kValidateObjectAllowArray = 1 << 1;\x0d\nconst kValidateObjectAllowFunction = 1 << 2;\x0d\n\x0d\n/**\x0d\n * @callback validateObject\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [options]\x0d\n */\x0d\n\x0d\n/** @type {validateObject} */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options = kValidateObjectNone) => {\x0d\n    if (options === kValidateObjectNone) {\x0d\n      if (value === null || ArrayIsArray(value)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      if (typeof value !== 'object') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n    } else {\x0d\n      const throwOnNullable = (kValidateObjectAllowNullable & options) === 0;\x0d\n\x0d\n      if (throwOnNullable && value === null) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      const throwOnArray = (kValidateObjectAllowArray & options) === 0;\x0d\n\x0d\n      if (throwOnArray && ArrayIsArray(value)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      const throwOnFunction = (kValidateObjectAllowFunction & options) === 0;\x0d\n      const typeofValue = typeof value;\x0d\n\x0d\n      if (typeofValue !== 'object' && (throwOnFunction || typeofValue !== 'function')) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateDictionary - We are using the Web IDL Standard definition\x0d\n *                                of "dictionary" here\x2C which means any value\x0d\n *                                whose Type is either Undefined\x2C Null\x2C or\x0d\n *                                Object (which includes functions).\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @see https://webidl.spec.whatwg.org/#es-dictionary\x0d\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\x0d\n */\x0d\n\x0d\n/** @type {validateDictionary} */\x0d\nconst validateDictionary = hideStackFrames(\x0d\n  (value\x2C name) => {\x0d\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [minLength]\x0d\n * @returns {asserts value is any[]}\x0d\n */\x0d\n\x0d\n/** @type {validateArray} */\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateStringArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string[]}\x0d\n */\x0d\n\x0d\n/** @type {validateStringArray} */\x0d\nfunction validateStringArray(value\x2C name) {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; ++i) {\x0d\n    // Don't use validateString here for performance reasons\x2C as\x0d\n    // we would generate intermediate strings for the name.\x0d\n    if (typeof value[i] !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'string'\x2C value[i]);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateBooleanArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean[]}\x0d\n */\x0d\n\x0d\n/** @type {validateBooleanArray} */\x0d\nfunction validateBooleanArray(value\x2C name) {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; ++i) {\x0d\n    // Don't use validateBoolean here for performance reasons\x2C as\x0d\n    // we would generate intermediate strings for the name.\x0d\n    if (value[i] !== true && value[i] !== false) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'boolean'\x2C value[i]);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateAbortSignalArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is AbortSignal[]}\x0d\n */\x0d\n\x0d\n/** @type {validateAbortSignalArray} */\x0d\nfunction validateAbortSignalArray(value\x2C name) {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; i++) {\x0d\n    const signal = value[i];\x0d\n    const indexedName = `${name}[${i}]`;\x0d\n    if (signal == null) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(indexedName\x2C 'AbortSignal'\x2C signal);\x0d\n    }\x0d\n    validateAbortSignal(signal\x2C indexedName);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} signal\x0d\n * @param {string} [name='signal']\x0d\n * @returns {asserts signal is keyof signals}\x0d\n */\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateBuffer\x0d\n * @param {*} buffer\x0d\n * @param {string} [name='buffer']\x0d\n * @returns {asserts buffer is ArrayBufferView}\x0d\n */\x0d\n\x0d\n/** @type {validateBuffer} */\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {string} data\x0d\n * @param {string} encoding\x0d\n */\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Check that the port number is not NaN when coerced to a number\x2C\x0d\n * is an integer and that it falls within the legal range of port numbers.\x0d\n * @param {*} port\x0d\n * @param {string} [name='Port']\x0d\n * @param {boolean} [allowZero=true]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateAbortSignal\x0d\n * @param {*} signal\x0d\n * @param {string} name\x0d\n */\x0d\n\x0d\n/** @type {validateAbortSignal} */\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validateFunction} */\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validatePlainFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validatePlainFunction} */\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateUndefined\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is undefined}\x0d\n */\x0d\n\x0d\n/** @type {validateUndefined} */\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} union\x0d\n */\x0d\nfunction validateUnion(value\x2C name\x2C union) {\x0d\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\n/*\x0d\n  The rules for the Link header field are described here:\x0d\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\x0d\n\x0d\n  This regex validates any string surrounded by angle brackets\x0d\n  (not necessarily a valid URI reference) followed by zero or more\x0d\n  link-params separated by semicolons.\x0d\n*/\x0d\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;"\\s]+(?:=(")?[^;"\\s]*\\1)?)*$/;\x0d\n\x0d\n/**\x0d\n * @param {any} value\x0d\n * @param {string} name\x0d\n */\x0d\nfunction validateLinkHeaderFormat(value\x2C name) {\x0d\n  if (\x0d\n    typeof value === 'undefined' ||\x0d\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\x0d\n  ) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      name\x2C\x0d\n      value\x2C\x0d\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateInternalField = hideStackFrames((object\x2C fieldKey\x2C className) => {\x0d\n  if (typeof object !== 'object' || object === null || !ObjectPrototypeHasOwnProperty(object\x2C fieldKey)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('this'\x2C className\x2C object);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {any} hints\x0d\n * @return {string}\x0d\n */\x0d\nfunction validateLinkHeaderValue(hints) {\x0d\n  if (typeof hints === 'string') {\x0d\n    validateLinkHeaderFormat(hints\x2C 'hints');\x0d\n    return hints;\x0d\n  } else if (ArrayIsArray(hints)) {\x0d\n    const hintsLength = hints.length;\x0d\n    let result = '';\x0d\n\x0d\n    if (hintsLength === 0) {\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    for (let i = 0; i < hintsLength; i++) {\x0d\n      const link = hints[i];\x0d\n      validateLinkHeaderFormat(link\x2C 'hints');\x0d\n      result += link;\x0d\n\x0d\n      if (i !== hintsLength - 1) {\x0d\n        result += '\x2C ';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE(\x0d\n    'hints'\x2C\x0d\n    hints\x2C\x0d\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateBooleanArray\x2C\x0d\n  validateAbortSignalArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateDictionary\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  kValidateObjectNone\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowFunction\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateUnion\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateLinkHeaderValue\x2C\x0d\n  validateInternalField\x2C\x0d\n};\x0d\n
code-source-info,0x5169d90ac6,15,5810,5924,C0O5829C6O5866C22O5872C27O5866C29O5923,,
code-creation,JS,10,202169,0x5169d92346,348,initializeDeprecations node:internal/process/pre_execution:484:32,0x3a6c8fb9748,~
code-source-info,0x5169d92346,67,15227,17207,C0O15257C6O15257C11O15243C16O15313C24O15313C29O15508C35O15508C40O15550C46O15550C51O15604C73O15596C101O15596C104O15940C112O15960C116O16003C127O16078C138O16170C149O16124C158O15988C167O16231C170O15958C174O15585C239O16515C245O16515C250O16494C255O16545C257O16574C268O16595C275O16741C279O16574C284O16778C288O16809C294O16845C304O16923C311O16827C316O16825C320O17012C326O17054C337O17036C342O17034C347O17206,,
code-creation,JS,10,202433,0x5169d926e6,72,initializeDns node:internal/dns/utils:202:23,0x3a6c8fbbb68,~
script-source,71,node:internal/dns/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst { isIP } = require('internal/net');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInt32\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nlet binding;\x0d\nfunction lazyBinding() {\x0d\n  binding ??= internalBinding('cares_wrap');\x0d\n  return binding;\x0d\n}\x0d\nconst IANA_DNS_PORT = 53;\x0d\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\x0d\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\x0d\nconst {\x0d\n  ERR_DNS_SET_SERVERS_FAILED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_IP_ADDRESS\x2C\x0d\n} = errors.codes;\x0d\n\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    addDeserializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nfunction validateTimeout(options) {\x0d\n  const { timeout = -1 } = { ...options };\x0d\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1);\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nfunction validateTries(options) {\x0d\n  const { tries = 4 } = { ...options };\x0d\n  validateInt32(tries\x2C 'options.tries'\x2C 1);\x0d\n  return tries;\x0d\n}\x0d\n\x0d\nconst kSerializeResolver = Symbol('dns:resolver:serialize');\x0d\nconst kDeserializeResolver = Symbol('dns:resolver:deserialize');\x0d\nconst kSnapshotStates = Symbol('dns:resolver:config');\x0d\nconst kInitializeHandle = Symbol('dns:resolver:initializeHandle');\x0d\nconst kSetServersInteral = Symbol('dns:resolver:setServers');\x0d\n\x0d\n// Resolver instances correspond 1:1 to c-ares channels.\x0d\n\x0d\nclass ResolverBase {\x0d\n  constructor(options = undefined) {\x0d\n    const timeout = validateTimeout(options);\x0d\n    const tries = validateTries(options);\x0d\n    // If we are building snapshot\x2C save the states of the resolver along\x0d\n    // the way.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates] = { timeout\x2C tries };\x0d\n    }\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  [kInitializeHandle](timeout\x2C tries) {\x0d\n    const { ChannelWrap } = lazyBinding();\x0d\n    this._handle = new ChannelWrap(timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  cancel() {\x0d\n    this._handle.cancel();\x0d\n  }\x0d\n\x0d\n  getServers() {\x0d\n    return ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\x0d\n      if (!val[1] || val[1] === IANA_DNS_PORT)\x0d\n        return val[0];\x0d\n\x0d\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\x0d\n      return `${host}:${val[1]}`;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setServers(servers) {\x0d\n    validateArray(servers\x2C 'servers');\x0d\n\x0d\n    // Cache the original servers because in the event of an error while\x0d\n    // setting the servers\x2C c-ares won't have any servers available for\x0d\n    // resolution.\x0d\n    const newSet = [];\x0d\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\x0d\n      validateString(serv\x2C `servers[${index}]`);\x0d\n      let ipVersion = isIP(serv);\x0d\n\x0d\n      if (ipVersion !== 0)\x0d\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\x0d\n\x0d\n      const match = RegExpPrototypeExec(IPv6RE\x2C serv);\x0d\n\x0d\n      // Check for an IPv6 in brackets.\x0d\n      if (match) {\x0d\n        ipVersion = isIP(match[1]);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          const port = NumberParseInt(\x0d\n            RegExpPrototypeSymbolReplace(addrSplitRE\x2C serv\x2C '$2')) || IANA_DNS_PORT;\x0d\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // addr::port\x0d\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE\x2C serv);\x0d\n\x0d\n      if (addrSplitMatch) {\x0d\n        const hostIP = addrSplitMatch[1];\x0d\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\x0d\n\x0d\n        ipVersion = isIP(hostIP);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          return ArrayPrototypePush(\x0d\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      throw new ERR_INVALID_IP_ADDRESS(serv);\x0d\n    });\x0d\n\x0d\n    this[kSetServersInteral](newSet\x2C servers);\x0d\n  }\x0d\n\x0d\n  [kSetServersInteral](newSet\x2C servers) {\x0d\n    const orig = this._handle.getServers() || [];\x0d\n    const errorNumber = this._handle.setServers(newSet);\x0d\n\x0d\n    if (errorNumber !== 0) {\x0d\n      // Reset the servers to the old servers\x2C because ares probably unset them.\x0d\n      this._handle.setServers(ArrayPrototypeJoin(orig\x2C '\x2C'));\x0d\n      const { strerror } = lazyBinding();\x0d\n      const err = strerror(errorNumber);\x0d\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\x0d\n    }\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].servers = newSet;\x0d\n    }\x0d\n  }\x0d\n\x0d\n\x0d\n  setLocalAddress(ipv4\x2C ipv6) {\x0d\n    validateString(ipv4\x2C 'ipv4');\x0d\n\x0d\n    if (ipv6 !== undefined) {\x0d\n      validateString(ipv6\x2C 'ipv6');\x0d\n    }\x0d\n\x0d\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].localAddress = { ipv4\x2C ipv6 };\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): consider exposing this if custom DNS resolvers\x0d\n  // end up being useful for snapshot users.\x0d\n  [kSerializeResolver]() {\x0d\n    this._handle = null;  // We'll restore it during deserialization.\x0d\n    addDeserializeCallback(function deserializeResolver(resolver) {\x0d\n      resolver[kDeserializeResolver]();\x0d\n    }\x2C this);\x0d\n  }\x0d\n\x0d\n  [kDeserializeResolver]() {\x0d\n    const { timeout\x2C tries\x2C localAddress\x2C servers } = this[kSnapshotStates];\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n    if (localAddress) {\x0d\n      const { ipv4\x2C ipv6 } = localAddress;\x0d\n      this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n    }\x0d\n    if (servers) {\x0d\n      this[kSetServersInteral](servers\x2C servers);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nlet defaultResolver;\x0d\nlet dnsOrder;\x0d\n\x0d\nfunction initializeDns() {\x0d\n  const orderFromCLI = getOptionValue('--dns-result-order');\x0d\n  if (!orderFromCLI) {\x0d\n    dnsOrder ??= 'verbatim';\x0d\n  } else {\x0d\n    // Allow the deserialized application to override order from CLI.\x0d\n    dnsOrder = orderFromCLI;\x0d\n  }\x0d\n\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  addSerializeCallback(() => {\x0d\n    defaultResolver?.[kSerializeResolver]();\x0d\n  });\x0d\n}\x0d\n\x0d\nconst resolverKeys = [\x0d\n  'getServers'\x2C\x0d\n  'resolve'\x2C\x0d\n  'resolve4'\x2C\x0d\n  'resolve6'\x2C\x0d\n  'resolveAny'\x2C\x0d\n  'resolveCaa'\x2C\x0d\n  'resolveCname'\x2C\x0d\n  'resolveMx'\x2C\x0d\n  'resolveNaptr'\x2C\x0d\n  'resolveNs'\x2C\x0d\n  'resolvePtr'\x2C\x0d\n  'resolveSoa'\x2C\x0d\n  'resolveSrv'\x2C\x0d\n  'resolveTxt'\x2C\x0d\n  'reverse'\x2C\x0d\n];\x0d\n\x0d\nfunction getDefaultResolver() {\x0d\n  // We do this here instead of pre-execution so that the default resolver is\x0d\n  // only ever created when the user loads any dns module.\x0d\n  if (defaultResolver === undefined) {\x0d\n    defaultResolver = new ResolverBase();\x0d\n  }\x0d\n  return defaultResolver;\x0d\n}\x0d\n\x0d\nfunction setDefaultResolver(resolver) {\x0d\n  defaultResolver = resolver;\x0d\n}\x0d\n\x0d\nfunction bindDefaultResolver(target\x2C source) {\x0d\n  const defaultResolver = getDefaultResolver();\x0d\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\x0d\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction validateHints(hints) {\x0d\n  const { AI_ADDRCONFIG\x2C AI_ALL\x2C AI_V4MAPPED } = lazyBinding();\x0d\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet invalidHostnameWarningEmitted = false;\x0d\nfunction emitInvalidHostnameWarning(hostname) {\x0d\n  if (!invalidHostnameWarningEmitted) {\x0d\n    process.emitWarning(\x0d\n      `The provided hostname "${hostname}" is not a valid ` +\x0d\n      'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0118'\x2C\x0d\n    );\x0d\n    invalidHostnameWarningEmitted = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDefaultVerbatim() {\x0d\n  return dnsOrder !== 'ipv4first';\x0d\n}\x0d\n\x0d\nfunction setDefaultResultOrder(value) {\x0d\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first']);\x0d\n  dnsOrder = value;\x0d\n}\x0d\n\x0d\nfunction getDefaultResultOrder() {\x0d\n  return dnsOrder;\x0d\n}\x0d\n\x0d\nfunction createResolverClass(resolver) {\x0d\n  const resolveMap = { __proto__: null };\x0d\n\x0d\n  class Resolver extends ResolverBase {}\x0d\n\x0d\n  Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\x0d\n  Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\x0d\n  Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\x0d\n  Resolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\x0d\n  Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\x0d\n  Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\x0d\n  Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\x0d\n  Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\x0d\n  Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\x0d\n  Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\x0d\n  Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\x0d\n  Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\x0d\n  Resolver.prototype.reverse = resolver('getHostByAddr');\x0d\n\x0d\n  return {\x0d\n    resolveMap\x2C\x0d\n    Resolver\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// ERROR CODES\x0d\nconst errorCodes = {\x0d\n  NODATA: 'ENODATA'\x2C\x0d\n  FORMERR: 'EFORMERR'\x2C\x0d\n  SERVFAIL: 'ESERVFAIL'\x2C\x0d\n  NOTFOUND: 'ENOTFOUND'\x2C\x0d\n  NOTIMP: 'ENOTIMP'\x2C\x0d\n  REFUSED: 'EREFUSED'\x2C\x0d\n  BADQUERY: 'EBADQUERY'\x2C\x0d\n  BADNAME: 'EBADNAME'\x2C\x0d\n  BADFAMILY: 'EBADFAMILY'\x2C\x0d\n  BADRESP: 'EBADRESP'\x2C\x0d\n  CONNREFUSED: 'ECONNREFUSED'\x2C\x0d\n  TIMEOUT: 'ETIMEOUT'\x2C\x0d\n  EOF: 'EOF'\x2C\x0d\n  FILE: 'EFILE'\x2C\x0d\n  NOMEM: 'ENOMEM'\x2C\x0d\n  DESTRUCTION: 'EDESTRUCTION'\x2C\x0d\n  BADSTR: 'EBADSTR'\x2C\x0d\n  BADFLAGS: 'EBADFLAGS'\x2C\x0d\n  NONAME: 'ENONAME'\x2C\x0d\n  BADHINTS: 'EBADHINTS'\x2C\x0d\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\x0d\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\x0d\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\x0d\n  CANCELLED: 'ECANCELLED'\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  bindDefaultResolver\x2C\x0d\n  getDefaultResolver\x2C\x0d\n  setDefaultResolver\x2C\x0d\n  validateHints\x2C\x0d\n  validateTimeout\x2C\x0d\n  validateTries\x2C\x0d\n  emitInvalidHostnameWarning\x2C\x0d\n  getDefaultVerbatim\x2C\x0d\n  getDefaultResultOrder\x2C\x0d\n  setDefaultResultOrder\x2C\x0d\n  errorCodes\x2C\x0d\n  createResolverClass\x2C\x0d\n  initializeDns\x2C\x0d\n};\x0d\n
code-source-info,0x5169d926e6,71,5650,6030,C0O5679C8O5679C13O5720C15O5746C28O5755C36O5859C38O5868C44O5894C49O5899C54O5928C55O5935C56O5946C66O5946C71O6029,,
code-creation,JS,10,203447,0x5169d934be,90,setupSymbolDisposePolyfill node:internal/process/pre_execution:138:36,0x3a6c8fb9120,~
code-source-info,0x5169d934be,67,3846,4569,C0O4019C5O4037C13O4066C20O4087C33O4200C39O4066C44O4318C49O4336C57O4370C64O4391C77O4509C83O4370C89O4568,,
code-creation,JS,10,203650,0x5169d93686,21,assert node:internal/assert:11:16,0x2b98313b8b8,~
script-source,11,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x5169d93686,11,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,JS,10,203928,0x5169d93bf6,432,readPolicyFromDisk node:internal/process/pre_execution:635:28,0x3a6c8fb98c0,~
code-source-info,0x5169d93bf
code-creation,JS,10,204126,0x5169d94006,49,setupStacktracePrinterOnSigint node:internal/process/pre_execution:398:40,0x3a6c8fb94c8,~
code-source-info,0x5169d94006,67,12414,12608,C0O12422C8O12427C14O12468C15O12475C16O12511C22O12511C27O12492C32O12563C38O12597C43O12597C48O12607,,
code-creation,JS,10,204208,0x5169d941a6,35,initializeReportSignalHandlers node:internal/process/pre_execution:428:40,0x3a6c8fb95e0,~
code-source-info,0x5169d941a6,67,13215,13369,C0O13223C8O13227C14O13301C20O13301C25O13280C30O13342C34O13368,,
code-creation,JS,10,204374,0x5169d944a6,155,initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:435:46,0x3a6c8fb9630,~
code-source-info,0x5169d944a6,67,13418,14130,C0O13418C20O13441C30O13441C34O13441C36O13507C46O13507C50O13507C52O13548C56O13566C57O13573C58O13579C66O13579C71O13609C79O13610C84O13671C92O13671C97O13649C103O13852C108O13860C119O13860C125O13992C132O13996C137O14025C149O14025C154O14129,,
code-creation,JS,10,204526,0x5169d947ee,138,setupChildProcessIpcChannel node:internal/process/pre_execution:545:37,0x3a6c8fb9798,~
code-source-info,0x5169d947ee,67,17247,17793,C0O17255C3O17267C8O17271C14O17310C20O17310C25O17356C33O17379C38O17383C46O17356C52O17410C53O17420C57O17410C61O17504C64O17519C73O17580C76O17588C81O17592C90O17640C93O17655C102O17699C108O17699C113O17723C118O17724C124O17764C127O17779C132O17764C137O17792,,
code-creation,JS,10,204683,0x5169d94a0e,63,initializeClusterIPC node:internal/process/pre_execution:564:30,0x3a6c8fb97e8,~
code-source-info,0x5169d94a0e,67,17826,18074,C0O17834C3O17846C10O17850C18O17865C23O17869C29O17908C35O17908C40O17941C45O17941C49O18032C52O18047C62O18073,,
code-creation,JS,10,204820,0x5169d94b4e,54,runDeserializeCallbacks node:internal/v8/startup_snapshot:39:33,0x3a6c8fa8f78,~
script-source,53,node:internal/v8/startup_snapshot,'use strict';\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_NOT_BUILDING_SNAPSHOT\x2C\x0d\n    ERR_NOT_SUPPORTED_IN_SNAPSHOT\x2C\x0d\n    ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  setSerializeCallback\x2C\x0d\n  setDeserializeCallback\x2C\x0d\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\x0d\n  isBuildingSnapshotBuffer\x2C\x0d\n} = internalBinding('mksnapshot');\x0d\n\x0d\nfunction isBuildingSnapshot() {\x0d\n  return isBuildingSnapshotBuffer[0];\x0d\n}\x0d\n\x0d\nfunction throwIfNotBuildingSnapshot() {\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfBuildingSnapshot(reason) {\x0d\n  if (isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_SUPPORTED_IN_SNAPSHOT(reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst deserializeCallbacks = [];\x0d\nlet deserializeCallbackIsSet = false;\x0d\nfunction runDeserializeCallbacks() {\x0d\n  while (deserializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addDeserializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (!deserializeCallbackIsSet) {\x0d\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\x0d\n    // the deserialize callbacks can always be invoked. For now only\x0d\n    // store it in C++ when it's actually used to avoid unnecessary\x0d\n    // C++ -> JS costs.\x0d\n    setDeserializeCallback(runDeserializeCallbacks);\x0d\n    deserializeCallbackIsSet = true;\x0d\n  }\x0d\n  deserializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nconst serializeCallbacks = [];\x0d\nfunction runSerializeCallbacks() {\x0d\n  while (serializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addSerializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  serializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nfunction initializeCallbacks() {\x0d\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\x0d\n  // they throw.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    setSerializeCallback(runSerializeCallbacks);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet deserializeMainIsSet = false;\x0d\nfunction setDeserializeMainFunction(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\x0d\n  // main function to run the lib/internal/main scripts and make sure that\x0d\n  // the main function set in the snapshot building process takes precedence.\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (deserializeMainIsSet) {\x0d\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\x0d\n  }\x0d\n  deserializeMainIsSet = true;\x0d\n\x0d\n  _setDeserializeMainFunction(function deserializeMain() {\x0d\n    const {\x0d\n      prepareMainThreadExecution\x2C\x0d\n      markBootstrapComplete\x2C\x0d\n    } = require('internal/process/pre_execution');\x0d\n\x0d\n    // This should be in sync with run_main_module.js until we make that\x0d\n    // a built-in main function.\x0d\n    // TODO(joyeecheung): make a copy of argv[0] and insert it as argv[1].\x0d\n    prepareMainThreadExecution(false);\x0d\n    markBootstrapComplete();\x0d\n    callback(data);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeCallbacks\x2C\x0d\n  runDeserializeCallbacks\x2C\x0d\n  throwIfBuildingSnapshot\x2C\x0d\n  // Exposed to require('v8').startupSnapshot\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    setDeserializeMainFunction\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x5169d94b4e,53,901,1047,C0O944C5O937C11O944C16O989C21O1010C26O1010C33O967C40O980C44O1024C48O909C53O1046,,
code-creation,JS,10,205302,0x5169d9507e,69,setupUserModules node:internal/process/pre_execution:163:26,0x3a6c8fb9170,~
code-source-info,0x5169d9507e,67,4598,5013,C10O4628C13O4628C16O4654C19O4654C23O4712C29O4712C34O4755C39O4773C45O4755C49O4868C53O4895C54O4902C55O4911C58O4911C61O4981C64O4981C68O5012,,
code-creation,JS,10,205438,0x5169d951ce,21,initializeCJSLoader node:internal/process/pre_execution:685:29,0x3a6c8fb9910,~
code-source-info,0x5169d951ce,67,21924,22020,C0O21958C6O21958C11O21940C16O22001C20O22019,,
code-creation,JS,10,205737,0x5169d9532e,90,initializeCJS node:internal/modules/cjs/loader:383:23,0x3a6c8fb6578,~
script-source,63,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x2C\x0d\n  initializeCJS\x2C\x0d\n};\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURL } = require('internal/url');\x0d\nconst {\x0d\n  pendingDeprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  setOwnProperty\x2C\x0d\n  getLazy\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  internalCompileFunction\x2C\x0d\n  makeContextifyScript\x2C\x0d\n  runScriptInThisContext\x2C\x0d\n} = require('internal/vm');\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst path = require('path');\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    require_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  getCjsConditions\x2C\x0d\n  initializeCjsConditions\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n  toRealPath\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { getOptionValue\x2C getEmbedderOptions } = require('internal/options');\x0d\nconst policy = getLazy(\x0d\n  () => (getOptionValue('--experimental-policy') ? require('internal/process/policy') : null)\x2C\x0d\n);\x0d\nconst shouldReportRequiredModules = getLazy(() => process.env.WATCH_REPORT_DEPENDENCIES);\x0d\n\x0d\nconst getCascadedLoader = getLazy(\x0d\n  () => require('internal/process/esm_loader').esmLoader\x2C\x0d\n);\x0d\n\x0d\nconst permission = require('internal/process/permission');\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = { __proto__: null };\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet isPreloading = false;\x0d\nlet statCache = null;\x0d\n\x0d\n/**\x0d\n * Our internal implementation of `require`.\x0d\n * @param {Module} module Parent module of what is being required\x0d\n * @param {string} id Specifier of the child module being imported\x0d\n */\x0d\nfunction internalRequire(module\x2C id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C module\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get a path's properties\x2C using an in-memory cache to minimize lookups.\x0d\n * @param {string} filename Absolute path to the file\x0d\n */\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) { return result; }\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nlet _stat = stat;\x0d\nObjectDefineProperty(Module\x2C '_stat'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _stat; }\x2C\x0d\n  set(stat) {\x0d\n    emitExperimentalWarning('Module._stat');\x0d\n    _stat = stat;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Update the parent's children array with the child module.\x0d\n * @param {Module} parent Module requiring the children\x0d\n * @param {Module} child Module being required\x0d\n * @param {boolean} scan Add the child to the parent's children if not already present\x0d\n */\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child))) {\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tell the watch mode that a module was required.\x0d\n * @param {string} filename Absolute path of the module\x0d\n */\x0d\nfunction reportModuleToWatchMode(filename) {\x0d\n  if (shouldReportRequiredModules() && process.send) {\x0d\n    process.send({ 'watch:require': [filename] });\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tell the watch mode that a module was not found.\x0d\n * @param {string} basePath The absolute path that errored\x0d\n * @param {string[]} extensions The extensions that were tried\x0d\n */\x0d\nfunction reportModuleNotFoundToWatchMode(basePath\x2C extensions) {\x0d\n  if (shouldReportRequiredModules() && process.send) {\x0d\n    process.send({ 'watch:require': ArrayPrototypeMap(extensions\x2C (ext) => path.resolve(`${basePath}${ext}`)) });\x0d\n  }\x0d\n}\x0d\n\x0d\n/** @type {Map<Module\x2C Module>} */\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\n/**\x0d\n * Create a new module instance.\x0d\n * @param {string} id\x0d\n * @param {Module} parent\x0d\n */\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  setOwnProperty(this\x2C 'exports'\x2C {});\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n  let redirects;\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const moduleURL = pathToFileURL(id);\x0d\n    redirects = manifest.getDependencyMapper(moduleURL);\x0d\n    // TODO(rafaelgss): remove the necessity of this branch\x0d\n    setOwnProperty(this\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\x0d\n    // eslint-disable-next-line no-proto\x0d\n    setOwnProperty(this.__proto__\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\x0d\n  }\x0d\n  this[require_private_symbol] = internalRequire;\x0d\n}\x0d\n\x0d\n/** @type {Record<string\x2C Module>} */\x0d\nModule._cache = { __proto__: null };\x0d\n/** @type {Record<string\x2C string>} */\x0d\nModule._pathCache = { __proto__: null };\x0d\n/** @type {Record<string\x2C (module: Module\x2C filename: string) => void>} */\x0d\nModule._extensions = { __proto__: null };\x0d\n/** @type {string[]} */\x0d\nlet modulePaths = [];\x0d\n/** @type {string[]} */\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n/**\x0d\n * Add the CommonJS wrapper around a module's source code.\x0d\n * @param {string} script Module source code\x0d\n */\x0d\nlet wrap = function(script) { // eslint-disable-line func-style\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(BuiltinModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\n/**\x0d\n * Get the parent of the current module from our cache.\x0d\n */\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Set the parent of the current module in our cache.\x0d\n * @param {Module} value\x0d\n */\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: pendingDeprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x2C\x0d\n  )\x2C\x0d\n  set: pendingDeprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x2C\x0d\n  )\x2C\x0d\n});\x0d\nModule._debug = pendingDeprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\nModule.isBuiltin = BuiltinModule.isBuiltin;\x0d\n\x0d\n/**\x0d\n * Prepare to run CommonJS code.\x0d\n * This function is called during pre-execution\x2C before any user code is run.\x0d\n */\x0d\nfunction initializeCJS() {\x0d\n  // This need to be done at runtime in case --expose-internals is set.\x0d\n  const builtinModules = BuiltinModule.getCanBeRequiredByUsersWithoutSchemeList();\x0d\n  Module.builtinModules = ObjectFreeze(builtinModules);\x0d\n\x0d\n  initializeCjsConditions();\x0d\n\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    Module._initPaths();\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nlet _readPackage = packageJsonReader.readPackage;\x0d\nObjectDefineProperty(Module\x2C '_readPackage'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _readPackage; }\x2C\x0d\n  set(readPackage) {\x0d\n    emitExperimentalWarning('Module._readPackage');\x0d\n    _readPackage = readPackage;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Try to load a specifier as a package.\x0d\n * @param {string} requestPath The path to what we are trying to load\x0d\n * @param {string[]} exts File extensions to try appending in order to resolve the file\x0d\n * @param {boolean} isMain Whether the file is the main entry point of the app\x0d\n * @param {string} originalPath The specifier passed to `require`\x0d\n */\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = _readPackage(requestPath).main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x2C\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Check if the file exists and is not a directory if using `--preserve-symlinks` and `isMain` is false\x2C keep symlinks\x0d\n * intact\x2C otherwise resolve to the absolute realpath.\x0d\n * @param {string} requestPath The path to the file to load.\x0d\n * @param {boolean} isMain Whether the file is the main module.\x0d\n */\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = _stat(requestPath);\x0d\n  if (rc !== 0) { return; }\x0d\n  if (getOptionValue('--preserve-symlinks') && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Given a path\x2C check if the file exists with any of the set extensions.\x0d\n * @param {string} basePath The path and filename without extension\x0d\n * @param {string[]} exts The extensions to try\x0d\n * @param {boolean} isMain Whether the module is the main module\x0d\n */\x0d\nfunction tryExtensions(basePath\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(basePath + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Find the longest (possibly multi-dot) extension registered in `Module._extensions`.\x0d\n * @param {string} filename The filename to find the longest registered extension for.\x0d\n */\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) { continue; } // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) { return currentExtension; }\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tries to get the absolute file path of the parent module.\x0d\n * @param {Module} parent The parent module object.\x0d\n */\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) { return false; }\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Attempt to resolve a module request using the parent module package metadata.\x0d\n * @param {string} parentPath The path of the parent module\x0d\n * @param {string} request The module request to resolve\x0d\n */\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) { return false; }\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = packageJsonReader.readPackageScope(parentPath);\x0d\n  if (!pkg || pkg.exports == null || pkg.name === undefined) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const { packageExportsResolve } = require('internal/modules/esm/resolve');\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C getCjsConditions())\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    }\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This only applies to requests of a specific form:\x0d\n * 1. `name/.*`\x0d\n * 2. `@scope/name/.*`\x0d\n */\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\n\x0d\n/**\x0d\n * Resolves the exports for a given module path and request.\x0d\n * @param {string} nmPath The path to the module.\x0d\n * @param {string} request The request for the module.\x0d\n */\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\x0d\n  if (!name) { return; }\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = _readPackage(pkgPath);\x0d\n  if (pkg.exists && pkg.exports != null) {\x0d\n    try {\x0d\n      const { packageExportsResolve } = require('internal/modules/esm/resolve');\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        getCjsConditions())\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the absolute path to a module.\x0d\n * @param {string} request Relative or absolute file path\x0d\n * @param {Array<string>} paths Folders to search as file paths\x0d\n * @param {boolean} isMain Whether the request is the main app entry point\x0d\n * @returns {string | false}\x0d\n */\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry) {\x0d\n    return entry;\x0d\n  }\x0d\n\x0d\n  let exts;\x0d\n  const trailingSlash = request.length > 0 &&\x0d\n    (StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_FORWARD_SLASH || (\x0d\n      StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_DOT &&\x0d\n      (\x0d\n        request.length === 1 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_FORWARD_SLASH ||\x0d\n        (StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_DOT && (\x0d\n          request.length === 2 ||\x0d\n          StringPrototypeCharCodeAt(request\x2C request.length - 3) === CHAR_FORWARD_SLASH\x0d\n        ))\x0d\n      )\x0d\n    ));\x0d\n\x0d\n  const isRelative = StringPrototypeCharCodeAt(request\x2C 0) === CHAR_DOT &&\x0d\n    (\x0d\n      request.length === 1 ||\x0d\n      StringPrototypeCharCodeAt(request\x2C 1) === CHAR_FORWARD_SLASH ||\x0d\n      (isWindows && StringPrototypeCharCodeAt(request\x2C 1) === CHAR_BACKWARD_SLASH) ||\x0d\n      (StringPrototypeCharCodeAt(request\x2C 1) === CHAR_DOT && ((\x0d\n        request.length === 2 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C 2) === CHAR_FORWARD_SLASH) ||\x0d\n        (isWindows && StringPrototypeCharCodeAt(request\x2C 2) === CHAR_BACKWARD_SLASH)))\x0d\n    );\x0d\n  let insidePath = true;\x0d\n  if (isRelative) {\x0d\n    const normalizedRequest = path.normalize(request);\x0d\n    if (StringPrototypeStartsWith(normalizedRequest\x2C '..')) {\x0d\n      insidePath = false;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    // or doesn't have permission to it\x0d\n    const curPath = paths[i];\x0d\n    if (insidePath && curPath &&\x0d\n      ((permission.isEnabled() && !permission.has('fs.read'\x2C curPath)) || _stat(curPath) < 1)\x0d\n    ) {\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved) {\x0d\n        return exportsResolved;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = _stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (getOptionValue('--preserve-symlinks')) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (getOptionValue('--preserve-symlinks-main')) {\x0d\n          // For the main module\x2C we use the --preserve-symlinks-main flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the --preserve-symlinks-main option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined) {\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        }\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined) {\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      }\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n\x0d\n    const extensions = [''];\x0d\n    if (exts !== undefined) {\x0d\n      ArrayPrototypePushApply(extensions\x2C exts);\x0d\n    }\x0d\n    reportModuleNotFoundToWatchMode(basePath\x2C extensions);\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n/** `node_modules` character codes reversed */\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  /**\x0d\n   * Get the paths to the `node_modules` folder for a given path.\x0d\n   * @param {string} from `__dirname` of the module\x0d\n   */\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON) {\x0d\n      return [from + 'node_modules'];\x0d\n    }\x0d\n\x0d\n    /** @type {string[]} */\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen) {\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x2C\x0d\n          );\x0d\n        }\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  /**\x0d\n   * Get the paths to the `node_modules` folder for a given path.\x0d\n   * @param {string} from `__dirname` of the module\x0d\n   */\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/') {\x0d\n      return ['/node_modules'];\x0d\n    }\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    /** @type {string[]} */\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen) {\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x2C\x0d\n          );\x0d\n        }\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the paths for module resolution.\x0d\n * @param {string} request\x0d\n * @param {Module} parent\x0d\n */\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (BuiltinModule.normalizeRequirableId(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    /** @type {string[]} */\x0d\n    let paths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeSlice(modulePaths);\x0d\n      ArrayPrototypeUnshiftApply(paths\x2C parent.paths);\x0d\n    } else {\x0d\n      paths = modulePaths;\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Emits a warning when a non-existent property of module exports is accessed inside a circular dependency.\x0d\n * @param {string} prop The name of the non-existent property.\x0d\n */\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') { return target[prop]; }\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule') {\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    }\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Returns the exports object for a module that has a circular `require`.\x0d\n * If the exports object is a plain object\x2C it is wrapped in a proxy that warns\x0d\n * about circular dependencies.\x0d\n * @param {Module} module The module instance\x0d\n */\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Load a module from cache if it exists\x2C otherwise create a new module instance.\x0d\n * 1. If a module already exists in the cache: return its exports object.\x0d\n * 2. If the module is native: call\x0d\n *    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n * 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n *    Then have it load the file contents before returning its exports object.\x0d\n * @param {string} request Specifier of module to load via `require`\x0d\n * @param {string} parent Absolute path of the module importing the child\x0d\n * @param {boolean} isMain Whether the module is the main entry point\x0d\n */\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    reportModuleToWatchMode(filename);\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded) {\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        }\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(request\x2C 5);\x0d\n\x0d\n    if (!BuiltinModule.canBeRequiredByUsers(id)) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\x0d\n    }\x0d\n\x0d\n    const module = loadBuiltinModule(id\x2C request);\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded) {\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      }\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (BuiltinModule.canBeRequiredWithoutScheme(filename)) {\x0d\n    const mod = loadBuiltinModule(filename\x2C request);\x0d\n    return mod.exports;\x0d\n  }\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    setOwnProperty(process\x2C 'mainModule'\x2C module);\x0d\n    setOwnProperty(module.require\x2C 'main'\x2C process.mainModule);\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  reportModuleToWatchMode(filename);\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Given a `require` string and its context\x2C get its absolute file path.\x0d\n * @param {string} request The specifier to resolve\x0d\n * @param {Module} parent The module containing the `require` call\x0d\n * @param {boolean} isMain Whether the module is the main entry point\x0d\n * @param {ResolveFilenameOptions} options Options object\x0d\n * @typedef {object} ResolveFilenameOptions\x0d\n * @property {string[]} paths Paths to search for modules in\x0d\n */\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (BuiltinModule.normalizeRequirableId(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j])) {\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\x0d\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\x0d\n    const pkg = packageJsonReader.readPackageScope(parentPath) || { __proto__: null };\x0d\n    if (pkg.data?.imports != null) {\x0d\n      try {\x0d\n        const { packageImportsResolve } = require('internal/modules/esm/resolve');\x0d\n        return finalizeEsmResolution(\x0d\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\x0d\n                                getCjsConditions())\x2C parentPath\x2C\x0d\n          pkg.path);\x0d\n      } catch (e) {\x0d\n        if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n          throw createEsmNotFoundErr(request);\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain);\x0d\n  if (filename) { return filename; }\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Finishes resolving an ES module specifier into an absolute file path.\x0d\n * @param {string} resolved The resolved module specifier\x0d\n * @param {string} parentPath The path of the parent module\x0d\n * @param {string} pkgPath The path of the package.json file\x0d\n * @throws {ERR_INVALID_MODULE_SPECIFIER} If the resolved module specifier contains encoded `/` or `\\\\` characters\x0d\n * @throws {Error} If the module cannot be found\x0d\n */\x0d\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\x0d\n  const { encodedSepRegEx } = require('internal/modules/esm/resolve');\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  }\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  const actual = tryFile(filename);\x0d\n  if (actual) {\x0d\n    return actual;\x0d\n  }\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates an error object for when a requested ES module cannot be found.\x0d\n * @param {string} request The name of the requested module\x0d\n * @param {string} [path] The path to the requested module\x0d\n */\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path) {\x0d\n    err.path = path;\x0d\n  }\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Given a file name\x2C pass it to the proper extension handler.\x0d\n * @param {string} filename The `require` specifier\x0d\n */\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs']) {\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n  }\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const cascadedLoader = getCascadedLoader();\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !cascadedLoader.cjsCache.has(this)) {\x0d\n    cascadedLoader.cjsCache.set(this\x2C exports);\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Loads a module at the given file path. Returns that module's `exports` property.\x0d\n * Note: when using the experimental policy mechanism this function is overridden.\x0d\n * @param {string} id\x0d\n * @throws {ERR_INVALID_ARG_TYPE} When `id` is not a string\x0d\n */\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Resolved path to `process.argv[1]` will be lazily placed here\x0d\n * (needed for setting breakpoint when called with `--inspect-brk`).\x0d\n * @type {string | undefined}\x0d\n */\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n/** @type {import('vm').Script} */\x0d\n\x0d\n/**\x0d\n * Wraps the given content in a script and runs it in a new context.\x0d\n * @param {string} filename The name of the file being loaded\x0d\n * @param {string} content The content of the file being loaded\x0d\n * @param {Module} cjsModuleInstance The CommonJS loader instance\x0d\n * @param {object} codeCache The SEA code cache\x0d\n */\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance\x2C codeCache) {\x0d\n  const hostDefinedOptionId = Symbol(`cjs:${filename}`);\x0d\n  async function importModuleDynamically(specifier\x2C _\x2C importAttributes) {\x0d\n    const cascadedLoader = getCascadedLoader();\x0d\n    return cascadedLoader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                                 importAttributes);\x0d\n  }\x0d\n  if (patched) {\x0d\n    const wrapped = Module.wrap(content);\x0d\n    const script = makeContextifyScript(\x0d\n      wrapped\x2C                 // code\x0d\n      filename\x2C                // filename\x0d\n      0\x2C                       // lineOffset\x0d\n      0\x2C                       // columnOffset\x0d\n      undefined\x2C               // cachedData\x0d\n      false\x2C                   // produceCachedData\x0d\n      undefined\x2C               // parsingContext\x0d\n      hostDefinedOptionId\x2C     // hostDefinedOptionId\x0d\n      importModuleDynamically\x2C // importModuleDynamically\x0d\n    );\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (script.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C script.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return runScriptInThisContext(script\x2C true\x2C false);\x0d\n  }\x0d\n\x0d\n  const params = [ 'exports'\x2C 'require'\x2C 'module'\x2C '__filename'\x2C '__dirname' ];\x0d\n  try {\x0d\n    const result = internalCompileFunction(\x0d\n      content\x2C                           // code\x2C\x0d\n      filename\x2C                          // filename\x0d\n      0\x2C                                 // lineOffset\x0d\n      0\x2C                                 // columnOffset\x2C\x0d\n      codeCache\x2C                         // cachedData\x0d\n      false\x2C                             // produceCachedData\x0d\n      undefined\x2C                         // parsingContext\x0d\n      undefined\x2C                         // contextExtensions\x0d\n      params\x2C                            // params\x0d\n      hostDefinedOptionId\x2C               // hostDefinedOptionId\x0d\n      importModuleDynamically\x2C           // importModuleDynamically\x0d\n    );\x0d\n\x0d\n    // The code cache is used for SEAs only.\x0d\n    if (codeCache &&\x0d\n        result.cachedDataRejected !== false &&\x0d\n        internalBinding('sea').isSea()) {\x0d\n      process.emitWarning('Code cache data rejected.');\x0d\n    }\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (result.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C result.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return result.function;\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance) {\x0d\n      const { enrichCJSError } = require('internal/modules/esm/translators');\x0d\n      enrichCJSError(err\x2C content\x2C filename);\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Run the file contents in the correct scope or sandbox. Expose the correct helper variables (`require`\x2C `module`\x2C\x0d\n * `exports`) to the file. Returns exception\x2C if any.\x0d\n * @param {string} content The source code of the module\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = manifest.getDependencyMapper(moduleURL);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) { statCache = new SafeMap(); }\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) { statCache = null; }\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.js` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = packageJsonReader.readPackageScope(filename) || { __proto__: null };\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg.data?.type === 'module') {\x0d\n      // This is an error path because `require` of a `.js` file in a `"type": "module"` scope is not allowed.\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = containsModuleSyntax(content\x2C filename);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.json` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    setOwnProperty(module\x2C 'exports'\x2C JSONParse(stripBOM(content)));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.node` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a `require` function that can be used to load modules from the specified path.\x0d\n * @param {string} filename The path to the module\x0d\n */\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\n/**\x0d\n * Creates a new `require` function that can be used to load modules.\x0d\n * @param {string | URL} filename The path or URL to the module context for this `require`\x0d\n * @throws {ERR_INVALID_ARG_VALUE} If `filename` is not a string or URL\x2C or if it is a relative path that cannot be\x0d\n * resolved to an absolute path.\x0d\n */\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURL(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\n/**\x0d\n * Define the paths to use for resolving a module.\x0d\n */\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x2C\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Handle modules loaded via `--require`.\x0d\n * @param {string[]} requests The values of `--require`\x0d\n */\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests)) { return; }\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++) {\x0d\n    internalRequire(parent\x2C requests[n]);\x0d\n  }\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\n/**\x0d\n * If the user has overridden an export from a builtin module\x2C this function can ensure that the override is used in\x0d\n * both CommonJS and ES module contexts.\x0d\n */\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of BuiltinModule.map.values()) {\x0d\n    if (BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'constructor'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return policy() ? undefined : Module;\x0d\n  }\x2C\x0d\n  configurable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x5169d9532e,63,11096,11588,C0O11200C5O11214C10O11214C15O11261C20O11285C23O11285C27O11283C31O11320C36O11320C39O11352C44O11357C48O11377C54O11406C57O11413C62O11413C66O11504C75O11526C80O11562C84O11519C89O11587,,
code-creation,JS,10,210503,0x5169d986f6,19,getCanBeRequiredByUsersWithoutSchemeList node:internal/bootstrap/realm:313:50,0x2b983136c70,~
code-source-info,0x5169d986f6,9,10191,10262,C0O10201C11O10218C14O10208C18O10257,,
code-creation,JS,10,210664,0x5169d987e6,13,desc.value node:internal/per_context/primordials:387:32,0x2b983134940,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringFromCharCode'\x2C\x0d\n  'StringFromCodePoint'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x2C\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Define Symbol.dispose and Symbol.asyncDispose\x0d\n// Until these are defined by the environment.\x0d\n// TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\x0d\nprimordials.SymbolDispose ??= primordials.SymbolFor('nodejs.dispose');\x0d\nprimordials.SymbolAsyncDispose ??= primordials.SymbolFor('nodejs.asyncDispose');\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  Array: ArrayConstructor\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectSet\x2C\x0d\n  ReflectGet\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototype\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeGetDotAll\x2C\x0d\n  RegExpPrototypeGetFlags\x2C\x0d\n  RegExpPrototypeGetGlobal\x2C\x0d\n  RegExpPrototypeGetHasIndices\x2C\x0d\n  RegExpPrototypeGetIgnoreCase\x2C\x0d\n  RegExpPrototypeGetMultiline\x2C\x0d\n  RegExpPrototypeGetSource\x2C\x0d\n  RegExpPrototypeGetSticky\x2C\x0d\n  RegExpPrototypeGetUnicode\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolMatch\x2C\x0d\n  SymbolMatchAll\x2C\x0d\n  SymbolReplace\x2C\x0d\n  SymbolSearch\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolSplit\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n\x0d\n/**\x0d\n * Creates a class that can be safely iterated over.\x0d\n *\x0d\n * Because these functions are used by `makeSafe`\x2C which is exposed on the\x0d\n * `primordials` object\x2C it's important to use const references to the\x0d\n * primordials that they use.\x0d\n * @template {Iterable} T\x0d\n * @template {*} TReturn\x0d\n * @template {*} TNext\x0d\n * @param {(self: T) => IterableIterator<T>} factory\x0d\n * @param {(...args: [] | [TNext]) => IteratorResult<T\x2C TReturn>} next\x0d\n * @returns {Iterator<T\x2C TReturn\x2C TNext>}\x0d\n */\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x2C\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x2C\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\x0d\n  new primordials.SafeArrayIterator(\x0d\n    ArrayPrototypeMap(\x0d\n      promises\x2C\x0d\n      (promise\x2C i) =>\x0d\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x2C\x0d\n    )\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used for internal functions\x2C this would produce similar\x0d\n * results as `Promise.all` but without prototype pollution\x2C and the return\x0d\n * value is not a genuine Array but an array-like object.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<ArrayLike<Awaited<U>>>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    const { length } = promises;\x0d\n\x0d\n    const returnVal = ArrayConstructor(length);\x0d\n    ObjectSetPrototypeOf(returnVal\x2C null);\x0d\n    if (length === 0) resolve(returnVal);\x0d\n\x0d\n    let pendingPromises = length;\x0d\n    for (let i = 0; i < length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\x0d\n        returnVal[i] = result;\x0d\n        if (--pendingPromises === 0) resolve(returnVal);\x0d\n      }\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * resolve\x2C not what value they resolve to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    let pendingPromises = promises.length;\x0d\n    if (pendingPromises === 0) resolve();\x0d\n    for (let i = 0; i < promises.length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C () => {\x0d\n        if (--pendingPromises === 0) resolve();\x0d\n      }\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<PromiseSettledResult<any>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * settle\x2C not what value they resolve or reject to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettledReturnVoid = async (promises\x2C mapFn) => {\x0d\n  await primordials.SafePromiseAllSettled(promises\x2C mapFn);\x0d\n};\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n\x0d\nconst {\x0d\n  exec: OriginalRegExpPrototypeExec\x2C\x0d\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n} = RegExpPrototype;\x0d\n\x0d\nclass RegExpLikeForStringSplitting {\x0d\n  #regex;\x0d\n  constructor() {\x0d\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\x0d\n  }\x0d\n\x0d\n  get lastIndex() {\x0d\n    return ReflectGet(this.#regex\x2C 'lastIndex');\x0d\n  }\x0d\n  set lastIndex(value) {\x0d\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\x0d\n  }\x0d\n\x0d\n  exec() {\x0d\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\x0d\n\x0d\n/**\x0d\n * @param {RegExp} pattern\x0d\n * @returns {RegExp}\x0d\n */\x0d\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\x0d\n  ObjectDefineProperties(pattern\x2C {\x0d\n    [SymbolMatch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n    }\x2C\x0d\n    [SymbolMatchAll]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n    }\x2C\x0d\n    [SymbolReplace]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n    }\x2C\x0d\n    [SymbolSearch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n    }\x2C\x0d\n    [SymbolSplit]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n    }\x2C\x0d\n    constructor: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: {\x0d\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\x0d\n      }\x2C\x0d\n    }\x2C\x0d\n    dotAll: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\x0d\n    }\x2C\x0d\n    exec: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeExec\x2C\x0d\n    }\x2C\x0d\n    global: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\x0d\n    }\x2C\x0d\n    hasIndices: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\x0d\n    }\x2C\x0d\n    ignoreCase: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\x0d\n    }\x2C\x0d\n    multiline: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\x0d\n    }\x2C\x0d\n    source: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSource(pattern)\x2C\x0d\n    }\x2C\x0d\n    sticky: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSticky(pattern)\x2C\x0d\n    }\x2C\x0d\n    unicode: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: RegExpPrototypeGetFlags(pattern)\x2C\x0d\n  });\x0d\n  return pattern;\x0d\n};\x0d\n\x0d\n\x0d\n/**\x0d\n * @param {string} str\x0d\n * @param {RegExp} regexp\x0d\n * @returns {number}\x0d\n */\x0d\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\x0d\n  regexp.lastIndex = 0;\x0d\n  const match = RegExpPrototypeExec(regexp\x2C str);\x0d\n  return match ? match.index : -1;\x0d\n};\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x5169d987e6,6,11633,11694,C0O11651C7O11658C12O11681,,
code-creation,JS,10,213743,0x5169d9a01e,13,SafeIterator node:internal/per_context/primordials:332:16,0x2b983134090,~
code-source-info,0x5169d9a01e,6,9841,9903,C0O9861C3O9878C7O9876C12O9902,,
code-creation,JS,10,213867,0x5169d9a226,13,next node:internal/per_context/primordials:335:9,0x2b9831340e0,~
code-source-info,0x5169d9a226,6,9913,9960,C0O9925C3O9942C8O9932C12O9953,,
code-creation,JS,10,214078,0x5169d9a516,158,initializeCjsConditions node:internal/modules/helpers:65:33,0x3a6c8fb79a0,~
script-source,64,node:internal/modules/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst fs = require('fs'); // Import all of `fs` so that it can be monkey-patched.\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { setOwnProperty } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    require_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\n/** @typedef {import('internal/modules/cjs/loader.js').Module} Module */\x0d\n\x0d\n/**\x0d\n * Cache for storing resolved real paths of modules.\x0d\n * In order to minimize unnecessary lstat() calls\x2C this cache is a list of known-real paths.\x0d\n * Set to an empty Map to reset.\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst realpathCache = new SafeMap();\x0d\n/**\x0d\n * Resolves the path of a given `require` specifier\x2C following symlinks.\x0d\n * @param {string} requestPath The `require` specifier\x0d\n */\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n/** @type {Set<string>} */\x0d\nlet cjsConditions;\x0d\n/**\x0d\n * Define the conditions that apply to the CommonJS loader.\x0d\n */\x0d\nfunction initializeCjsConditions() {\x0d\n  const userConditions = getOptionValue('--conditions');\x0d\n  const noAddons = getOptionValue('--no-addons');\x0d\n  const addonConditions = noAddons ? [] : ['node-addons'];\x0d\n  // TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\n  cjsConditions = new SafeSet([\x0d\n    'require'\x2C\x0d\n    'node'\x2C\x0d\n    ...addonConditions\x2C\x0d\n    ...userConditions\x2C\x0d\n  ]);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the conditions that apply to the CommonJS loader.\x0d\n */\x0d\nfunction getCjsConditions() {\x0d\n  if (cjsConditions === undefined) {\x0d\n    initializeCjsConditions();\x0d\n  }\x0d\n  return cjsConditions;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Provide one of Node.js' public modules to user code.\x0d\n * @param {string} id - The identifier/specifier of the builtin module to load\x0d\n * @param {string} request - The module requiring or importing the builtin module\x0d\n */\x0d\nfunction loadBuiltinModule(id\x2C request) {\x0d\n  if (!BuiltinModule.canBeRequiredByUsers(id)) {\x0d\n    return;\x0d\n  }\x0d\n  /** @type {import('internal/bootstrap/realm.js').BuiltinModule} */\x0d\n  const mod = BuiltinModule.map.get(id);\x0d\n  debug('load built-in module %s'\x2C request);\x0d\n  // compileForPublicLoader() throws if canBeRequiredByUsers is false:\x0d\n  mod.compileForPublicLoader();\x0d\n  return mod;\x0d\n}\x0d\n\x0d\n/** @type {Module} */\x0d\nlet $Module = null;\x0d\n/**\x0d\n * Import the Module class on first use.\x0d\n */\x0d\nfunction lazyModule() {\x0d\n  $Module = $Module || require('internal/modules/cjs/loader').Module;\x0d\n  return $Module;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invoke with `makeRequireFunction(module)` where `module` is the `Module` object to use as the context for the\x0d\n * `require()` function.\x0d\n * Use redirects to set up a mapping from a policy and restrict dependencies.\x0d\n */\x0d\nconst urlToFileCache = new SafeMap();\x0d\n/**\x0d\n * Create the module-scoped `require` function to pass into CommonJS modules.\x0d\n * @param {Module} mod - The module to create the `require` function for.\x0d\n * @param {ReturnType<import('internal/policy/manifest.js').Manifest['getDependencyMapper']>} redirects\x0d\n * @typedef {(specifier: string) => unknown} RequireFunction\x0d\n */\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  // lazy due to cycle\x0d\n  const Module = lazyModule();\x0d\n  if (mod instanceof Module !== true) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mod'\x2C 'Module'\x2C mod);\x0d\n  }\x0d\n\x0d\n  /** @type {RequireFunction} */\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = getCjsConditions();\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const { href\x2C protocol } = destination;\x0d\n        if (protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n\x0d\n          if (BuiltinModule.canBeRequiredByUsers(specifier)) {\x0d\n            const mod = loadBuiltinModule(specifier\x2C href);\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (protocol === 'file:') {\x0d\n          let filepath = urlToFileCache.get(href);\x0d\n          if (!filepath) {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod[require_private_symbol](mod\x2C filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x2C\x0d\n        ));\x0d\n      }\x0d\n      return mod[require_private_symbol](mod\x2C specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      // When no policy manifest\x2C the original prototype.require is sustained\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * The `resolve` method that gets attached to module-scope `require`.\x0d\n   * @param {string} request\x0d\n   * @param {Parameters<Module['_resolveFilename']>[3]} options\x0d\n   */\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  /**\x0d\n   * The `paths` method that gets attached to module-scope `require`.\x0d\n   * @param {string} request\x0d\n   */\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  setOwnProperty(require\x2C 'main'\x2C process.mainModule);\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n * @param {string} content\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add built-in modules to a global or REPL scope object.\x0d\n * @param {Record<string\x2C unknown>} object - The object such as `globalThis` to add the built-in modules to.\x0d\n * @param {string} dummyModuleName - The label representing the set of built-in modules to add.\x0d\n */\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        try {\x0d\n          // Override the current getter/setter and set up a new\x0d\n          // non-enumerable property.\x0d\n          ObjectDefineProperty(object\x2C name\x2C {\x0d\n            __proto__: null\x2C\x0d\n            get: () => lib\x2C\x0d\n            set: setReal\x2C\x0d\n            configurable: true\x2C\x0d\n            enumerable: false\x2C\x0d\n          });\x0d\n        } catch {\x0d\n          // If the property is no longer configurable\x2C ignore the error.\x0d\n        }\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * If a referrer is an URL instance or absolute path\x2C convert it into an URL string.\x0d\n * @param {string | URL} referrer\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  getCjsConditions\x2C\x0d\n  initializeCjsConditions\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n  toRealPath\x2C\x0d\n};\x0d\n
code-source-info,0x5169d9a516,64,1870,2241,C0O1901C8O1901C13O1953C21O1953C26O2011C37O2124C50O2191C95O2216C142O2140C150O2138C157O2240,,
tick,0x7ff73fd2f4ad,216338,0,0x0,3,0x7ff7404a14f0,0x5169d95352,0x5169d951de,0x5169d9508b,0x3d48517c07d,0x3d48517a36e,0x3d485179d04
code-creation,JS,10,216631,0x5169d9b2ae,315,Module._initPaths node:internal/modules/cjs/loader:1530:29,0x3a6c8fb7228,~
code-source-info,0x5169d9b2ae
code-creation,JS,10,217103,0x5169d9b676,91,initializeESMLoader node:internal/process/pre_execution:690:29,0x3a6c8fb9960,~
code-source-info,0x5169d9b676,67,22052,22614,C0O22100C6O22100C11O22082C16O22142C20O22309C28O22313C34O22432C40O22432C45O22380C50O22388C55O22406C60O22479C66O22479C71O22499C73O22509C77O22524C79O22544C83O22569C85O22588C90O22613,,
code-creation,JS,10,217303,0x5169d9b7ee,50,initializeESM node:internal/modules/esm/utils:192:23,0x3a6c8fb8748,~
script-source,66,node:internal/modules/esm/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  ObjectFreeze\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    host_defined_option_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  default_host_defined_options\x2C\x0d\n  vm_dynamic_import_missing_flag\x2C\x0d\n} = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG\x2C\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  loadPreloadModules\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n} = require('internal/process/pre_execution');\x0d\nconst { getCWDURL } = require('internal/util');\x0d\nconst {\x0d\n  setImportModuleDynamicallyCallback\x2C\x0d\n  setInitializeImportMetaObjectCallback\x2C\x0d\n} = internalBinding('module_wrap');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nlet defaultConditions;\x0d\n/**\x0d\n * Returns the default conditions for ES module loading.\x0d\n */\x0d\nfunction getDefaultConditions() {\x0d\n  assert(defaultConditions !== undefined);\x0d\n  return defaultConditions;\x0d\n}\x0d\n\x0d\n/** @type {Set<string>} */\x0d\nlet defaultConditionsSet;\x0d\n/**\x0d\n * Returns the default conditions for ES module loading\x2C as a Set.\x0d\n */\x0d\nfunction getDefaultConditionsSet() {\x0d\n  assert(defaultConditionsSet !== undefined);\x0d\n  return defaultConditionsSet;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Initializes the default conditions for ESM module loading.\x0d\n * This function is called during pre-execution\x2C before any user code is run.\x0d\n */\x0d\nfunction initializeDefaultConditions() {\x0d\n  const userConditions = getOptionValue('--conditions');\x0d\n  const noAddons = getOptionValue('--no-addons');\x0d\n  const addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n  defaultConditions = ObjectFreeze([\x0d\n    'node'\x2C\x0d\n    'import'\x2C\x0d\n    ...addonConditions\x2C\x0d\n    ...userConditions\x2C\x0d\n  ]);\x0d\n  defaultConditionsSet = new SafeSet(defaultConditions);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== getDefaultConditions()) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return getDefaultConditionsSet();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback ImportModuleDynamicallyCallback\x0d\n * @param {string} specifier\x0d\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\x0d\n * @param {Record<string\x2C string>} attributes\x0d\n * @returns { Promise<void> }\x0d\n */\x0d\n\x0d\n/**\x0d\n * @callback InitializeImportMetaCallback\x0d\n * @param {object} meta\x0d\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {{\x0d\n *   callbackReferrer: ModuleWrap|ContextifyScript|Function|vm.Module\x0d\n *   initializeImportMeta? : InitializeImportMetaCallback\x2C\x0d\n *   importModuleDynamically? : ImportModuleDynamicallyCallback\x0d\n * }} ModuleRegistry\x0d\n */\x0d\n\x0d\n/**\x0d\n * @type {WeakMap<symbol\x2C ModuleRegistry>}\x0d\n */\x0d\nconst moduleRegistries = new SafeWeakMap();\x0d\n\x0d\n/**\x0d\n * V8 would make sure that as long as import() can still be initiated from\x0d\n * the referrer\x2C the symbol referenced by |host_defined_option_symbol| should\x0d\n * be alive\x2C which in term would keep the settings object alive through the\x0d\n * WeakMap\x2C and in turn that keeps the referrer object alive\x2C which would be\x0d\n * passed into the callbacks.\x0d\n * The reference goes like this:\x0d\n * [v8::internal::Script] (via host defined options) ----1--> [idSymbol]\x0d\n * [callbackReferrer] (via host_defined_option_symbol) ------2------^  |\x0d\n *                                 ^----------3---- (via WeakMap)------\x0d\n * 1+3 makes sure that as long as import() can still be initiated\x2C the\x0d\n * referrer wrap is still around and can be passed into the callbacks.\x0d\n * 2 is only there so that we can get the id symbol to configure the\x0d\n * weak map.\x0d\n * @param {ModuleWrap|ContextifyScript|Function} referrer The referrer to\x0d\n *   get the id symbol from. This is different from callbackReferrer which\x0d\n *   could be set by the caller.\x0d\n * @param {ModuleRegistry} registry\x0d\n */\x0d\nfunction registerModule(referrer\x2C registry) {\x0d\n  const idSymbol = referrer[host_defined_option_symbol];\x0d\n  if (idSymbol === default_host_defined_options ||\x0d\n      idSymbol === vm_dynamic_import_missing_flag) {\x0d\n    // The referrer is compiled without custom callbacks\x2C so there is\x0d\n    // no registry to hold on to. We'll throw\x0d\n    // ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING when a callback is\x0d\n    // needed.\x0d\n    return;\x0d\n  }\x0d\n  // To prevent it from being GC'ed.\x0d\n  registry.callbackReferrer ??= referrer;\x0d\n  moduleRegistries.set(idSymbol\x2C registry);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Defines the `import.meta` object for a given module.\x0d\n * @param {symbol} symbol - Reference to the module.\x0d\n * @param {Record<string\x2C string | Function>} meta - The import.meta object to initialize.\x0d\n */\x0d\nfunction initializeImportMetaObject(symbol\x2C meta) {\x0d\n  if (moduleRegistries.has(symbol)) {\x0d\n    const { initializeImportMeta\x2C callbackReferrer } = moduleRegistries.get(symbol);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      meta = initializeImportMeta(meta\x2C callbackReferrer);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously imports a module dynamically using a callback function. The native callback.\x0d\n * @param {symbol} symbol - Reference to the module.\x0d\n * @param {string} specifier - The module specifier string.\x0d\n * @param {Record<string\x2C string>} attributes - The import attributes object.\x0d\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} - The imported module object.\x0d\n * @throws {ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING} - If the callback function is missing.\x0d\n */\x0d\nasync function importModuleDynamicallyCallback(symbol\x2C specifier\x2C attributes) {\x0d\n  if (moduleRegistries.has(symbol)) {\x0d\n    const { importModuleDynamically\x2C callbackReferrer } = moduleRegistries.get(symbol);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(specifier\x2C callbackReferrer\x2C attributes);\x0d\n    }\x0d\n  }\x0d\n  if (symbol === vm_dynamic_import_missing_flag) {\x0d\n    throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG();\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n}\x0d\n\x0d\nlet _isLoaderWorker = false;\x0d\n/**\x0d\n * Initializes handling of ES modules.\x0d\n * This is configured during pre-execution. Specifically it's set to true for\x0d\n * the loader worker in internal/main/worker_thread.js.\x0d\n * @param {boolean} [isLoaderWorker=false] - A boolean indicating whether the loader is a worker or not.\x0d\n */\x0d\nfunction initializeESM(isLoaderWorker = false) {\x0d\n  _isLoaderWorker = isLoaderWorker;\x0d\n  initializeDefaultConditions();\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(importModuleDynamicallyCallback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determine whether the current process is a loader worker.\x0d\n * @returns {boolean} Whether the current process is a loader worker.\x0d\n */\x0d\nfunction isLoaderWorker() {\x0d\n  return _isLoaderWorker;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Register module customization hooks.\x0d\n */\x0d\nasync function initializeHooks() {\x0d\n  const customLoaderURLs = getOptionValue('--experimental-loader');\x0d\n\x0d\n  const { Hooks } = require('internal/modules/esm/hooks');\x0d\n  const esmLoader = require('internal/process/esm_loader').esmLoader;\x0d\n\x0d\n  const hooks = new Hooks();\x0d\n  esmLoader.setCustomizations(hooks);\x0d\n\x0d\n  // We need the loader customizations to be set _before_ we start invoking\x0d\n  // `--require`\x2C otherwise loops can happen because a `--require` script\x0d\n  // might call `register(...)` before we've installed ourselves. These\x0d\n  // global values are magically set in `setupUserModules` just for us and\x0d\n  // we call them in the correct order.\x0d\n  // N.B.  This block appears here specifically in order to ensure that\x0d\n  // `--require` calls occur before `--loader` ones do.\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n\x0d\n  const parentURL = getCWDURL().href;\x0d\n  for (let i = 0; i < customLoaderURLs.length; i++) {\x0d\n    await hooks.register(\x0d\n      customLoaderURLs[i]\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const preloadScripts = hooks.initializeGlobalPreload();\x0d\n\x0d\n  return { __proto__: null\x2C hooks\x2C preloadScripts };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  registerModule\x2C\x0d\n  initializeESM\x2C\x0d\n  initializeHooks\x2C\x0d\n  getDefaultConditions\x2C\x0d\n  getConditionsSet\x2C\x0d\n  loaderWorkerId: 'internal/modules/esm/worker'\x2C\x0d\n  isLoaderWorker\x2C\x0d\n};\x0d\n
code-source-info,0x5169d9b7ee,66,6581,6942,C10O6611C12O6627C18O6648C21O6648C24O6801C32O6801C36O6871C44O6871C49O6941,,
code-creation,JS,10,218320,0x5169d9c1d6,181,initializeDefaultConditions node:internal/modules/esm/utils:60:37,0x3a6c8fb85b8,~
code-source-info,0x5169d9c1d6,66,1522,1880,C0O1553C8O1553C13O1605C21O1605C26O1663C37O1701C50O1772C95O1797C140O1721C147O1719C153O1823C160O1858C165O1846C173O1844C180O1879,,
code-creation,JS,10,218647,0x5169d9c3ce,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:72:32,0x3a6c8fb49b8,~
code-source-info,0x5169d9c3ce,63,2288,2328,C0O2293C4O2326,,
code-creation,JS,10,219080,0x5169d9c4d6,53,loadPreloadModules node:internal/process/pre_execution:722:28,0x3a6c8fb9a50,~
code-source-info,0x5169d9c4d6,67,23119,23451,C0O23208C8O23208C13O23240C15O23277C21O23284C26O23366C32O23366C37O23319C42O23330C47O23411C52O23450,,
code-creation,JS,10,219300,0x5169d9c6c6,50,initializeFrozenIntrinsics node:internal/process/pre_execution:714:36,0x3a6c8fb9a00,~
code-source-info,0x5169d9c6c6,67,22860,23088,C0O22868C8O22872C14O22918C17O22926C28O22926C34O23040C40O23040C45O23077C49O23087,,
code-creation,JS,10,219479,0x5169d9c7e6,22,markBootstrapComplete node:internal/process/pre_execution:735:31,0x3a6c8fb9aa0,~
code-source-info,0x5169d9c7e6,67,23485,23551,C0O23493C6O23493C11O23523C16O23524C21O23550,,
code-creation,JS,10,219996,0x5169d9c946,94,executeUserEntryPoint node:internal/modules/run_main:127:31,0x3a6c8fbb1a8,~
script-source,70,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\n\x0d\n/**\x0d\n * Get the absolute path to the main entry point.\x0d\n * @param {string} main - Entry point path\x0d\n */\x0d\nfunction resolveMainPath(main) {\x0d\n  const defaultType = getOptionValue('--experimental-default-type');\x0d\n  /** @type {string} */\x0d\n  let mainPath;\x0d\n  if (defaultType === 'module') {\x0d\n    if (getOptionValue('--preserve-symlinks-main')) { return; }\x0d\n    mainPath = path.resolve(main);\x0d\n  } else {\x0d\n    // Extension searching for the main entry point is supported only in legacy mode.\x0d\n    // Module._findPath is monkey-patchable here.\x0d\n    const { Module } = require('internal/modules/cjs/loader');\x0d\n    mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  }\x0d\n  if (!mainPath) { return; }\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain) {\x0d\n    const { toRealPath } = require('internal/modules/helpers');\x0d\n    try {\x0d\n      mainPath = toRealPath(mainPath);\x0d\n    } catch (err) {\x0d\n      if (defaultType === 'module' && err?.code === 'ENOENT') {\x0d\n        const { decorateErrorWithCommonJSHints } = require('internal/modules/esm/resolve');\x0d\n        const { getCWDURL } = require('internal/util');\x0d\n        decorateErrorWithCommonJSHints(err\x2C mainPath\x2C getCWDURL());\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determine whether the main entry point should be loaded through the ESM Loader.\x0d\n * @param {string} mainPath - Absolute path to the main entry point\x0d\n */\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  if (getOptionValue('--experimental-default-type') === 'module') { return true; }\x0d\n\x0d\n  /**\x0d\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\x0d\n   * (or an empty list when none have been registered).\x0d\n   */\x0d\n  const userLoaders = getOptionValue('--experimental-loader');\x0d\n  /**\x0d\n   * @type {string[]} userImports A list of preloaded modules registered by the user\x0d\n   * (or an empty list when none have been registered).\x0d\n   */\x0d\n  const userImports = getOptionValue('--import');\x0d\n  if (userLoaders.length > 0 || userImports.length > 0) { return true; }\x0d\n\x0d\n  // Determine the module format of the entry point.\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs')) { return true; }\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs')) { return false; }\x0d\n\x0d\n  const { readPackageScope } = require('internal/modules/package_json_reader');\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  // No need to guard `pkg` as it can only be an object or `false`.\x0d\n  switch (pkg.data?.type) {\x0d\n    case 'module':\x0d\n      return true;\x0d\n    case 'commonjs':\x0d\n      return false;\x0d\n    default: { // No package.json or no `type` field.\x0d\n      if (getOptionValue('--experimental-detect-module')) {\x0d\n        // If the first argument of `containsModuleSyntax` is undefined\x2C it will read `mainPath` from the file system.\x0d\n        return containsModuleSyntax(undefined\x2C mainPath);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Run the main entry point through the ESM Loader.\x0d\n * @param {string} mainPath - Absolute path for the main entry point\x0d\n */\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n  const main = pathToFileURL(mainPath).href;\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    return esmLoader.import(main\x2C undefined\x2C { __proto__: null });\x0d\n  }));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Handle process exit events around the main entry point promise.\x0d\n * @param {Promise} promise - Main entry point promise\x0d\n */\x0d\nasync function handleMainPromise(promise) {\x0d\n  const {\x0d\n    handleProcessExit\x2C\x0d\n  } = require('internal/modules/esm/handle_process_exit');\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Parse the CLI main entry point string and run it.\x0d\n * For backwards compatibility\x2C we have to run a bunch of monkey-patchable code that belongs to the CJS loader (exposed\x0d\n * by `require('module')`) even when the entry point is ESM.\x0d\n * This monkey-patchable code is bypassed under `--experimental-default-type=module`.\x0d\n * Because of backwards compatibility\x2C this function is exposed publicly via `import { runMain } from 'node:module'`.\x0d\n * @param {string} main - First positional CLI argument\x2C such as `'entry.js'` from `node entry.js`\x0d\n */\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    const { Module } = require('internal/modules/cjs/loader');\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x5169d9c946,70,4646,5024,C7O4662C14O4666C22O4697C25O4697C30O4744C33O4744C38O4781C40O4806C45O4817C50O4806C56O4940C62O4940C67O4929C72O4992C87O4992C93O5023,,
code-creation,JS,10,220904,0x5169d9d116,248,resolveMainPath node:internal/modules/run_main:15:25,0x3a6c8fbaf80,~
code-source-info,0x5169d9d116,70,358,1524,C0O390C8O390C13O469C15O482C17O498C22O519C30O523C36O569C37O576C38O584C43O600C48O600C56O789C62O789C67O778C72O852C79O862C82O867C87O867C100O852C106O903C110O920C111O927C112O964C120O964C125O1011C127O1068C133O1068C138O1053C146O1134C154O1132C164O1184C166O1200C176O1219C186O1226C191O1294C199O1294C204O1259C209O1366C217O1366C222O1352C227O1401C230O1447C237O1401C242O1477C244O1477C245O1505C247O1521,,
code-creation,JS,10,221464,0x5169d9d6de,889,Module._findPath node:internal/modules/cjs/loader:610:28,0x3a6c8fb6898,~
code-source-info,0x5169d9d6de
code-creation,JS,10,222080,0x5169d9dd2e,109,isAbsolute node:path:406:13,0x3a6c8f9add8,~
code-source-info,0x5169d9dd2e,34,13207,13626,C0O13221C8O13221C13O13273C18O13286C19O13294C24O13308C25O13321C26O13342C33O13342C39O13383C42O13390C50O13458C58O13472C66O13508C72O13508C80O13547C82O13543C92O13584C98O13584C104O13568C108O13621,,
code-creation,JS,10,222462,0x5169d9df3e,85,stat node:internal/modules/cjs/loader:185:14,0x3a6c8fb5fd8,~
code-source-info,0x5169d9df3e,63,5451,5864,C0O5467C5O5483C10O5483C17O5514C23O5560C28O5570C33O5570C39O5590C41O5618C43O5632C44O5658C49O5658C54O5691C61O5724C66O5806C71O5816C76O5816C82O5847C84O5861,,
code-creation,JS,10,222718,0x5169d9e16e,232,toNamespacedPath node:path:622:19,0x3a6c8f9aec8,~
code-source-info,0x5169d9e16e,34,20189,21304,C0O20255C6O20292C12O20299C17O20313C19O20325C20O20354C25O20360C30O20360C36O20399C43O20406C48O20419C50O20431C51O20439C58O20443C66O20490C68O20486C73O20548C81O20552C89O20599C91O20595C96O20644C104O20644C110O20697C112O20710C114O20706C121O20741C123O20737C128O20841C133O20863C139O20863C148O20903C151O20936C156O20968C161O20968C167O20948C175O21022C181O21022C189O21069C191O21065C198O21090C204O21090C212O21137C214O21133C219O21240C224O21257C228O21272C229O21287C231O21299,,
code-creation,JS,10,223374,0x5169d9e3ee,42,toRealPath node:internal/modules/helpers:54:20,0x3a6c8fb7950,~
code-source-info,0x5169d9e3ee,64,1598,1715,C0O1617C5O1627C10O1640C17O1661C20O1672C28O1691C35O1627C41O1712,,
code-creation,JS,10,224643,0x5169d9e85e,1026,realpathSync node:fs:2611:22,0x3a6c8fad488,~
script-source,55,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  Boolean\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x2C\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\n\x0d\nconst { createBlobFromFilePath } = require('internal/blob');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  FSReqCallback\x2C\x0d\n  statValues\x2C\x0d\n} = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify: {\x0d\n    custom: kCustomPromisifiedSymbol\x2C\x0d\n  }\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n  defineLazyProperties\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  possiblyTransformPath\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\nlet kResistStopPropagation;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isInt32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function exists(path) { // eslint-disable-line func-name-matching\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return binding.existsSync(pathModule.toNamespacedPath(path));\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\x0d\n  // wise\x2C similar to the promise based version (less peak memory and chunked\x0d\n  // stringify operations vs multiple C++/JS boundary crossings).\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      // TODO(BridgeAR): If an encoding is set\x2C use the StringDecoder to concat\x0d\n      // the result and reuse the buffer instead of allocating a new one.\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const ReadFileContext = require('internal/fs/read/context');\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n\x0d\n  if (options.encoding === 'utf8' || options.encoding === 'utf-8') {\x0d\n    if (!isInt32(path)) {\x0d\n      path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n    }\x0d\n    return binding.readFileUtf8(path\x2C stringToFlags(options.flag));\x0d\n  }\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  return binding.close(fd);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  return binding.open(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    stringToFlags(flags)\x2C\x0d\n    parseFileMode(mode\x2C 'mode'\x2C 0o666)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | Buffer | URL } path\x0d\n * @param {{\x0d\n *   type?: string;\x0d\n *   }} [options]\x0d\n * @returns {Promise<Blob>}\x0d\n */\x0d\nfunction openAsBlob(path\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n  const type = options.type || '';\x0d\n  validateString(type\x2C 'options.type');\x0d\n  // The underlying implementation here returns the Blob synchronously for now.\x0d\n  // To give ourselves flexibility to maybe return the Blob asynchronously\x2C\x0d\n  // this API returns a Promise.\x0d\n  path = getValidatedPath(path);\x0d\n  return PromiseResolve(createBlobFromFilePath(pathModule.toNamespacedPath(path)\x2C { type }));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offsetOrOptions\x0d\n * @param {number} length\x0d\n * @param {number | bigint | null} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  let params = null;\x0d\n  if (arguments.length <= 4) {\x0d\n    if (arguments.length === 4) {\x0d\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n      callback = length;\x0d\n      params = offsetOrOptions;\x0d\n    } else if (arguments.length === 3) {\x0d\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\x0d\n      if (!isArrayBufferView(buffer)) {\x0d\n        // This is fs.read(fd\x2C params\x2C callback)\x0d\n        params = buffer;\x0d\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\x0d\n      }\x0d\n      callback = offsetOrOptions;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      callback = buffer;\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n\x0d\n    if (params !== undefined) {\x0d\n      validateObject(params\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n    }\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer?.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = params ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (arguments.length <= 3 || typeof offsetOrOptions === 'object') {\x0d\n    if (offsetOrOptions !== undefined) {\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offsetOrOptions ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  return binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {number | object} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = buffer;\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  binding.rename(\x0d\n    pathModule.toNamespacedPath(oldPath)\x2C\x0d\n    pathModule.toNamespacedPath(newPath)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  binding.ftruncate(fd\x2C len);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  return binding.fdatasync(fd);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  return binding.fsync(fd);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const result = binding.mkdir(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    parseFileMode(mode\x2C 'mode')\x2C\x0d\n    recursive\x2C\x0d\n  );\x0d\n\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * An iterative algorithm for reading the entire contents of the `basePath` directory.\x0d\n * This function does not validate `basePath` as a directory. It is passed directly to\x0d\n * `binding.readdir`.\x0d\n * @param {string} basePath\x0d\n * @param {{ encoding: string\x2C withFileTypes: boolean }} options\x0d\n * @returns {string[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSyncRecursive(basePath\x2C options) {\x0d\n  const withFileTypes = Boolean(options.withFileTypes);\x0d\n  const encoding = options.encoding;\x0d\n\x0d\n  const readdirResults = [];\x0d\n  const pathsQueue = [basePath];\x0d\n\x0d\n  function read(path) {\x0d\n    const readdirResult = binding.readdir(\x0d\n      pathModule.toNamespacedPath(path)\x2C\x0d\n      encoding\x2C\x0d\n      withFileTypes\x2C\x0d\n    );\x0d\n\x0d\n    if (readdirResult === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (withFileTypes) {\x0d\n      // Calling `readdir` with `withFileTypes=true`\x2C the result is an array of arrays.\x0d\n      // The first array is the names\x2C and the second array is the types.\x0d\n      // They are guaranteed to be the same length; hence\x2C setting `length` to the length\x0d\n      // of the first array within the result.\x0d\n      const length = readdirResult[0].length;\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        const dirent = getDirent(path\x2C readdirResult[0][i]\x2C readdirResult[1][i]);\x0d\n        ArrayPrototypePush(readdirResults\x2C dirent);\x0d\n        if (dirent.isDirectory()) {\x0d\n          ArrayPrototypePush(pathsQueue\x2C pathModule.join(dirent.path\x2C dirent.name));\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      for (let i = 0; i < readdirResult.length; i++) {\x0d\n        const resultPath = pathModule.join(path\x2C readdirResult[i]);\x0d\n        const relativeResultPath = pathModule.relative(basePath\x2C resultPath);\x0d\n        const stat = binding.internalModuleStat(resultPath);\x0d\n        ArrayPrototypePush(readdirResults\x2C relativeResultPath);\x0d\n        // 1 indicates directory\x0d\n        if (stat === 1) {\x0d\n          ArrayPrototypePush(pathsQueue\x2C resultPath);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  for (let i = 0; i < pathsQueue.length; i++) {\x0d\n    read(pathsQueue[i]);\x0d\n  }\x0d\n\x0d\n  return readdirResults;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  if (options.recursive != null) {\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  }\x0d\n\x0d\n  if (options.recursive) {\x0d\n    callback(null\x2C readdirSyncRecursive(path\x2C options));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  if (options.recursive != null) {\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  }\x0d\n\x0d\n  if (options.recursive) {\x0d\n    return readdirSyncRecursive(path\x2C options);\x0d\n  }\x0d\n\x0d\n  const result = binding.readdir(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n    !!options.withFileTypes\x2C\x0d\n  );\x0d\n\x0d\n  return result !== undefined && options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction statfs(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = maybeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n\x0d\n    callback(err\x2C getStatFsFromBinding(stats));\x0d\n  };\x0d\n  binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const stats = binding.stat(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.bigint\x2C\x0d\n    undefined\x2C\x0d\n    options.throwIfNoEntry\x2C\x0d\n  );\x0d\n  if (stats === undefined) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\nfunction statfsSync(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const stats = binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint);\x0d\n  return getStatFsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  binding.symlink(\x0d\n    preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    stringToSymlinkType(type)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  binding.link(\x0d\n    pathModule.toNamespacedPath(existingPath)\x2C\x0d\n    pathModule.toNamespacedPath(newPath)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  return binding.unlink(path);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  binding.fchmod(\x0d\n    getValidatedFd(fd)\x2C\x0d\n    parseFileMode(mode\x2C 'mode')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  binding.chmod(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    mode\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  binding.lchown(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    uid\x2C\x0d\n    gid\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  binding.chown(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    uid\x2C\x0d\n    gid\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  binding.utimes(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    toUnixTimestamp(atime)\x2C\x0d\n    toUnixTimestamp(mtime)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  binding.futimes(\x0d\n    getValidatedFd(fd)\x2C\x0d\n    toUnixTimestamp(atime\x2C 'atime')\x2C\x0d\n    toUnixTimestamp(mtime\x2C 'mtime')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  binding.lutimes(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    toUnixTimestamp(atime)\x2C\x0d\n    toUnixTimestamp(mtime)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (!flush) {\x0d\n        if (isUserFd) {\x0d\n          callback(null);\x0d\n        } else {\x0d\n          fs.close(fd\x2C callback);\x0d\n        }\x0d\n      } else {\x0d\n        fs.fsync(fd\x2C (syncErr) => {\x0d\n          if (syncErr) {\x0d\n            if (isUserFd) {\x0d\n              callback(syncErr);\x0d\n            } else {\x0d\n              fs.close(fd\x2C (err) => {\x0d\n                callback(aggregateTwoErrors(err\x2C syncErr));\x0d\n              });\x0d\n            }\x0d\n          } else if (isUserFd) {\x0d\n            callback(null);\x0d\n          } else {\x0d\n            fs.close(fd\x2C callback);\x0d\n          }\x0d\n        });\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   flush?: boolean;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n    mode: 0o666\x2C\x0d\n    flag: 'w'\x2C\x0d\n    flush: false\x2C\x0d\n  });\x0d\n  const flag = options.flag || 'w';\x0d\n  const flush = options.flush ?? false;\x0d\n\x0d\n  validateBoolean(flush\x2C 'options.flush');\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   flush?: boolean;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n    mode: 0o666\x2C\x0d\n    flag: 'w'\x2C\x0d\n    flush: false\x2C\x0d\n  });\x0d\n\x0d\n  const flush = options.flush ?? false;\x0d\n\x0d\n  validateBoolean(flush\x2C 'options.flush');\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n\x0d\n    if (flush) {\x0d\n      fs.fsyncSync(fd);\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options);\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n\x0d\n  let watcher;\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  const path = possiblyTransformPath(filename);\x0d\n  // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\x0d\n  // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\x0d\n  // e.g. Linux due to the limitations of inotify.\x0d\n  if (options.recursive && !isOSX && !isWindows) {\x0d\n    const nonNativeWatcher = require('internal/fs/recursive_watch');\x0d\n    watcher = new nonNativeWatcher.FSWatcher(options);\x0d\n    watcher[watchers.kFSWatchStart](path);\x0d\n  } else {\x0d\n    watcher = new watchers.FSWatcher();\x0d\n    watcher[watchers.kFSWatchStart](path\x2C\x0d\n                                    options.persistent\x2C\x0d\n                                    options.recursive\x2C\x0d\n                                    options.encoding);\x0d\n  }\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n      options.signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C [kResistStopPropagation]: true });\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard.add(base);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base) || cache?.get(base) === base) {\x0d\n      if (isFileType(statValues\x2C S_IFIFO) ||\x0d\n          isFileType(statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard.add(base);\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks.has(id)) {\x0d\n          linkTarget = seenLinks.get(id);\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C true);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard.add(base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n  );\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard.has(base)) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard.add(base);\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base)) {\x0d\n      if (isFileType(statValues\x2C S_IFIFO) ||\x0d\n          isFileType(statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard.add(base);\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks.has(id)) {\x0d\n        return gotTarget(null\x2C seenLinks.get(id));\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks.set(id\x2C target);\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard.add(base);\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string | Buffer | URL} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n\x0d\n  prefix = getValidatedPath(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n\x0d\n  let path;\x0d\n  if (typeof prefix === 'string') {\x0d\n    path = `${prefix}XXXXXX`;\x0d\n  } else {\x0d\n    path = Buffer.concat([prefix\x2C Buffer.from('XXXXXX')]);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(path\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string | Buffer | URL} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  prefix = getValidatedPath(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n\x0d\n  let path;\x0d\n  if (typeof prefix === 'string') {\x0d\n    path = `${prefix}XXXXXX`;\x0d\n  } else {\x0d\n    path = Buffer.concat([prefix\x2C Buffer.from('XXXXXX')]);\x0d\n  }\x0d\n\x0d\n  return binding.mkdtemp(path\x2C options.encoding);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  binding.copyFile(\x0d\n    pathModule.toNamespacedPath(src)\x2C\x0d\n    pathModule.toNamespacedPath(dest)\x2C\x0d\n    getValidMode(mode\x2C 'copyFile')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 KiB.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: object | null;\x0d\n *   flush?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  openAsBlob\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statfs\x2C\x0d\n  statSync\x2C\x0d\n  statfsSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x2C\x0d\n};\x0d\n\x0d\ndefineLazyProperties(\x0d\n  fs\x2C\x0d\n  'internal/fs/dir'\x2C\x0d\n  ['Dir'\x2C 'opendir'\x2C 'opendirSync']\x2C\x0d\n);\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x5169d9e85e
tick,0x7ff73fda409a,232744,0,0x0,3,0x7ff7404a14f0,0x5169d9e411,0x5169d9d9ad,0x5169d9d17a,0x5169d9c95f,0x3d485179d4f
code-creation,JS,10,232980,0x5169da55a6,135,getOptions node:internal/fs/utils:323:20,0x3a6c8fb2c28,~
script-source,60,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeAt\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst permission = require('internal/process/permission');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isDate\x2C\x0d\n  isUint8Array\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x2C\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x2C\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x2C\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GiB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type\x2C path) {\x0d\n    this.name = name;\x0d\n    this.path = path;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats\x2C path) {\x0d\n    super(name\x2C null\x2C path);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats\x2C path);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]\x2C path);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats\x2C filepath));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type\x2C path));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const filepath = join(path\x2C name);\x0d\n    const stats = lazyLoadFs().lstatSync(filepath);\x0d\n    return new DirentFromStats(name\x2C stats\x2C path);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type\x2C path);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\x0d\n  if (options == null || typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string\x2C Uint8Array\x2C or URL without null bytes'\x2C\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() on the absolute value\x0d\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\n// Refs: https://github.com/nodejs/node/pull/43714\x0d\nfunction dateFromMs(ms) {\x0d\n  // Coercing to number\x2C ms can be bigint\x0d\n  return new Date(MathRound(Number(ms)));\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigInt64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigInt64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x2C\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nclass StatFs {\x0d\n  constructor(type\x2C bsize\x2C blocks\x2C bfree\x2C bavail\x2C files\x2C ffree) {\x0d\n    this.type = type;\x0d\n    this.bsize = bsize;\x0d\n    this.blocks = blocks;\x0d\n    this.bfree = bfree;\x0d\n    this.bavail = bavail;\x0d\n    this.files = files;\x0d\n    this.ffree = ffree;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getStatFsFromBinding(stats) {\x0d\n  return new StatFs(\x0d\n    stats[0]\x2C stats[1]\x2C stats[2]\x2C stats[3]\x2C stats[4]\x2C stats[5]\x2C stats[6]\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\n// TODO(rafaelgss): implement the path.resolve on C++ side\x0d\n// See: https://github.com/nodejs/node/pull/44004#discussion_r930958420\x0d\n// The permission model needs the absolute path for the fs_permission\x0d\nconst resolvePath = pathModule.resolve;\x0d\nconst { isBuffer: BufferIsBuffer\x2C from: BufferFrom } = Buffer;\x0d\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\x0d\nfunction possiblyTransformPath(path) {\x0d\n  if (permission.isEnabled()) {\x0d\n    if (typeof path === 'string') {\x0d\n      return resolvePath(path);\x0d\n    }\x0d\n    assert(isUint8Array(path));\x0d\n    if (!BufferIsBuffer(path)) path = BufferFrom(path);\x0d\n    return BufferFrom(resolvePath(BufferToString(path)));\x0d\n  }\x0d\n  return path;\x0d\n}\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return possiblyTransformPath(path);\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn &&\x0d\n    ((typeof template === 'string' && StringPrototypeEndsWith(template\x2C 'X')) ||\x0d\n    (typeof template !== 'string' && TypedArrayPrototypeAt(template\x2C -1) === 0x58))) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  options.mode = getValidMode(options.mode\x2C 'copyFile');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x2C\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .lstatSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x2C\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  validateInteger(mode\x2C 'mode'\x2C min\x2C max);\x0d\n  return mode;\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      name\x2C\x0d\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      buffer\x2C\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C name);\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C ['integer'\x2C 'bigint']\x2C position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  possiblyTransformPath\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n};\x0d\n
code-source-info,0x5169da55a6,60,7779,8407,C9O7806C16O7825C27O7886C29O7908C30O7919C36O7959C41O8004C43O8028C47O8044C54O8080C60O8120C78O8126C83O8120C84O8216C91O8225C96O8244C99O8267C104O8244C108O8295C114O8324C119O8352C127O8324C132O8389C134O8404,,
code-creation,JS,10,235625,0x5169da7636,48,assertEncoding node:internal/fs/utils:158:24,0x3a6c8fb2700,~
code-source-info,0x5169da7636,60,3812,3994,C0O3828C6O3845C9O3852C14O3852C21O3896C24O3924C40O3930C45O3924C47O3993,,
code-creation,JS,10,235887,0x5169da774e,20,toPathIfFileURL node:internal/url:1479:25,0x3a6c8fa03f0,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Boolean\x2C\x0d\n  Int8Array\x2C\x0d\n  IteratorPrototype\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x2C\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x2C\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst bindingUrl = internalBinding('url');\x0d\n\x0d\nconst FORWARD_SLASH = /\\//g;\x0d\n\x0d\nconst contextForInspect = Symbol('context');\x0d\n\x0d\n// `unsafeProtocol`\x2C `hostlessProtocol` and `slashedProtocol` is\x0d\n// deliberately moved to `internal/url` rather than `url`.\x0d\n// Workers does not bootstrap URL module. Therefore\x2C `SafeSet`\x0d\n// is not initialized on bootstrap. This case breaks the\x0d\n// test-require-delete-array-iterator test.\x0d\n\x0d\n// Protocols that can allow "unsafe" and "unwise" chars.\x0d\nconst unsafeProtocol = new SafeSet([\x0d\n  'javascript'\x2C\x0d\n  'javascript:'\x2C\x0d\n]);\x0d\n// Protocols that never have a hostname.\x0d\nconst hostlessProtocol = new SafeSet([\x0d\n  'javascript'\x2C\x0d\n  'javascript:'\x2C\x0d\n]);\x0d\n// Protocols that always contain a // bit.\x0d\nconst slashedProtocol = new SafeSet([\x0d\n  'http'\x2C\x0d\n  'http:'\x2C\x0d\n  'https'\x2C\x0d\n  'https:'\x2C\x0d\n  'ftp'\x2C\x0d\n  'ftp:'\x2C\x0d\n  'gopher'\x2C\x0d\n  'gopher:'\x2C\x0d\n  'file'\x2C\x0d\n  'file:'\x2C\x0d\n  'ws'\x2C\x0d\n  'ws:'\x2C\x0d\n  'wss'\x2C\x0d\n  'wss:'\x2C\x0d\n]);\x0d\n\x0d\nconst updateActions = {\x0d\n  kProtocol: 0\x2C\x0d\n  kHost: 1\x2C\x0d\n  kHostname: 2\x2C\x0d\n  kPort: 3\x2C\x0d\n  kUsername: 4\x2C\x0d\n  kPassword: 5\x2C\x0d\n  kPathname: 6\x2C\x0d\n  kSearch: 7\x2C\x0d\n  kHash: 8\x2C\x0d\n  kHref: 9\x2C\x0d\n};\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  // This is the maximum value uint32_t can get.\x0d\n  // Ada uses uint32_t(-1) for declaring omitted values.\x0d\n  static #omitted = 4294967295;\x0d\n\x0d\n  href = '';\x0d\n  protocol_end = 0;\x0d\n  username_end = 0;\x0d\n  host_start = 0;\x0d\n  host_end = 0;\x0d\n  pathname_start = 0;\x0d\n  search_start = 0;\x0d\n  hash_start = 0;\x0d\n  port = 0;\x0d\n  /**\x0d\n   * Refers to `ada::scheme::type`\x0d\n   *\x0d\n   * enum type : uint8_t {\x0d\n   *   HTTP = 0\x2C\x0d\n   *   NOT_SPECIAL = 1\x2C\x0d\n   *   HTTPS = 2\x2C\x0d\n   *   WS = 3\x2C\x0d\n   *   FTP = 4\x2C\x0d\n   *   WSS = 5\x2C\x0d\n   *   FILE = 6\x0d\n   * };\x0d\n   * @type {number}\x0d\n   */\x0d\n  scheme_type = 1;\x0d\n\x0d\n  get hasPort() {\x0d\n    return this.port !== URLContext.#omitted;\x0d\n  }\x0d\n\x0d\n  get hasSearch() {\x0d\n    return this.search_start !== URLContext.#omitted;\x0d\n  }\x0d\n\x0d\n  get hasHash() {\x0d\n    return this.hash_start !== URLContext.#omitted;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet setURLSearchParamsContext;\x0d\nlet getURLSearchParamsList;\x0d\nlet setURLSearchParams;\x0d\n\x0d\nclass URLSearchParamsIterator {\x0d\n  #target;\x0d\n  #kind;\x0d\n  #index;\x0d\n\x0d\n  // https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\n  constructor(target\x2C kind) {\x0d\n    this.#target = target;\x0d\n    this.#kind = kind;\x0d\n    this.#index = 0;\x0d\n  }\x0d\n\x0d\n  next() {\x0d\n    if (typeof this !== 'object' || this === null || !(#target in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    const index = this.#index;\x0d\n    const values = getURLSearchParamsList(this.#target);\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this.#index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (this.#kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (this.#kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!this || typeof this !== 'object' || !(#target in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const index = this.#index;\x0d\n    const values = getURLSearchParamsList(this.#target);\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(values\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (this.#kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (this.#kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (this.#kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [values[index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x2C\x0d\n    );\x0d\n    const breakLn = StringPrototypeIncludes(inspect(output\x2C innerOpts)\x2C '\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\ndelete URLSearchParamsIterator.prototype.constructor;\x0d\nObjectSetPrototypeOf(URLSearchParamsIterator.prototype\x2C IteratorPrototype);\x0d\n\x0d\nObjectDefineProperties(URLSearchParamsIterator.prototype\x2C {\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams Iterator' }\x2C\x0d\n  next: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n\x0d\nclass URLSearchParams {\x0d\n  #searchParams = [];\x0d\n\x0d\n  // "associated url object"\x0d\n  #context;\x0d\n\x0d\n  static {\x0d\n    setURLSearchParamsContext = (obj\x2C ctx) => {\x0d\n      obj.#context = ctx;\x0d\n    };\x0d\n    getURLSearchParamsList = (obj) => obj.#searchParams;\x0d\n    setURLSearchParams = (obj\x2C query) => {\x0d\n      if (query === undefined) {\x0d\n        obj.#searchParams = [];\x0d\n      } else {\x0d\n        obj.#searchParams = parseParams(query);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init == null) {\x0d\n      // Do nothing\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator] && #searchParams in init) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init.#searchParams;\x0d\n        this.#searchParams = childParams.slice();\x0d\n      } else if (method != null) {\x0d\n        // Sequence<sequence<USVString>>\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // The following implementationd differs from the URL specification:\x0d\n        // Sequences must first be converted from ECMAScript objects before\x0d\n        // and operations are done on them\x2C and the operation of converting\x0d\n        // the sequences would first exhaust the iterators. If the iterator\x0d\n        // returns something invalid in the middle\x2C whether it would be called\x0d\n        // after that would be an observable change to the users.\x0d\n        // Exhausting the iterator and later converting them to USVString comes\x0d\n        // with a significant cost (~40-80%). In order optimize URLSearchParams\x0d\n        // creation duration\x2C Node.js merges the iteration and converting\x0d\n        // iterations into a single iteration.\x0d\n        for (const pair of init) {\x0d\n          if (pair == null) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          } else if (ArrayIsArray(pair)) {\x0d\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\x0d\n            if (pair.length !== 2) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n            // Append (innerSequence[0]\x2C innerSequence[1]) to querys list.\x0d\n            ArrayPrototypePush(this.#searchParams\x2C toUSVString(pair[0])\x2C toUSVString(pair[1]));\x0d\n          } else {\x0d\n            if (((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n                typeof pair[SymbolIterator] !== 'function')) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n\x0d\n            let length = 0;\x0d\n\x0d\n            for (const element of pair) {\x0d\n              length++;\x0d\n              ArrayPrototypePush(this.#searchParams\x2C toUSVString(element));\x0d\n            }\x0d\n\x0d\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\x0d\n            if (length !== 2) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        const visited = new SafeMap();\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n\x0d\n            // Two different keys may become the same USVString after normalization.\x0d\n            // In that case\x2C we retain the later one. Refer to WPT.\x0d\n            const keyIdx = visited.get(typedKey);\x0d\n            if (keyIdx !== undefined) {\x0d\n              this.#searchParams[keyIdx] = typedValue;\x0d\n            } else {\x0d\n              visited.set(typedKey\x2C ArrayPrototypePush(this.#searchParams\x2C\x0d\n                                                       typedKey\x2C\x0d\n                                                       typedValue) - 1);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // https://url.spec.whatwg.org/#dom-urlsearchparams-urlsearchparams\x0d\n      init = toUSVString(init);\x0d\n      this.#searchParams = init ? parseParams(init) : [];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x2C\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  get size() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n    return this.#searchParams.length / 2;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this.#searchParams\x2C name\x2C value);\x0d\n    if (this.#context) {\x0d\n      this.#context.search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  delete(name\x2C value = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = toUSVString(name);\x0d\n\x0d\n    if (value !== undefined) {\x0d\n      value = toUSVString(value);\x0d\n      for (let i = 0; i < list.length;) {\x0d\n        if (list[i] === name && list[i + 1] === value) {\x0d\n          list.splice(i\x2C 2);\x0d\n        } else {\x0d\n          i += 2;\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      for (let i = 0; i < list.length;) {\x0d\n        if (list[i] === name) {\x0d\n          list.splice(i\x2C 2);\x0d\n        } else {\x0d\n          i += 2;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (this.#context) {\x0d\n      this.#context.search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name\x2C value = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = toUSVString(name);\x0d\n\x0d\n    if (value !== undefined) {\x0d\n      value = toUSVString(value);\x0d\n    }\x0d\n\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        if (value === undefined || list[i + 1] === value) {\x0d\n          return true;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    if (this.#context) {\x0d\n      this.#context.search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    const a = this.#searchParams;\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this.#context) {\x0d\n      this.#context.search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n    let list = this.#searchParams;\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this.#searchParams;\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this.#searchParams);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  size: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Checks if a value has the shape of a WHATWG URL object.\x0d\n *\x0d\n * Using a symbol or instanceof would not be able to recognize URL objects\x0d\n * coming from other implementations (e.g. in Electron)\x2C so instead we are\x0d\n * checking some well known properties for a lack of a better test.\x0d\n *\x0d\n * We use `href` and `protocol` as they are the only properties that are\x0d\n * easy to retrieve and calculate due to the lazy nature of the getters.\x0d\n *\x0d\n * We check for `auth` and `path` attribute to distinguish legacy url instance with\x0d\n * WHATWG URL instance.\x0d\n * @param {*} self\x0d\n * @returns {self is URL}\x0d\n */\x0d\nfunction isURL(self) {\x0d\n  return Boolean(self?.href && self.protocol && self.auth === undefined && self.path === undefined);\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  #context = new URLContext();\x0d\n  #searchParams;\x0d\n\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('url');\x0d\n    }\x0d\n\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n\x0d\n    if (base !== undefined) {\x0d\n      base = `${base}`;\x0d\n    }\x0d\n\x0d\n    this.#updateContext(bindingUrl.parse(input\x2C base));\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = { __proto__: { constructor } };\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj[contextForInspect] = this.#context;\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  #updateContext(href) {\x0d\n    this.#context.href = href;\x0d\n\x0d\n    const {\x0d\n      0: protocol_end\x2C\x0d\n      1: username_end\x2C\x0d\n      2: host_start\x2C\x0d\n      3: host_end\x2C\x0d\n      4: port\x2C\x0d\n      5: pathname_start\x2C\x0d\n      6: search_start\x2C\x0d\n      7: hash_start\x2C\x0d\n      8: scheme_type\x2C\x0d\n    } = bindingUrl.urlComponents;\x0d\n\x0d\n    this.#context.protocol_end = protocol_end;\x0d\n    this.#context.username_end = username_end;\x0d\n    this.#context.host_start = host_start;\x0d\n    this.#context.host_end = host_end;\x0d\n    this.#context.port = port;\x0d\n    this.#context.pathname_start = pathname_start;\x0d\n    this.#context.search_start = search_start;\x0d\n    this.#context.hash_start = hash_start;\x0d\n    this.#context.scheme_type = scheme_type;\x0d\n\x0d\n    if (this.#searchParams) {\x0d\n      if (this.#context.hasSearch) {\x0d\n        setURLSearchParams(this.#searchParams\x2C this.search);\x0d\n      } else {\x0d\n        setURLSearchParams(this.#searchParams\x2C undefined);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  set href(value) {\x0d\n    value = `${value}`;\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHref\x2C value);\x0d\n    if (!href) { throw new ERR_INVALID_URL(value); }\x0d\n    this.#updateContext(href);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    const protocol = StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\x0d\n\x0d\n    // Check if scheme_type is not `NOT_SPECIAL`\x0d\n    if (this.#context.scheme_type !== 1) {\x0d\n      // Check if scheme_type is `FILE`\x0d\n      if (this.#context.scheme_type === 6) {\x0d\n        return 'null';\x0d\n      }\x0d\n      return `${protocol}//${this.host}`;\x0d\n    }\x0d\n\x0d\n    if (protocol === 'blob:') {\x0d\n      const path = this.pathname;\x0d\n      if (path.length > 0) {\x0d\n        try {\x0d\n          const out = new URL(path);\x0d\n          // Only return origin of scheme is `http` or `https`\x0d\n          // Otherwise return a new opaque origin (null).\x0d\n          if (out.#context.scheme_type === 0 || out.#context.scheme_type === 2) {\x0d\n            return `${out.protocol}//${out.host}`;\x0d\n          }\x0d\n        } catch {\x0d\n          // Do nothing.\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return 'null';\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\x0d\n  }\x0d\n\x0d\n  set protocol(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kProtocol\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    if (this.#context.protocol_end + 2 < this.#context.username_end) {\x0d\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.protocol_end + 2\x2C this.#context.username_end);\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set username(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kUsername\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    if (this.#context.host_start - this.#context.username_end > 0) {\x0d\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.username_end + 1\x2C this.#context.host_start);\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set password(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPassword\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    let startsAt = this.#context.host_start;\x0d\n    if (this.#context.href[startsAt] === '@') {\x0d\n      startsAt++;\x0d\n    }\x0d\n    // If we have an empty host\x2C then the space between components.host_end and\x0d\n    // components.pathname_start may be occupied by /.\x0d\n    if (startsAt === this.#context.host_end) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.pathname_start);\x0d\n  }\x0d\n\x0d\n  set host(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHost\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    let startsAt = this.#context.host_start;\x0d\n    // host_start might be "@" if the URL has credentials\x0d\n    if (this.#context.href[startsAt] === '@') {\x0d\n      startsAt++;\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.host_end);\x0d\n  }\x0d\n\x0d\n  set hostname(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHostname\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    if (this.#context.hasPort) {\x0d\n      return `${this.#context.port}`;\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set port(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPort\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    let endsAt;\x0d\n    if (this.#context.hasSearch) {\x0d\n      endsAt = this.#context.search_start;\x0d\n    } else if (this.#context.hasHash) {\x0d\n      endsAt = this.#context.hash_start;\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.pathname_start\x2C endsAt);\x0d\n  }\x0d\n\x0d\n  set pathname(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPathname\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    if (!this.#context.hasSearch) { return ''; }\x0d\n    let endsAt = this.#context.href.length;\x0d\n    if (this.#context.hasHash) { endsAt = this.#context.hash_start; }\x0d\n    if (endsAt - this.#context.search_start <= 1) { return ''; }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.search_start\x2C endsAt);\x0d\n  }\x0d\n\x0d\n  set search(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C toUSVString(value));\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    // Create URLSearchParams on demand to greatly improve the URL performance.\x0d\n    if (this.#searchParams == null) {\x0d\n      this.#searchParams = new URLSearchParams(this.search);\x0d\n      setURLSearchParamsContext(this.#searchParams\x2C this);\x0d\n    }\x0d\n    return this.#searchParams;\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    if (!this.#context.hasHash || (this.#context.href.length - this.#context.hash_start <= 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.hash_start);\x0d\n  }\x0d\n\x0d\n  set hash(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHash\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  static canParse(url\x2C base = undefined) {\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('url');\x0d\n    }\x0d\n\x0d\n    url = `${url}`;\x0d\n\x0d\n    if (base !== undefined) {\x0d\n      return bindingUrl.canParse(url\x2C `${base}`);\x0d\n    }\x0d\n\x0d\n    // It is important to differentiate the canParse call statements\x0d\n    // since they resolve into different v8 fast api overloads.\x0d\n    return bindingUrl.canParse(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperties(URL\x2C {\x0d\n  canParse: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction installObjectURLMethods() {\x0d\n  const bindingBlob = internalBinding('blob');\x0d\n\x0d\n  function createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    bindingBlob.storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  function revokeObjectURL(url) {\x0d\n    bindingBlob.revokeObjectURL(`${url}`);\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperties(URL\x2C {\x0d\n    createObjectURL: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: createObjectURL\x2C\x0d\n    }\x2C\x0d\n    revokeObjectURL: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: revokeObjectURL\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i = qs[0] === '?' ? 1 : 0;\x0d\n  let pairStart = i;\x0d\n  let lastPos = i;\x0d\n  for (; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return bindingUrl.domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return bindingUrl.domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Utility function that converts a URL object into an ordinary options object\x0d\n * as expected by the `http.request` and `https.request` APIs.\x0d\n * @param {URL} url\x0d\n * @returns {Record<string\x2C unknown>}\x0d\n */\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const { hostname\x2C pathname\x2C port\x2C username\x2C password\x2C search } = url;\x0d\n  const options = {\x0d\n    __proto__: null\x2C\x0d\n    ...url\x2C // In case the url object was extended by the user.\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: hostname && StringPrototypeStartsWith(hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(hostname\x2C 1\x2C -1) :\x0d\n      hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: search\x2C\x0d\n    pathname: pathname\x2C\x0d\n    path: `${pathname || ''}${search || ''}`\x2C\x0d\n    href: url.href\x2C\x0d\n  };\x0d\n  if (port !== '') {\x0d\n    options.port = Number(port);\x0d\n  }\x0d\n  if (username || password) {\x0d\n    options.auth = `${decodeURIComponent(username)}:${decodeURIComponent(password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH\x2C pathname\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = StringPrototypeCodePointAt(pathname\x2C 1) | 0x20;\x0d\n  const sep = StringPrototypeCharAt(pathname\x2C 2);\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return StringPrototypeSlice(pathname\x2C 1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURL(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\nconst questionRegex = /\\?/g;\x0d\nconst hashRegex = /#/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '%') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(percentRegEx\x2C filepath\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIndexOf(filepath\x2C '\\\\') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(backslashRegEx\x2C filepath\x2C '%5C');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\n') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(newlineRegEx\x2C filepath\x2C '%0A');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\r') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(carriageReturnRegEx\x2C filepath\x2C '%0D');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\t') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(tabRegEx\x2C filepath\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    const outURL = new URL('file://');\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const hostnameEndIndex = StringPrototypeIndexOf(filepath\x2C '\\\\'\x2C 2);\x0d\n    if (hostnameEndIndex === -1) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'path'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x2C\x0d\n      );\x0d\n    }\x0d\n    if (hostnameEndIndex === 2) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'path'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x2C\x0d\n      );\x0d\n    }\x0d\n    const hostname = StringPrototypeSlice(filepath\x2C 2\x2C hostnameEndIndex);\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      RegExpPrototypeSymbolReplace(backslashRegEx\x2C StringPrototypeSlice(filepath\x2C hostnameEndIndex)\x2C '/'));\x0d\n    return outURL;\x0d\n  }\x0d\n  let resolved = path.resolve(filepath);\x0d\n  // path.resolve strips trailing slashes so we must add them back\x0d\n  const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                 filepath.length - 1);\x0d\n  if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n       (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n      resolved[resolved.length - 1] !== path.sep)\x0d\n    resolved += '/';\x0d\n\x0d\n  // Call encodePathChars first to avoid encoding % again for ? and #.\x0d\n  resolved = encodePathChars(resolved);\x0d\n\x0d\n  // Question and hash character should be included in pathname.\x0d\n  // Therefore\x2C encoding is required to eliminate parsing them in different states.\x0d\n  // This is done as an optimization to not creating a URL instance and\x0d\n  // later triggering pathname setter\x2C which impacts performance\x0d\n  if (StringPrototypeIndexOf(resolved\x2C '?') !== -1)\x0d\n    resolved = RegExpPrototypeSymbolReplace(questionRegex\x2C resolved\x2C '%3F');\x0d\n  if (StringPrototypeIndexOf(resolved\x2C '#') !== -1)\x0d\n    resolved = RegExpPrototypeSymbolReplace(hashRegex\x2C resolved\x2C '%23');\x0d\n  return new URL(`file://${resolved}`);\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURL(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\n/**\x0d\n * This util takes a string containing a URL and return the URL origin\x2C\x0d\n * its meant to avoid calls to `new URL` constructor.\x0d\n * @param {string} url\x0d\n * @returns {URL['origin']}\x0d\n */\x0d\nfunction getURLOrigin(url) {\x0d\n  return bindingUrl.getOrigin(url);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  installObjectURLMethods\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  encodeStr\x2C\x0d\n  isURL\x2C\x0d\n\x0d\n  urlUpdateActions: updateActions\x2C\x0d\n  getURLOrigin\x2C\x0d\n  unsafeProtocol\x2C\x0d\n  hostlessProtocol\x2C\x0d\n  slashedProtocol\x2C\x0d\n};\x0d\n
code-source-info,0x5169da774e,39,44224,44341,C0O44245C3O44250C9O44277C11O44298C12O44302C15O44309C19O44338,,
code-creation,JS,10,240255,0x5169daa7fe,45,isURL node:internal/url:755:15,0x3a6c8f9efb8,~
code-source-info,0x5169daa7fe,39,22039,22152,C0O22051C12O22070C21O22085C27O22102C34O22129C40O22058C44O22149,,
code-creation,JS,10,240506,0x5169daa986,81, node:internal/fs/utils:697:38,0x3a6c8fb36c8,~
code-source-info,0x5169daa986,60,19597,19877,C14O19631C22O19664C25O19664C31O19691C36O19722C49O19697C54O19691C55O19790C68O19790C74O19829C76O19859C78O19859C80O19876,,
code-creation,JS,10,240654,0x5169daab96,110, node:internal/fs/utils:366:35,0x3a6c8fb2cc8,~
code-source-info,0x5169daab96,60,9157,9773,C16O9222C21O9276C26O9276C31O9373C37O9396C41O9425C45O9442C51O9442C60O9494C64O9515C69O9515C76O9561C77O9568C78O9591C94O9591C100O9717C104O9740C106O9740C107O9759C109O9770,,
code-creation,JS,10,240835,0x5169daad0e,16,isUint8Array node:internal/util/types:13:22,0x3a6c8f84e20,~
script-source,18,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x2C\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x5169daad0e,18,269,356,C0O282C5O289C12O336C15O353,,
code-creation,JS,10,241199,0x5169dab186,23,splitRoot node:fs:2563:33,0x3a6c8fad360,~
code-source-info,0x5169dab186,55,70094,70174,C0O70107C9O70148C12O70114C19O70165C22O70169,,
code-creation,JS,10,241371,0x5169dab2d6,39,SideEffectFreeRegExpPrototypeExec node:internal/util:743:43,0x3a6c8f83e90,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferPrototypeGetByteLength\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeGetDotAll\x2C\x0d\n  RegExpPrototypeGetGlobal\x2C\x0d\n  RegExpPrototypeGetHasIndices\x2C\x0d\n  RegExpPrototypeGetIgnoreCase\x2C\x0d\n  RegExpPrototypeGetMultiline\x2C\x0d\n  RegExpPrototypeGetSticky\x2C\x0d\n  RegExpPrototypeGetUnicode\x2C\x0d\n  RegExpPrototypeGetSource\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolReplace\x2C\x0d\n  SymbolSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  isArrayBufferDetached: _isArrayBufferDetached\x2C\x0d\n  guessHandleType: _guessHandleType\x2C\x0d\n  privateSymbols: {\x0d\n    arrow_message_private_symbol\x2C\x0d\n    decorated_private_symbol\x2C\x0d\n  }\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\nfunction getDeprecationWarningEmitter(\x0d\n  code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\x0d\n  shouldEmitWarning = () => true\x2C\x0d\n) {\x0d\n  let warned = false;\x0d\n  return function() {\x0d\n    if (!warned && shouldEmitWarning()) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          const emitWarning = useEmitSync ?\x0d\n            require('internal/process/warning').emitWarningSync :\x0d\n            process.emitWarning;\x0d\n          emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction isPendingDeprecation() {\x0d\n  return getOptionValue('--pending-deprecation') &&\x0d\n    !getOptionValue('--no-deprecation');\x0d\n}\x0d\n\x0d\n// Internal deprecator for pending --pending-deprecation. This can be invoked\x0d\n// at snapshot building time as the warning permission is only queried at\x0d\n// run time.\x0d\nfunction pendingDeprecate(fn\x2C msg\x2C code) {\x0d\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\x0d\n    code\x2C msg\x2C deprecated\x2C false\x2C isPendingDeprecation\x2C\x0d\n  );\x0d\n  function deprecated(...args) {\x0d\n    emitDeprecationWarning();\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code\x2C useEmitSync) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\x0d\n    code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\x0d\n  );\x0d\n\x0d\n  function deprecated(...args) {\x0d\n    emitDeprecationWarning();\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\x0d\n    return;\x0d\n\x0d\n  const arrow = err[arrow_message_private_symbol];\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    err[decorated_private_symbol] = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature and might change at any time`;\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { __proto__: null\x2C value: type.name }\x2C\x0d\n    length: { __proto__: null\x2C value: type.length }\x2C\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = { __proto__: null };\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nlet cachedURL;\x0d\nlet cachedCWD;\x0d\n\x0d\n/**\x0d\n * Get the current working directory while accounting for the possibility that it has been deleted.\x0d\n * `process.cwd()` can fail if the parent directory is deleted while the process runs.\x0d\n * @returns {URL} The current working directory or the volume root if it cannot be determined.\x0d\n */\x0d\nfunction getCWDURL() {\x0d\n  const { sep } = require('path');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  let cwd;\x0d\n\x0d\n  try {\x0d\n    // The implementation of `process.cwd()` already uses proper cache when it can.\x0d\n    // It's a relatively cheap call performance-wise for the most common use case.\x0d\n    cwd = process.cwd();\x0d\n  } catch {\x0d\n    cachedURL ??= pathToFileURL(sep);\x0d\n  }\x0d\n\x0d\n  if (cwd != null && cwd !== cachedCWD) {\x0d\n    cachedURL = pathToFileURL(cwd + sep);\x0d\n    cachedCWD = cwd;\x0d\n  }\x0d\n\x0d\n  return cachedURL;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\x0d\n  });\x0d\n\x0d\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\x0d\n  const propertiesValues = ObjectValues(descriptors);\x0d\n  for (let i = 0; i < propertiesValues.length; i++) {\x0d\n    // We want to use null-prototype objects to not rely on globally mutable\x0d\n    // %Object.prototype%.\x0d\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n  }\x0d\n  return ObjectDefineProperties(fn\x2C descriptors);\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\x0d\n        continue;\x0d\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    return ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction exposeGetterAndSetter(target\x2C name\x2C getter\x2C setter = undefined) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get: getter\x2C\x0d\n    set: setter\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction defineLazyProperties(target\x2C id\x2C keys\x2C enumerable = true) {\x0d\n  const descriptors = { __proto__: null };\x0d\n  let mod;\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    let lazyLoadedValue;\x0d\n    function set(value) {\x0d\n      ObjectDefineProperty(target\x2C key\x2C {\x0d\n        __proto__: null\x2C\x0d\n        writable: true\x2C\x0d\n        value\x2C\x0d\n      });\x0d\n    }\x0d\n    ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `set ${key}`\x2C\x0d\n    });\x0d\n    function get() {\x0d\n      mod ??= require(id);\x0d\n      if (lazyLoadedValue === undefined) {\x0d\n        lazyLoadedValue = mod[key];\x0d\n        set(lazyLoadedValue);\x0d\n      }\x0d\n      return lazyLoadedValue;\x0d\n    }\x0d\n    ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `get ${key}`\x2C\x0d\n    });\x0d\n    descriptors[key] = {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      get\x2C\x0d\n      set\x2C\x0d\n    };\x0d\n  }\x0d\n  ObjectDefineProperties(target\x2C descriptors);\x0d\n}\x0d\n\x0d\nfunction defineReplaceableLazyAttribute(target\x2C id\x2C keys\x2C writable = true\x2C check) {\x0d\n  let mod;\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    let value;\x0d\n    let setterCalled = false;\x0d\n\x0d\n    function get() {\x0d\n      if (check !== undefined) {\x0d\n        FunctionPrototypeCall(check\x2C this);\x0d\n      }\x0d\n      if (setterCalled) {\x0d\n        return value;\x0d\n      }\x0d\n      mod ??= require(id);\x0d\n      value ??= mod[key];\x0d\n      return value;\x0d\n    }\x0d\n\x0d\n    ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `get ${key}`\x2C\x0d\n    });\x0d\n\x0d\n    function set(val) {\x0d\n      setterCalled = true;\x0d\n      value = val;\x0d\n    }\x0d\n    ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `set ${key}`\x2C\x0d\n    });\x0d\n\x0d\n    ObjectDefineProperty(target\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      get\x2C\x0d\n      set: writable ? set : undefined\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction exposeLazyInterfaces(target\x2C id\x2C keys) {\x0d\n  defineLazyProperties(target\x2C id\x2C keys\x2C false);\x0d\n}\x0d\n\x0d\nlet _DOMException;\x0d\nconst lazyDOMExceptionClass = () => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  return _DOMException;\x0d\n};\x0d\n\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  return new _DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nconst kEnumerableProperty = { __proto__: null };\x0d\nkEnumerableProperty.enumerable = true;\x0d\nObjectFreeze(kEnumerableProperty);\x0d\n\x0d\nconst kEmptyObject = ObjectFreeze({ __proto__: null });\x0d\n\x0d\nfunction filterOwnProperties(source\x2C keys) {\x0d\n  const filtered = { __proto__: null };\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\x0d\n      filtered[key] = source[key];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return filtered;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\x0d\n * @param {any} obj\x0d\n * @param {string} key\x0d\n * @param {any} value\x0d\n * @returns {any}\x0d\n */\x0d\nfunction setOwnProperty(obj\x2C key\x2C value) {\x0d\n  return ObjectDefineProperty(obj\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nlet internalGlobal;\x0d\nfunction getInternalGlobal() {\x0d\n  if (internalGlobal == null) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\x0d\n  }\x0d\n  return internalGlobal;\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\x0d\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\x0d\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\x0d\n}\x0d\n\x0d\nconst crossRelmRegexes = new SafeWeakMap();\x0d\nfunction getCrossRelmRegex(regex) {\x0d\n  const cached = crossRelmRegexes.get(regex);\x0d\n  if (cached) return cached;\x0d\n\x0d\n  let flagString = '';\x0d\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\x0d\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\x0d\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\x0d\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\x0d\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\x0d\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\x0d\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\x0d\n\x0d\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\x0d\n  const crossRelmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex)\x2C flagString);\x0d\n  crossRelmRegexes.set(regex\x2C crossRelmRegex);\x0d\n  return crossRelmRegex;\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex\x2C string\x2C replacement) {\x0d\n  return getCrossRelmRegex(regex)[SymbolReplace](string\x2C replacement);\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex\x2C string\x2C limit = undefined) {\x0d\n  return getCrossRelmRegex(regex)[SymbolSplit](string\x2C limit);\x0d\n}\x0d\n\x0d\n\x0d\nfunction isArrayBufferDetached(value) {\x0d\n  if (ArrayBufferPrototypeGetByteLength(value) === 0) {\x0d\n    return _isArrayBufferDetached(value);\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Helper function to lazy-load an initialize-once value.\x0d\n * @template T Return value of initializer\x0d\n * @param {()=>T} initializer Initializer of the lazily loaded value.\x0d\n * @returns {()=>T}\x0d\n */\x0d\nfunction getLazy(initializer) {\x0d\n  let value;\x0d\n  let initialized = false;\x0d\n  return function() {\x0d\n    if (initialized === false) {\x0d\n      value = initializer();\x0d\n      initialized = true;\x0d\n    }\x0d\n    return value;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Setup user-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage objects to a specified directory.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\n\x0d\nconst handleTypes = ['TCP'\x2C 'TTY'\x2C 'UDP'\x2C 'FILE'\x2C 'PIPE'\x2C 'UNKNOWN'];\x0d\nfunction guessHandleType(fd) {\x0d\n  const type = _guessHandleType(fd);\x0d\n  return handleTypes[type];\x0d\n}\x0d\n\x0d\nclass WeakReference {\x0d\n  #weak = null;\x0d\n  #strong = null;\x0d\n  #refCount = 0;\x0d\n  constructor(object) {\x0d\n    this.#weak = new SafeWeakRef(object);\x0d\n  }\x0d\n\x0d\n  incRef() {\x0d\n    this.#refCount++;\x0d\n    if (this.#refCount === 1) {\x0d\n      const derefed = this.#weak.deref();\x0d\n      if (derefed !== undefined) {\x0d\n        this.#strong = derefed;\x0d\n      }\x0d\n    }\x0d\n    return this.#refCount;\x0d\n  }\x0d\n\x0d\n  decRef() {\x0d\n    this.#refCount--;\x0d\n    if (this.#refCount === 0) {\x0d\n      this.#strong = null;\x0d\n    }\x0d\n    return this.#refCount;\x0d\n  }\x0d\n\x0d\n  get() {\x0d\n    return this.#weak.deref();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getLazy\x2C\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  defineLazyProperties\x2C\x0d\n  defineReplaceableLazyAttribute\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  exposeLazyInterfaces\x2C\x0d\n  exposeNamespace\x2C\x0d\n  exposeGetterAndSetter\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  filterOwnProperties\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getCWDURL\x2C\x0d\n  getInternalGlobal\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  guessHandleType\x2C\x0d\n  isArrayBufferDetached\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  lazyDOMExceptionClass\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  setOwnProperty\x2C\x0d\n  pendingDeprecate\x2C\x0d\n  WeakReference\x2C\x0d\n};\x0d\n
code-source-info,0x5169dab2d6,16,20770,20944,C0O20834C3O20834C7O20807C12O20858C17O20910C22O20920C33O20865C38O20941,,
code-creation,JS,10,243876,0x5169dad15e,52,getInternalGlobal node:internal/util:734:27,0x3a6c8f83e40,~
code-source-info,0x5169dad15e,16,20468,20724,C0O20476C7O20589C13O20589C18O20569C23O20609C28O20650C33O20626C41O20624C47O20699C51O20721,,
tick,0x7ff740512e7a,244515,1,0x7ff73ff1c950,2,0x7ff740921370,0x7ff6c0b44126,0x7ff6c0b43ea1,0x5169dad16b,0x5169dab2d9,0x5169dab192,0x5169d9e8ea,0x5169d9e411,0x5169d9d9ad,0x5169d9d17a,0x5169d9c95f,0x3d485179d4f
code-creation,Eval,10,245049,0x5169dadc46,5, node:vm:1:1,0x5169dad868,~
script-source,81,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  makeContext\x2C\x0d\n  constants\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateInt32\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateUint32\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  getHostDefinedOptionId\x2C\x0d\n  internalCompileFunction\x2C\x0d\n  isContext\x2C\x0d\n  registerImportModuleDynamically\x2C\x0d\n} = require('internal/vm');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = kEmptyObject) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined) {\x0d\n      validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    const hostDefinedOptionId =\x0d\n        getHostDefinedOptionId(importModuleDynamically\x2C filename);\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext\x2C\x0d\n            hostDefinedOptionId);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      registerImportModuleDynamically(this\x2C importModuleDynamically);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(null\x2C options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(\x0d\n      contextifiedObject\x2C\x0d\n      options\x2C\x0d\n    );\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(contextifiedObject\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [\x0d\n      contextifiedObject\x2C\x0d\n      timeout\x2C\x0d\n      displayErrors\x2C\x0d\n      breakOnSigint\x2C\x0d\n      breakFirstLine\x2C\x0d\n    ]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = kEmptyObject) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  validateOneOf(microtaskMode\x2C\x0d\n                'options.microtaskMode'\x2C\x0d\n                ['afterEvaluate'\x2C undefined]);\x0d\n  const microtaskQueue = (microtaskMode === 'afterEvaluate');\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x2C\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = kEmptyObject) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateStringArray(params\x2C 'params');\x0d\n  }\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C kValidateObjectAllowNullable);\x0d\n  });\x0d\n\x0d\n  const hostDefinedOptionId =\x0d\n      getHostDefinedOptionId(importModuleDynamically\x2C filename);\x0d\n\x0d\n  return internalCompileFunction(\x0d\n    code\x2C filename\x2C lineOffset\x2C columnOffset\x2C\x0d\n    cachedData\x2C produceCachedData\x2C parsingContext\x2C contextExtensions\x2C\x0d\n    params\x2C hostDefinedOptionId\x2C importModuleDynamically\x2C\x0d\n  ).function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = kEmptyObject) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x5169dadc46,81,0,12296,C0O0C4O12296,,
code-creation,JS,10,246826,0x5169dae64e,580, node:vm:1:1,0x5169dadbc0,~
code-source-info,0x5169dae64e
code-creation,JS,10,247601,0x5169dafefe,82,runInNewContext node:vm:282:25,0x5169dadea8,~
code-source-info,0x5169dafefe,81,8899,9234,C0O8935C6O8975C13O8997C22O9016C28O9061C33O9032C40O9093C47O9118C53O9136C61O9156C64O9163C70O9190C75O9191C81O9231,,
code-creation,JS,10,247761,0x5169db0efe,214,getContextOptions node:vm:180:27,0x5169dadd18,~
code-source-info,0x5169db0efe,81,5540,6608,C0O5555C4O5574C5O5584C6O5611C11O5632C19O5666C28O5702C32O5741C43O5784C49O5809C54O5839C62O5809C67O5891C73O5918C78O5948C86O5918C91O5997C97O6041C102O6064C110O6041C115O6180C120O6154C125O6163C130O6208C134O6242C142O6242C147O6314C151O6345C159O6345C164O6411C171O6445C177O6454C183O6441C187O6482C193O6516C198O6539C206O6516C211O6583C213O6605,,
code-creation,JS,10,247969,0x5169db16e6,268,createContext node:vm:209:23,0x5169dadd68,~
code-source-info,0x5169db16e6,81,6668,7742,C4O6668C16O6699C23O6718C28O6722C34O6755C36O6776C37O6787C45O6787C50O6841C64O6848C74O6885C87O6896C92O6909C97O6930C102O6966C110O6966C115O7007C119O7038C127O7038C132O7083C136O7122C144O7122C149O7199C151O7219C153O7228C157O7272C168O7288C176O7326C184O7326C189O7391C197O7391C202O7455C210O7469C219O7561C226O7455C231O7600C233O7615C237O7642C260O7642C265O7718C267O7739,,
code-creation,JS,10,248104,0x5169db194e,31,isContext node:internal/vm:31:19,0x3a6c8f9b608,~
script-source,36,node:internal/vm,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  compileFunction\x2C\x0d\n  isContext: _isContext\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  runInContext\x2C\x0d\n} = ContextifyScript.prototype;\x0d\nconst {\x0d\n  default_host_defined_options\x2C\x0d\n  vm_dynamic_import_missing_flag\x2C\x0d\n} = internalBinding('symbols');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n} = require('internal/options');\x0d\n\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C kValidateObjectAllowArray);\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nfunction getHostDefinedOptionId(importModuleDynamically\x2C filename) {\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    // Check that it's either undefined or a function before we pass\x0d\n    // it into the native constructor.\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n  }\x0d\n  if (importModuleDynamically === undefined) {\x0d\n    // We need a default host defined options that are the same for all\x0d\n    // scripts not needing custom module callbacks so that the isolate\x0d\n    // compilation cache can be hit.\x0d\n    return default_host_defined_options;\x0d\n  }\x0d\n  // We should've thrown here immediately when we introduced\x0d\n  // --experimental-vm-modules and importModuleDynamically\x2C but since\x0d\n  // users are already using this callback to throw a similar error\x2C\x0d\n  // we also defer the error to the time when an actual import() is called\x0d\n  // to avoid breaking them. To ensure that the isolate compilation\x0d\n  // cache can still be hit\x2C use a constant sentinel symbol here.\x0d\n  if (!getOptionValue('--experimental-vm-modules')) {\x0d\n    return vm_dynamic_import_missing_flag;\x0d\n  }\x0d\n\x0d\n  return Symbol(filename);\x0d\n}\x0d\n\x0d\nfunction registerImportModuleDynamically(referrer\x2C importModuleDynamically) {\x0d\n  const { importModuleDynamicallyWrap } = require('internal/vm/module');\x0d\n  const { registerModule } = require('internal/modules/esm/utils');\x0d\n  registerModule(referrer\x2C {\x0d\n    __proto__: null\x2C\x0d\n    importModuleDynamically:\x0d\n      importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction internalCompileFunction(\x0d\n  code\x2C filename\x2C lineOffset\x2C columnOffset\x2C\x0d\n  cachedData\x2C produceCachedData\x2C parsingContext\x2C contextExtensions\x2C\x0d\n  params\x2C hostDefinedOptionId\x2C importModuleDynamically) {\x0d\n  const result = compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x2C\x0d\n    hostDefinedOptionId\x2C\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (typeof result.cachedDataRejected === 'boolean') {\x0d\n    result.function.cachedDataRejected = result.cachedDataRejected;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    registerImportModuleDynamically(result.function\x2C importModuleDynamically);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction makeContextifyScript(code\x2C\x0d\n                              filename\x2C\x0d\n                              lineOffset\x2C\x0d\n                              columnOffset\x2C\x0d\n                              cachedData\x2C\x0d\n                              produceCachedData\x2C\x0d\n                              parsingContext\x2C\x0d\n                              hostDefinedOptionId\x2C\x0d\n                              importModuleDynamically) {\x0d\n  let script;\x0d\n  // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n  // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n  // protects against that.\x0d\n  try { // eslint-disable-line no-useless-catch\x0d\n    script = new ContextifyScript(code\x2C\x0d\n                                  filename\x2C\x0d\n                                  lineOffset\x2C\x0d\n                                  columnOffset\x2C\x0d\n                                  cachedData\x2C\x0d\n                                  produceCachedData\x2C\x0d\n                                  parsingContext\x2C\x0d\n                                  hostDefinedOptionId);\x0d\n  } catch (e) {\x0d\n    throw e; /* node-do-not-add-exception-line */\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    registerImportModuleDynamically(script\x2C importModuleDynamically);\x0d\n  }\x0d\n  return script;\x0d\n}\x0d\n\x0d\n// Internal version of vm.Script.prototype.runInThisContext() which skips\x0d\n// argument validation.\x0d\nfunction runScriptInThisContext(script\x2C displayErrors\x2C breakOnFirstLine) {\x0d\n  return ReflectApply(\x0d\n    runInContext\x2C\x0d\n    script\x2C\x0d\n    [\x0d\n      null\x2C                // sandbox - use current context\x0d\n      -1\x2C                  // timeout\x0d\n      displayErrors\x2C       // displayErrors\x0d\n      false\x2C               // breakOnSigint\x0d\n      breakOnFirstLine\x2C    // breakOnFirstLine\x0d\n    ]\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHostDefinedOptionId\x2C\x0d\n  internalCompileFunction\x2C\x0d\n  isContext\x2C\x0d\n  makeContextifyScript\x2C\x0d\n  registerImportModuleDynamically\x2C\x0d\n  runScriptInThisContext\x2C\x0d\n};\x0d\n
code-source-info,0x5169db194e,36,557,666,C0O571C10O604C16O571C21O637C26O644C30O663,,
code-creation,JS,10,248934,0x5169db2046,252, node:internal/validators:235:3,0x2b98313f478,~
code-source-info,0x5169db2046,15,6288,7336,C12O6312C19O6343C21O6359C23O6355C28O6389C34O6411C37O6411C43O6443C59O6449C64O6443C65O6516C71O6558C87O6564C92O6558C95O6667C102O6697C107O6708C111O6724C117O6774C133O6780C138O6774C139O6868C146O6895C151O6906C155O6922C159O6942C162O6942C168O6974C184O6980C189O6974C190O7071C197O7101C202O7112C206O7146C210O7169C212O7185C219O7202C223O7233C228O7261C244O7267C249O7261C251O7335,,
code-creation,JS,10,249112,0x5169db2366,75, node:internal/validators:197:39,0x2b98313f3d8,~
code-source-info,0x5169db2366,15,5278,5620,C0O5307C5O5312C12O5373C19O5400C22O5418C27O5400C36O5373C42O5524C47O5543C51O5559C67O5565C72O5559C74O5619,,
code-creation,JS,10,250050,0x2b5ae35eae6,19,createScript node:vm:246:22,0x5169daddb8,~
code-source-info,0x2b5ae35eae6,81,7767,7824,C0O7788C13O7795C18O7821,,
code-creation,JS,10,250216,0x2b5ae35edfe,317,Script node:vm:67:14,0x5169dadfe8,~
code-source-info,0x2b5ae35edfe,81,2132,3679,C14O2149C21O2170C25O2193C31O2235C38O2257C49O2289C59O2289C64O2354C76O2399C84O2422C92O2447C97O2466C105O2500C114O2533C124O2592C134O2592C139O2643C149O2643C154O2697C164O2697C169O2755C173O2794C183O2794C188O2856C198O2856C203O2965C210O2965C219O3258C264O3258C291O3492C293O3492C294O3552C298O3604C308O3604C316O3678,,
code-creation,JS,10,250370,0x2b5ae35f0f6,155, node:internal/validators:114:3,0x2b98313f1b0,~
code-source-info,0x2b5ae35f0f6,15,2924,3398,C36O3067C42O3107C58O3113C63O3107C64O3174C69O3179C75O3212C91O3218C96O3212C97O3279C99O3289C106O3304C111O3320C121O3359C134O3372C147O3326C152O3320C154O3397,,
code-creation,JS,10,250467,0x2b5ae35f2ee,55,getHostDefinedOptionId node:internal/vm:37:32,0x3a6c8f9b780,~
code-source-info,0x2b5ae35f2ee,36,701,1836,C0O742C4O902C12O902C17O1010C21O1243C25O1279C26O1703C34O1708C40O1760C44O1798C45O1809C50O1816C54O1833,,
code-creation,Script,10,250568,0x2b5ae35f57e,5, evalmachine.<anonymous>:1:1,0x2b5ae35f4b8,~
script-source,82,evalmachine.<anonymous>,this
code-source-info,0x2b5ae35f57e,82,0,4,C0O0C4O4,,
code-creation,JS,10,250660,0x2b5ae35f77e,33,runInNewContext node:vm:136:18,0x5169dae0d8,~
code-source-info,0x2b5ae35f77e,81,4408,4567,C0O4456C10O4485C15O4456C21O4531C26O4531C32O4562,,
code-creation,JS,10,250765,0x2b5ae35f8a6,109,runInContext node:vm:124:15,0x5169dae088,~
code-source-info,0x2b5ae35f8a6,81,4004,4387,C0O4041C5O4041C9O4115C14O4115C20O4091C25O4106C30O4192C39O4221C47O4221C54O4245C59O4259C66O4291C77O4266C82O4317C83O4330C92O4356C103O4337C108O4382,,
code-creation,JS,10,250844,0x2b5ae35fa4e,35,validateContext node:vm:142:25,0x5169dadc78,~
code-source-info,0x2b5ae35fa4e,81,4598,4798,C0O4624C5O4629C11O4667C27O4673C32O4667C34O4797,,
code-creation,JS,10,250949,0x2b5ae35fcbe,188,getRunInContextArgs node:vm:149:29,0x5169dadcc8,~
code-source-info,0x2b5ae35fcbe,81,4830,5510,C9O4861C16O4880C24O4880C29O4943C34O4955C36O4989C41O5020C54O5020C59O5093C70O5120C80O5149C93O5220C101O5220C106O5280C114O5280C119O5342C126O5356C130O5382C139O5391C148O5418C157O5434C166O5456C175O5478C187O5507,,
code-creation,JS,10,251364,0x2b5ae360046,63,handleErrorFromBinding node:internal/fs/utils:349:32,0x3a6c8fb2c78,~
code-source-info,0x2b5ae360046,60,8501,9012,C0O8520C6O8584C11O8584C16O8607C24O8607C29O8665C31O8665C32O8692C38O8924C43O8951C51O8924C56O8998C60O8988C62O9011,,
code-creation,JS,10,251465,0x2b5ae3601a6,54,nextPart node:fs:2589:31,0x3a6c8fad438,~
code-source-info,0x2b5ae3601a6,55,70865,71116,C0O70892C4O70888C9O70925C14O70925C20O71009C22O71020C24O71016C31O71050C33O71046C38O71079C40O71088C41O70902C47O70879C51O71101C53O71111,,
code-creation,JS,10,251633,0x2b5ae3602ee,34,isFileType node:fs:206:20,0x3a6c8fab5f8,~
code-source-info,0x2b5ae3602ee,55,5291,5539,C0O5428C2O5433C6O5441C10O5476C15O5483C20O5500C22O5515C24O5513C30O5523C33O5536,,
code-creation,JS,11,251732,0x7ff6c0b44740,564,nextPart node:fs:2589:31,0x3a6c8fad438,^
code-source-info,0x7ff6c0b44740,55,70865,71116,,,
code-creation,JS,11,251771,0x7ff6c0b449c0,316,SafeMap node:internal/per_context/primordials:413:16,0x2b983134b18,^
code-source-info,0x7ff6c0b449c0,6,12387,12404,,,
code-creation,JS,11,251806,0x7ff6c0b44b40,556,getOptionValue node:internal/options:44:24,0x3a6c8f84968,^
code-source-info,0x7ff6c0b44b40,17,1028,1278,,,
code-creation,JS,11,251833,0x7ff6c0b44d80,132,exposeLazyInterfaces node:internal/util:683:30,0x3a6c8f83bf0,^
code-source-info,0x7ff6c0b44d80,16,19164,19237,,,
code-creation,JS,11,251896,0x7ff6c0b44e40,2532,defineLazyProperties node:internal/util:600:30,0x3a6c8f831f8,^
code-source-info,0x7ff6c0b44e40,16,17244,18186,,,
code-creation,JS,11,251929,0x7ff6c0b45840,412,getCLIOptionsFromBinding node:internal/options:18:34,0x3a6c8f84750,^
code-source-info,0x7ff6c0b45840,17,514,620,,,
code-creation,JS,11,251955,0x7ff6c0b45a00,100,next node:internal/per_context/primordials:335:9,0x2b9831340e0,^
code-source-info,0x7ff6c0b45a00,6,9913,9960,,,
code-creation,JS,11,251984,0x7ff6c0b45a80,316,SafeSet node:internal/per_context/primordials:426:16,0x2b983134d68,^
code-source-info,0x7ff6c0b45a80,6,12729,12746,,,
code-creation,JS,11,252015,0x7ff6c0b45c00,392,isWindowsDeviceRoot node:path:60:29,0x3a6c8f9abf8,^
code-source-info,0x7ff6c0b45c00,34,1991,2136,,,
code-creation,JS,10,252416,0x2b5ae360ae6,72,encodeRealpathResult node:fs:2576:30,0x3a6c8fad3e8,~
code-source-info,0x2b5ae360ae6,55,70454,70720,C0O70477C4O70502C10O70522C17O70531C22O70548C24O70562C25O70583C30O70590C35O70590C41O70619C48O70628C53O70649C55O70665C56O70690C61O70707C66O70690C71O70717,,
code-creation,JS,10,252627,0x2b5ae360dc6,199,shouldUseESMLoader node:internal/modules/run_main:52:28,0x3a6c8fbb0b8,~
code-source-info,0x2b5ae360dc6,70,1718,3179,C0O1734C8O1738C15O1784C20O1800C21O1812C22O1994C30O1994C35O2215C43O2215C48O2262C54O2269C59O2288C65O2295C70O2302C71O2314C72O2376C78O2392C84O2392C91O2437C92O2449C93O2455C99O2472C105O2472C112O2517C113O2530C114O2567C120O2567C125O2546C130O2631C135O2743C142O2747C166O2784C167O2796C168O2826C169O2839C170O2902C178O2906C184O3085C191O3092C196O3134C197O3151C198O3164,,
code-creation,JS,10,252913,0x2b5ae361136,184,readPackageScope node:internal/modules/package_json_reader:149:26,0x3a6c8fb80a8,~
script-source,65,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { resolve\x2C sep\x2C toNamespacedPath } = require('path');\x0d\nconst permission = require('internal/process/permission');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst { fileURLToPath\x2C pathToFileURL } = require('internal/url');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\nconst isAIX = process.platform === 'aix';\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n * @typedef {{\x0d\n *   exists: boolean\x2C\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: string | string[] | Record<string\x2C unknown>\x2C\x0d\n *   imports?: string | string[] | Record<string\x2C unknown>\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type: 'commonjs' | 'module' | 'none'\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\n/**\x0d\n * @param {string} jsonPath\x0d\n * @param {{\x0d\n *   base?: string\x2C\x0d\n *   specifier: string\x2C\x0d\n *   isESM: boolean\x2C\x0d\n * }} options\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction read(jsonPath\x2C { base\x2C specifier\x2C isESM } = kEmptyObject) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    0: string\x2C\x0d\n    1: containsKeys\x2C\x0d\n  } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x2C\x0d\n  );\x0d\n  const result = {\x0d\n    __proto__: null\x2C\x0d\n    exists: false\x2C\x0d\n    pjsonPath: jsonPath\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C // Ignore unknown types for forwards compatibility\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n\x0d\n  // Folder read operation succeeds in AIX.\x0d\n  // For libuv change\x2C see https://github.com/libuv/libuv/pull/2025.\x0d\n  // https://github.com/nodejs/node/pull/48477#issuecomment-1604586650\x0d\n  // TODO(anonrig): Follow-up on this change and remove it since it is a\x0d\n  // semver-major change.\x0d\n  const isResultValid = isAIX && !isESM ? containsKeys : string !== undefined;\x0d\n\x0d\n  if (isResultValid) {\x0d\n    let parsed;\x0d\n    try {\x0d\n      parsed = JSONParse(string);\x0d\n    } catch (error) {\x0d\n      if (isESM) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          jsonPath\x2C\x0d\n          (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n          error.message\x2C\x0d\n        );\x0d\n      } else {\x0d\n        // For backward compat\x2C we modify the error returned by JSON.parse rather than creating a new one.\x0d\n        // TODO(aduh95): make it throw ERR_INVALID_PACKAGE_CONFIG in a semver-major with original error as cause\x0d\n        error.message = 'Error parsing ' + jsonPath + ': ' + error.message;\x0d\n        error.path = jsonPath;\x0d\n        throw error;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    result.exists = true;\x0d\n\x0d\n    // ObjectPrototypeHasOwnProperty is used to avoid prototype pollution.\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'name') && typeof parsed.name === 'string') {\x0d\n      result.name = parsed.name;\x0d\n    }\x0d\n\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'main') && typeof parsed.main === 'string') {\x0d\n      result.main = parsed.main;\x0d\n    }\x0d\n\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'exports')) {\x0d\n      result.exports = parsed.exports;\x0d\n    }\x0d\n\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'imports')) {\x0d\n      result.imports = parsed.imports;\x0d\n    }\x0d\n\x0d\n    // Ignore unknown types for forwards compatibility\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'type') && (parsed.type === 'commonjs' || parsed.type === 'module')) {\x0d\n      result.type = parsed.type;\x0d\n    }\x0d\n\x0d\n    if (manifest === undefined) {\x0d\n      const { getOptionValue } = require('internal/options');\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} requestPath\x0d\n * @return {PackageConfig}\x0d\n */\x0d\nfunction readPackage(requestPath) {\x0d\n  return read(resolve(requestPath\x2C 'package.json'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the nearest parent package.json file from a given path.\x0d\n * Return the package.json data and the path to the package.json file\x2C or false.\x0d\n * @param {string} checkPath The path to start searching from.\x0d\n */\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  const enabledPermission = permission.isEnabled();\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    // Stop the search when the process doesn't have permissions\x0d\n    // to walk upwards\x0d\n    if (enabledPermission && !permission.has('fs.read'\x2C checkPath + sep)) {\x0d\n      return false;\x0d\n    }\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules')) {\x0d\n      return false;\x0d\n    }\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson.exists) {\x0d\n      return {\x0d\n        data: pjson\x2C\x0d\n        path: checkPath\x2C\x0d\n      };\x0d\n    }\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  read\x2C\x0d\n  readPackage\x2C\x0d\n  readPackageScope\x2C\x0d\n};\x0d\n
code-source-info,0x2b5ae361136,65,4410,5229,C0O4454C7O4488C10O4454C16O4501C18O4546C23O4557C28O4557C33O4583C40O4638C43O4600C49O4649C62O4661C69O4808C75O4834C78O4845C88O4872C90O4870C94O4845C102O4887C103O4900C104O4913C111O4952C116O4956C120O4917C127O4984C128O4997C129O5024C134O5048C136O5046C140O5024C145O5069C151O5086C158O5110C164O5132C170O5152C171O5187C173O5187C178O4573C182O5213C183O5226,,
code-creation,JS,10,253600,0x2b5ae3618f6,43,isEnabled node:internal/process/permission:16:12,0x3a6c8fa3e08,~
script-source,46,node:internal/process/permission,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst permission = internalBinding('permission');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst { resolve } = require('path');\x0d\n\x0d\nlet experimentalPermission;\x0d\n\x0d\nmodule.exports = ObjectFreeze({\x0d\n  __proto__: null\x2C\x0d\n  isEnabled() {\x0d\n    if (experimentalPermission === undefined) {\x0d\n      const { getOptionValue } = require('internal/options');\x0d\n      experimentalPermission = getOptionValue('--experimental-permission');\x0d\n    }\x0d\n    return experimentalPermission;\x0d\n  }\x2C\x0d\n  has(scope\x2C reference) {\x0d\n    validateString(scope\x2C 'scope');\x0d\n    if (reference != null) {\x0d\n      // TODO: add support for WHATWG URLs and Uint8Arrays.\x0d\n      validateString(reference\x2C 'reference');\x0d\n      if (StringPrototypeStartsWith(scope\x2C 'fs')) {\x0d\n        reference = resolve(reference);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return permission.has(scope\x2C reference);\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x2b5ae3618f6,46,339,580,C0O349C6O427C12O427C17O408C22O463C25O488C32O486C38O545C42O575,,
code-creation,JS,10,253778,0x2b5ae361b5e,22,readPackage node:internal/modules/package_json_reader:140:21,0x3a6c8fb8058,~
code-source-info,0x2b5ae361b5e,65,4089,4161,C0O4108C5O4120C11O4120C17O4115C21O4158,,
code-creation,JS,11,253970,0x7ff6c0b45dc0,6376,resolve node:path:162:10,0x3a6c8f9ad38,^
code-source-info,0x7ff6c0b45dc0,34,4971,9889,,,
code-creation,JS,10,254196,0x2b5ae36255e,573,read node:internal/modules/package_json_reader:48:14,0x3a6c8fb7e70,~
code-source-info,0x2b5ae36255e
code-creation,JS,10,255038,0x2b5ae36347e,679,Module._load node:internal/modules/cjs/loader:950:24,0x3a6c8fb6b88,~
code-source-info,0x2b5ae36347e
code-creation,JS,10,255782,0x2b5ae363d4e,881,Module._resolveFilename node:internal/modules/cjs/loader:1058:35,0x3a6c8fb6bf8,~
code-source-info,0x2b5ae363d4e
code-creation,JS,10,256217,0x2b5ae36439e,77,normalizeRequirableId node:internal/bootstrap/realm:292:31,0x2b983136bd0,~
code-source-info,0x2b5ae36439e,9,9543,9878,C0O9555C10O9559C17O9629C27O9629C33O9665C38O9683C43O9683C50O9730C52O9750C55O9772C60O9790C65O9790C72O9831C74O9841C75O9856C76O9873,,
code-creation,JS,10,256332,0x2b5ae3644e6,18,canBeRequiredWithoutScheme node:internal/bootstrap/realm:288:36,0x2b983136b80,~
code-source-info,0x2b5ae3644e6,9,9439,9509,C0O9451C7O9496C12O9496C17O9504,,
code-creation,JS,10,256557,0x2b5ae3647ce,345,Module._resolveLookupPaths node:internal/modules/cjs/loader:839:38,0x3a6c8fb69b8,~
code-source-info,0x2b5ae3647ce
code-creation,JS,10,256769,0x2b5ae364aae,89,logger node:internal/util/debuglog:100:18,0x3a6c8f8a9f0,~
code-source-info,0x2b5ae364aae,22,3064,3265,C0O3064C3O3097C24O3122C30O3139C34O3129C38O3144C39O3160C45O3177C51O3186C55O3167C60O3191C61O3208C65O3215C72O3228C77O3224C83O3215C88O3253,,
code-creation,JS,10,256953,0x2b5ae364d06,3, node:internal/per_context/primordials:338:21,0x2b983134130,~
code-source-info,0x2b5ae364d06,6,9982,10013,C0O9994C2O10006,,
code-creation,JS,10,257107,0x2b5ae364dde,140,debug node:internal/util/debuglog:81:15,0x3a6c8f8a950,~
code-source-info,0x2b5ae364dde,22,2533,2939,C0O2533C3O2553C6O2553C9O2664C16O2685C22O2672C30O2670C36O2705C42O2742C47O2745C50O2742C54O2771C75O2796C81O2813C85O2803C89O2818C90O2834C96O2851C102O2860C106O2841C111O2865C112O2882C116O2889C123O2902C128O2898C134O2889C139O2927,,
code-creation,JS,10,257209,0x2b5ae364f8e,41,init node:internal/util/debuglog:77:16,0x3a6c8f8a900,~
code-source-info,0x2b5ae364f8e,22,2431,2517,C0O2441C10O2447C14O2445C16O2485C26O2495C33O2493C40O2516,,
code-creation,JS,10,257309,0x2b5ae36507e,2,testEnabled node:internal/util/debuglog:31:19,0x5169d8e728,~
code-source-info,0x2b5ae36507e,22,988,999,C0O994C1O999,,
code-creation,JS,10,257417,0x2b5ae3651f6,116,debuglogImpl node:internal/util/debuglog:54:22,0x3a6c8f8a6b8,~
code-source-info,0x2b5ae3651f6,22,1607,2160,C0O1607C9O1627C18O1641C23O1669C34O1703C39O1711C43O1703C45O1723C55O1723C59O1756C71O1767C75O1772C83O2095C97O2113C99O2111C103O2134C112O2151C115O2157,,
code-creation,JS,10,257520,0x2b5ae3653ae,10, node:internal/modules/cjs/loader:357:66,0x3a6c8fb6528,~
code-source-info,0x2b5ae3653ae,63,10303,10330,C0O10316C2O10322C9O10329,,
code-creation,JS,10,257591,0x2b5ae36545e,2,noop node:internal/util/debuglog:46:14,0x3a6c8f8a618,~
code-source-info,0x2b5ae36545e,22,1449,1457,C1O1456,,
code-creation,JS,10,257672,0x2b5ae365586,76,trySelfParentPath node:internal/modules/cjs/loader:520:27,0x3a6c8fb67a8,~
code-source-info,0x2b5ae365586,63,15713,15992,C0O15727C4O15742C5O15755C6O15774C12O15805C16O15814C17O15836C24O15839C29O15862C36O15865C44O15909C47O15924C52O15924C59O15932C62O15937C66O15930C69O15941C72O15964C73O15977C75O15991,,
code-creation,JS,10,257847,0x2b5ae36583e,249,trySelf node:internal/modules/cjs/loader:539:17,0x3a6c8fb67f8,~
code-source-info,0x2b5ae36583e,63,16223,17163,C0O16250C4O16269C5O16282C6O16327C11O16345C16O16345C22O16304C27O16315C32O16378C36O16394C43O16417C49O16444C50O16457C51O16472C53O16506C57O16498C62O16519C67O16546C72O16592C84O16550C91O16609C96O16627C99O16661C104O16666C109O16627C114O16625C120O16692C121O16705C125O16761C131O16761C136O16735C141O16807C146O16866C151O16888C155O16866C162O16931C165O16931C172O16958C175O16958C185O16836C197O16814C202O17000C214O17023C217O17029C224O17034C229O17071C236O17115C240O17077C245O17071C246O17147C248O17147,,
code-creation,JS,10,258088,0x2b5ae365bde,218,Module node:internal/modules/cjs/loader:252:16,0x3a6c8fb61b8,~
code-source-info,0x2b5ae365bde,63,7494,8256,C14O7517C16O7525C20O7534C22O7546C25O7551C30O7551C35O7544C39O7567C52O7567C57O7607C62O7625C67O7625C73O7647C84O7647C89O7687C90O7701C94O7712C95O7724C99O7736C101O7750C105O7763C107O7794C112O7794C118O7802C126O7817C128O7856C133O7856C138O7901C143O7901C149O7999C159O8031C162O8031C171O7999C176O8117C181O8137C191O8159C194O8159C200O8117C205O8206C207O8211C212O8235C217O8255,,
code-creation,JS,10,258372,0x2b5ae365f86,453,dirname node:path:657:10,0x3a6c8f9af18,~
code-source-info,0x2b5ae365f86,34,21383,24011,C0O21397C8O21397C13O21449C18O21462C19O21470C24O21484C26O21495C27O21515C30O21537C32O21558C39O21558C45O21601C47O21609C52O21731C55O21738C67O21773C68O21816C71O21820C77O21882C81O21913C86O21933C92O21933C98O21917C104O22044C107O22067C108O22142C110O22136C120O22178C123O22178C129O22162C135O22228C140O22127C144O22253C146O22259C153O22270C158O22316C163O22398C165O22392C175O22435C178O22435C184O22419C190O22487C195O22383C199O22516C201O22522C208O22533C213O22583C218O22673C220O22667C230O22713C233O22713C239O22697C245O22767C250O22658C254O22800C256O22806C261O22877C263O22889C264O22918C266O22924C271O23154C273O23175C280O23269C283O23273C291O23318C297O23318C305O23357C307O23353C312O23378C314O23401C324O23424C330O23424C336O23408C349O23476C350O23518C353O23546C355O23570C357O23574C361O23581C363O23581C368O23606C373O23626C376O23626C382O23610C388O23674C392O23706C397O23726C401O23817C403O23594C408O23557C412O23862C414O23870C419O23887C421O23899C426O23916C428O23927C429O23937C434O23964C447O23971C452O24006,,
code-creation,JS,10,258740,0x2b5ae366446,28,setOwnProperty node:internal/util:723:24,0x3a6c8f83df0,~
code-source-info,0x2b5ae366446,16,20242,20417,C0O20265C5O20298C12O20380C22O20272C27O20414,,
code-creation,JS,10,258853,0x2b5ae3665ce,45,updateChildren node:internal/modules/cjs/loader:217:24,0x3a6c8fb60c8,~
code-source-info,0x2b5ae3665ce,63,6398,6582,C0O6442C7O6448C15O6463C19O6481C23O6489C26O6489C33O6538C38O6538C44O6581,,
code-creation,JS,10,258933,0x2b5ae3667c6,40, node:internal/util:794:18,0x3a6c8f84148,~
code-source-info,0x2b5ae3667c6,16,22590,22716,C0O22600C10O22636C13O22644C19O22642C25O22666C29O22678C35O22698C39O22711,,
code-creation,JS,10,258996,0x2b5ae3668de,28, node:internal/modules/cjs/loader:117:3,0x3a6c8fb5e98,~
code-source-info,0x2b5ae3668de,63,3589,3680,C0O3596C8O3596C20O3638C27O3680,,
code-creation,JS,10,259100,0x2b5ae366bfe,58,reportModuleToWatchMode node:internal/modules/cjs/loader:228:33,0x3a6c8fb6118,~
code-source-info,0x2b5ae366bfe,63,6737,6865,C0O6753C5O6757C13O6798C19O6811C22O6819C32O6843C41O6844C51O6819C57O6864,,
code-creation,JS,10,259160,0x2b5ae366d4e,13, node:internal/modules/cjs/loader:119:45,0x3a6c8fb5ee8,~
code-source-info,0x2b5ae366d4e,63,3731,3774,C0O3749C3O3745C8O3749C12O3774,,
tick,0x7ff740932c0f,259583,0,0x0,2,0x7ff7404a14f0,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
code-creation,JS,10,259664,0x2b5ae366f3e,245,Module.load node:internal/modules/cjs/loader:1194:33,0x3a6c8fb6d28,~
code-source-info,0x2b5ae366f3e,63,39214,40080,C0O39230C8O39276C16O39230C21O39286C26O39299C32O39286C36O39311C38O39325C42O39340C45O39360C52O39377C55O39382C60O39382C66O39360C71O39351C75O39425C78O39425C83O39504C91O39508C101O39561C106O39572C112O39589C124O39595C129O39589C130O39642C133O39649C140O39660C144O39671C150O39692C151O39704C155O39740C160O39740C164O39854C169O39891C174O39902C186O39943C191O39950C196O39950C203O39964C205O39962C210O40002C215O40011C220O40011C227O40044C232O40053C237O40053C244O40079,,
code-creation,JS,10,259991,0x2b5ae367246,252,Module._nodeModulePaths node:internal/modules/cjs/loader:741:37,0x3a6c8fb6928,~
code-source-info,0x2b5ae
code-creation,JS,10,260235,0x2b5ae3676d6,99,findLongestRegisteredExtension node:internal/modules/cjs/loader:502:40,0x3a6c8fb6758,~
code-source-info,0x2b5ae3676d6,63,15109,15558,C0O15138C5O15143C10O15143C16O15170C18O15195C20O15222C22O15291C36O15244C44O15291C49O15306C51O15325C55O15335C56O15345C61O15354C63O15404C68O15423C74O15463C77O15474C84O15485C89O15507C91O15531C92O15228C96O15542C98O15555,,
code-creation,JS,10,260441,0x2b5ae3678ee,417,basename node:path:753:11,0x3a6c8f9af68,~
code-source-info,0x2b5ae3678ee
code-creation,JS,10,260871,0x2b5ae367ef6,494,Module._extensions..js node:internal/modules/cjs/loader:1389:37,0x3a6c8fb6f30,~
code-source-info,0x2b5ae367ef
code-creation,JS,10,261184,0x2b5ae36838e,472,readFileSync node:fs:446:22,0x3a6c8faba58,~
code-source-info,0x2b5ae36838e
code-creation,JS,10,261591,0x2b5ae3688de,30,isEncoding node:buffer:569:40,0x3a6c8f8f998,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetBuffer\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeGetByteOffset\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  TypedArrayPrototypeSlice\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  isAscii: bindingIsAscii\x2C\x0d\n  isUtf8: bindingIsUtf8\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x2C\x0d\n  defineLazyProperties\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isTypedArray\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x2C\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = { __proto__: null };\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0 || sourceStart > source.length)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C `>= 0 && <= ${source.length}`\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x2C\x0d\n  );\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates the Buffer as a copy of the underlying ArrayBuffer of the view\x0d\n * rather than the contents of the view.\x0d\n * @param {TypedArray} view\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @returns {Buffer}\x0d\n */\x0d\nBuffer.copyBytesFrom = function copyBytesFrom(view\x2C offset\x2C length) {\x0d\n  if (!isTypedArray(view)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('view'\x2C [ 'TypedArray' ]\x2C view);\x0d\n  }\x0d\n\x0d\n  const viewLength = TypedArrayPrototypeGetLength(view);\x0d\n  if (viewLength === 0) {\x0d\n    return Buffer.alloc(0);\x0d\n  }\x0d\n\x0d\n  if (offset !== undefined || length !== undefined) {\x0d\n    if (offset !== undefined) {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n      if (offset >= viewLength) return Buffer.alloc(0);\x0d\n    } else {\x0d\n      offset = 0;\x0d\n    }\x0d\n    let end;\x0d\n    if (length !== undefined) {\x0d\n      validateInteger(length\x2C 'length'\x2C 0);\x0d\n      end = offset + length;\x0d\n    } else {\x0d\n      end = viewLength;\x0d\n    }\x0d\n\x0d\n    view = TypedArrayPrototypeSlice(view\x2C offset\x2C end);\x0d\n  }\x0d\n\x0d\n  return fromArrayLike(new Uint8Array(\x0d\n    TypedArrayPrototypeGetBuffer(view)\x2C\x0d\n    TypedArrayPrototypeGetByteOffset(view)\x2C\x0d\n    TypedArrayPrototypeGetByteLength(view)));\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  if (len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (encoding) {\x0d\n    const ops = getEncodingOps(encoding);\x0d\n    if (ops) {\x0d\n      return ops.byteLength(string);\x0d\n    }\x0d\n  }\x0d\n  return byteLengthUtf8(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x2C\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = { __proto__: null };\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x2C\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x2C\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\x0d\nconst kForgivingBase64AllowedChars = [\x0d\n  // ASCII whitespace\x0d\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\x0d\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\x0d\n\x0d\n  // Uppercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\x0d\n\x0d\n  // Lowercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\x0d\n\x0d\n  // Decimal digits\x0d\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\x0d\n\x0d\n  0x2B\x2C // +\x0d\n  0x2F\x2C // /\x0d\n  0x3D\x2C // =\x0d\n];\x0d\nconst kEqualSignIndex = ArrayPrototypeIndexOf(kForgivingBase64AllowedChars\x2C\x0d\n                                              0x3D);\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n\x0d\n  input = `${input}`;\x0d\n  let nonAsciiWhitespaceCharCount = 0;\x0d\n  let equalCharCount = 0;\x0d\n\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    const index = ArrayPrototypeIndexOf(\x0d\n      kForgivingBase64AllowedChars\x2C\x0d\n      StringPrototypeCharCodeAt(input\x2C n));\x0d\n\x0d\n    if (index > 4) {\x0d\n      // The first 5 elements of `kForgivingBase64AllowedChars` are\x0d\n      // ASCII whitespace char codes.\x0d\n      nonAsciiWhitespaceCharCount++;\x0d\n\x0d\n      if (index === kEqualSignIndex) {\x0d\n        equalCharCount++;\x0d\n      } else if (equalCharCount) {\x0d\n        // The `=` char is only allowed at the end.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n\x0d\n      if (equalCharCount > 2) {\x0d\n        // Only one more `=` is permitted after the first equal sign.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n    } else if (index === -1) {\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let reminder = nonAsciiWhitespaceCharCount % 4;\x0d\n\x0d\n  // See #2\x2C #3\x2C #4 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (!reminder) {\x0d\n    // Remove all trailing `=` characters and get the new reminder.\x0d\n    reminder = (nonAsciiWhitespaceCharCount - equalCharCount) % 4;\x0d\n  } else if (equalCharCount) {\x0d\n    // `=` should not in the input if there's a reminder.\x0d\n    throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  // See #3 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (reminder === 1) {\x0d\n    throw lazyDOMException(\x0d\n      'The string to be decoded is not correctly encoded.'\x2C\x0d\n      'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nfunction isUtf8(input) {\x0d\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\x0d\n    return bindingIsUtf8(input);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['TypedArray'\x2C 'Buffer']\x2C input);\x0d\n}\x0d\n\x0d\nfunction isAscii(input) {\x0d\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\x0d\n    return bindingIsAscii(input);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray']\x2C input);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  isUtf8\x2C\x0d\n  isAscii\x2C\x0d\n\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) {\x0d\n      validateNumber(val\x2C 'INSPECT_MAX_BYTES'\x2C 0);\x0d\n      INSPECT_MAX_BYTES = val;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/blob'\x2C\x0d\n  ['Blob'\x2C 'resolveObjectURL']\x2C\x0d\n);\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/file'\x2C\x0d\n  ['File']\x2C\x0d\n);\x0d\n
code-source-info,0x2b5ae3688de,24,16508,16643,C0O16524C6O16572C12O16579C20O16598C23O16598C28O16626C29O16640,,
code-creation,JS,10,265066,0x2b5ae36b626,30,normalizeEncoding node:internal/util:212:27,0x3a6c8f824f0,~
code-source-info,0x2b5ae36b626,16,5852,5960,C0O5863C7O5886C14O5904C19O5917C21O5931C22O5935C25O5942C29O5957,,
code-creation,JS,10,265136,0x2b5ae36b70e,9,isInt32 node:internal/validators:43:17,0x2b98313edf8,~
code-source-info,0x2b5ae36b70e,15,893,938,C0O906C2O930C5O919C8O935,,
code-creation,JS,10,265209,0x2b5ae36b7fe,42, node:internal/fs/utils:727:42,0x3a6c8fb3768,~
code-source-info,0x2b5ae36b7fe,60,20622,20784,C14O20678C19O20678C24O20713C29O20713C34O20746C37O20753C41O20781,,
code-creation,JS,10,265316,0x2b5ae36b93e,106,possiblyTransformPath node:internal/fs/utils:715:31,0x3a6c8fb3718,~
code-source-info,0x2b5ae36b93e,60,20286,20577,C0O20298C5O20313C10O20313C16O20333C22O20372C27O20379C31O20397C32O20410C39O20417C42O20417C47O20410C51O20443C56O20448C62O20470C67O20477C73O20500C80O20518C85O20530C88O20530C93O20518C98O20507C102O20553C103O20562C105O20574,,
code-creation,JS,10,265530,0x2b5ae36bd7e,515,stringToFlags node:internal/fs/utils:584:23,0x3a6c8fb3538,~
code-source-info,0x2b5ae36bd7e
code-creation,JS,10,266065,0x2b5ae36c2ee,463,Module._compile node:internal/modules/cjs/loader:1330:37,0x3a6c8fb6ea0,~
code-source-info,0x2b5ae36c2ee
code-creation,JS,10,266344,0x2b5ae36c976,364,wrapSafe node:internal/modules/cjs/loader:1257:18,0x3a6c8fb6e20,~
code-source-info,0x2b5ae36c976,63,41295,43936,C0O41295C14O41378C26O41392C31O41378C36O41668C44O41704C49O41711C54O41711C60O41746C89O41746C95O42291C101O42314C115O42384C126O42314C131O42413C145O42420C150O42464C151O42490C159O42582C196O42582C202O43316C206O43349C224O43390C229O43412C234O43413C240O43431C245O43439C253O43439C258O43562C264O43585C278O43655C289O43585C294O43698C298O43707C310O43732C315O43744C322O43755C327O43814C335O43814C340O43795C345O43866C356O43866C361O43918C363O43918,,
code-creation,JS,10,266504,0x2b5ae36cc9e,118,internalCompileFunction node:internal/vm:73:33,0x3a6c8f9b820,~
code-source-info,0x2b5ae36cc9e,36,2249,3134,C0O2442C35O2442C41O2657C45O2694C50O2731C54O2722C58O2772C64O2798C69O2827C73O2818C77O2867C85O2915C90O2952C94O2943C98O2982C102O3032C105O3071C110O3032C115O3117C117O3131,,
code-creation,Eval,10,266672,0x2b5ae36d0a6,5, C:\\Users\\Manases\\Desktop\\debugging-and-troubleshooting\\index5.js:1:1,0x2b5ae36cf50,~
script-source,83,C:\\Users\\Manases\\Desktop\\debugging-and-troubleshooting\\index5.js,"use strict";\nfunction findPrimeNumbers(count\x2C startingValue = 0) {\n    if (count <= 0)\n        return [];\n    const primeNumbers = [];\n    let currentValue = startingValue;\n    while (primeNumbers.length < count) {\n        if (isPrime(currentValue)) {\n            primeNumbers.push(currentValue);\n        }\n        currentValue += 1;\n    }\n    return primeNumbers;\n}\nfunction isPrime(number) {\n    let result = true;\n    for (let j = 2; j <= Math.sqrt(number); j++) {\n        if (number === 0 || number === 1)\n            result = false;\n        if (number % j === 0) {\n            //console.log(`${number}:${result}`);\n            result = false;\n        }\n    }\n    return result;\n}\nfunction printPrimeNumbers(numbers) {\n    //console.log("Prime Numbers:");\n    numbers.forEach((number) => {\n        //console.log(number);\n    });\n}\nconst primeNumbers = findPrimeNumbers(20000\x2C 0);\nprintPrimeNumbers(primeNumbers);\n/*\n-- Perfilador de Node\n\nnpx tsc\nnode --prof index5.js\necho >> output.txt\nnode --prof-process [FileNameJustCreated.log] > output.txt\n\nWINDOWS ONLY\n*/ \n//# sourceMappingURL=index5.js.map
code-source-info,0x2b5ae36d0a6,83,0,1104,C0O0C4O1104,,
code-creation,JS,10,266780,0x2b5ae36d22e,40, C:\\Users\\Manases\\Desktop\\debugging-and-troubleshooting\\index5.js:1:1,0x2b5ae36d020,~
code-source-info,0x2b5ae36d22e,83,0,1104,C0O0C21O857C28O857C34O885C39O1103,,
code-creation,JS,10,266891,0x2b5ae36d66e,52,registerImportModuleDynamically node:internal/vm:63:41,0x3a6c8f9b7d0,~
code-source-info,0x2b5ae36d66e,36,1880,2213,C0O1961C6O1961C11O1929C16O2022C22O2022C27O2003C32O2079C37O2150C45O2064C51O2212,,
code-creation,JS,10,267033,0x2b5ae36d83e,19,importModuleDynamicallyWrap node:internal/vm/module:429:37,0x3a6c8fba910,~
script-source,68,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafePromiseAllReturnVoid\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  getConstructorOf\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINK_FAILURE\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    let registry = { __proto__: null };\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n      registry = {\x0d\n        __proto__: null\x2C\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      };\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    // This will take precedence over the referrer as the object being\x0d\n    // passed into the callbacks.\x0d\n    registry.callbackReferrer = this;\x0d\n    const { registerModule } = require('internal/modules/esm/utils');\x0d\n    registerModule(this[kWrap]\x2C registry);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = kEmptyObject) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x2C\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = { __proto__: { constructor } };\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x2C\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = kEmptyObject) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      validateFunction(initializeImportMeta\x2C 'options.initializeImportMeta');\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C 'options.importModuleDynamically');\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined) {\x0d\n      validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C attributes) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { attributes\x2C assert: attributes });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await SafePromiseAllReturnVoid(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n};\x0d\n
code-source-info,0x2b5ae36d83e,68,12109,12567,C0O12109C13O12179C18O12564,,
code-creation,JS,10,268080,0x2b5ae36e7fe,63,registerModule node:internal/modules/esm/utils:135:24,0x3a6c8fb8658,~
code-source-info,0x2b5ae36e7fe,66,4154,4687,C0O4197C2O4206C4O4205C8O4238C10O4255C12O4251C19O4307C21O4303C26O4546C27O4553C28O4600C41O4626C45O4643C50O4660C55O4660C62O4686,,
code-creation,JS,10,268263,0x2b5ae36eb7e,352,maybeCacheSourceMap node:internal/source_map/source_map_cache:104:29,0x3a6c8f9c700,~
code-source-info,0x2b5ae36eb7e,38,3383,5189,C0O3497C3O3497C7O3524C10O3538C15O3542C23O3562C25O3582C26O3589C30O3637C36O3637C41O3612C46O3690C55O3688C65O3826C75O3826C79O3843C80O3850C81O3861C85O3900C88O3915C94O4015C100O4060C101O4067C102O4078C106O4114C109O4126C115O4188C118O4188C124O4240C132O4271C136O4301C141O4301C145O4323C150O4328C157O4380C164O4410C174O4439C180O4452C186O4464C190O4324C198O4494C202O4538C210O4584C220O4613C226O4626C232O4638C239O4662C244O4686C249O4686C255O4713C259O4737C264O4761C269O4761C277O4941C285O4987C295O5016C301O5029C307O5041C314O5065C319O5083C324O5083C330O5110C334O5134C339O5152C344O5152C351O5188,,
code-creation,JS,10,268430,0x2b5ae36ee76,5,getSourceMapsEnabled node:internal/source_map/source_map_cache:48:30,0x3a6c8f9c5c0,~
code-source-info,0x2b5ae36ee76,38,1672,1708,C0O1680C4O1705,,
code-creation,JS,10,268695,0x2b5ae36f1d6,215,makeRequireFunction node:internal/modules/helpers:127:29,0x3a6c8fb7ae0,~
code-source-info,0x2b5ae36f1d6,64,3916,6504,C0O3916C22O3977C27O3977C30O3977C32O3994C37O4002C46O4037C64O4043C69O4037C70O4139C72O4151C92O4184C97O4188C108O4204C112O4184C114O4232C119O4232C122O4232C124O4265C130O4274C136O4303C145O5487C150O5989C152O6005C156O6267C158O6281C162O6295C177O6335C185O6295C190O6404C193O6432C197O6423C201O6450C204O6473C208O6464C212O6486C214O6501,,
code-creation,JS,10,268884,0x2b5ae36f486,35,lazyModule node:internal/modules/helpers:110:20,0x3a6c8fb7a90,~
code-source-info,0x2b5ae36f486,64,3188,3285,C0O3196C12O3217C17O3255C24O3204C30O3267C34O3282,,
code-creation,JS,10,269104,0x2b5ae36f83e,74,findPrimeNumbers C:\\Users\\Manases\\Desktop\\debugging-and-troubleshooting\\index5.js:2:26,0x2b5ae36d0d8,~
code-source-info,0x2b5ae36f83e,83,39,367,C13O72C14O82C19O96C21O106C22O132C25O159C30O198C37O205C42O224C45O228C51O278C56O278C61O316C67O178C71O345C73O365,,
code-creation,JS,10,269218,0x2b5ae36f98e,65,isPrime C:\\Users\\Manases\\Desktop\\debugging-and-troubleshooting\\index5.js:15:17,0x2b5ae36d128,~
code-source-info,0x2b5ae36f98e,83,384,685,C0O412C2O435C5O443C9O448C14O448C19O440C24O477C25O488C32O504C37O523C39O547C41O558C46O562C51O633C53O463C58O422C62O669C64O683,,
code-creation,JS,11,270011,0x7ff6c0b476c0,508,isPrime C:\\Users\\Manases\\Desktop\\debugging-and-troubleshooting\\index5.js:15:17,0x2b5ae36d128,^
code-source-info,0x7ff6c0b476c0,83,384,685,,,
code-creation,JS,11,270102,0x7ff6c0b47900,272,validateString node:internal/validators:160:24,0x2b98313f250,^
code-source-info,0x7ff6c0b47900,15,4279,4391,,,
code-creation,JS,11,270164,0x7ff6c0b47a40,2032,Module._nodeModulePaths node:internal/modules/cjs/loader:741:37,0x3a6c8fb6928,^
code-source-info,0x7ff6c0b47a40,63,23234,24837,,,
code-creation,JS,11,270201,0x7ff6c0b48240,564,findPrimeNumbers C:\\Users\\Manases\\Desktop\\debugging-and-troubleshooting\\index5.js:2:26,0x2b5ae36d0d8,^
code-source-info,0x7ff6c0b48240,83,39,367,,,
code-creation,JS,13,272679,0x7ff6c0b484c0,820,isPrime C:\\Users\\Manases\\Desktop\\debugging-and-troubleshooting\\index5.js:15:17,0x2b5ae36d128,*
code-source-info,0x7ff6c0b484c0,83,384,685,C0O384C39O448C119O440C143O683C183O488C200O504C238O558C261O562C272O422C326O440C341O488C350O504C370O558C418O562C437O463C450O422C465O683C497O384C543O558C564O422C645O558C697O422,,
tick,0x7ff6c0b4860f,275374,0,0x0,0,0x7ff6c0b48376,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
code-creation,JS,13,277013,0x7ff6c0b48840,1424,findPrimeNumbers C:\\Users\\Manases\\Desktop\\debugging-and-troubleshooting\\index5.js:2:26,0x2b5ae36d0d8,*
code-source-info,0x7ff6c0b48840,83,39,367,C0O39C57O198C64O205C128O198C158O205C181O316C195O228C215O448I0C278O440I0C302O488I0C319O504I0C362O558I0C379O562I0C399O422I0C458O440I0C476O488I0C485O504I0C497O558I0C572O562I0C592O463I0C609O422I0C624O228C653O278C709O316C726O178C741O365C770O39C816O558I0C836O422I0C975O558I0C1043O422I0C1179O278C1281O178,F0O228,S0x2b5ae36d128
tick,0x7ff6c0b48a5d,291420,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,307393,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a16,322465,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a0a,338466,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,353335,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,368330,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a25,384283,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a97,400256,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a9b,415282,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,431401,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,447237,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
new,MemoryChunk,0x3eba7380000,262144
new,MemoryChunk,0x199a9b40000,262144
new,MemoryChunk,0x2b1ebcc0000,262144
new,MemoryChunk,0x2f133e80000,262144
tick,0x7ff6c0b48a65,462260,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a51,478333,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,494282,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,509477,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,525298,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a1c,540304,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a51,556931,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,575929,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,587203,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,603215,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a25,619181,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48aa1,635523,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
new,MemoryChunk,0x2fdc5380000,188416
tick,0x7ff6c0b48a6f,651141,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a72,667115,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a8d,683144,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,698106,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,713147,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,728118,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,743453,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,759286,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a7c,775716,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,790400,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,806052,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,820154,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a6f,835572,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a12,851080,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
tick,0x7ff6c0b48a1c,866132,0,0x0,0,0x2b5ae36d24a,0x2b5ae36c495,0x2b5ae3680dc,0x2b5ae366fce,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
code-creation,JS,10,872913,0x2b5ae370a16,17,printPrimeNumbers C:\\Users\\Manases\\Desktop\\debugging-and-troubleshooting\\index5.js:27:27,0x2b5ae36d178,~
code-source-info,0x2b5ae370a16,83,712,835,C0O773C10O773C16O834,,
code-creation,JS,10,873016,0x2b5ae370b16,2, C:\\Users\\Manases\\Desktop\\debugging-and-troubleshooting\\index5.js:29:21,0x2b5ae370970,~
code-source-info,0x2b5ae370b16,83,781,831,C1O830,,
code-creation,JS,10,873662,0x2b5ae370c5e,16, node:internal/modules/cjs/loader:122:3,0x3a6c8fb5f38,~
code-source-info,0x2b5ae370c5e,63,3818,3872,C0O3862C6O3824C11O3862C15O3872,,
code-creation,Eval,10,874016,0x2b5ae37102e,5, node:internal/process/esm_loader:1:1,0x2b5ae370e58,~
script-source,84,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  SafePromiseAllReturnVoid\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { createModuleLoader } = require('internal/modules/esm/loader');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { kEmptyObject\x2C getCWDURL } = require('internal/util');\x0d\n\x0d\nlet esmLoader;\x0d\n\x0d\nmodule.exports = {\x0d\n  get esmLoader() {\x0d\n    return esmLoader ??= createModuleLoader(true);\x0d\n  }\x2C\x0d\n  async loadESM(callback) {\x0d\n    esmLoader ??= createModuleLoader(true);\x0d\n    try {\x0d\n      const userImports = getOptionValue('--import');\x0d\n      if (userImports.length > 0) {\x0d\n        const parentURL = getCWDURL().href;\x0d\n        await SafePromiseAllReturnVoid(userImports\x2C (specifier) => esmLoader.import(\x0d\n          specifier\x2C\x0d\n          parentURL\x2C\x0d\n          kEmptyObject\x2C\x0d\n        ));\x0d\n      } else {\x0d\n        esmLoader.forceLoadHooks();\x0d\n      }\x0d\n      await callback(esmLoader);\x0d\n    } catch (err) {\x0d\n      if (hasUncaughtExceptionCaptureCallback()) {\x0d\n        process._fatalException(err);\x0d\n        return;\x0d\n      }\x0d\n      internalBinding('errors').triggerUncaughtException(\x0d\n        err\x2C\x0d\n        true\x2C /* fromPromise */\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x2b5ae37102e,84,0,1236,C0O0C4O1236,,
code-creation,JS,10,874226,0x2b5ae371226,146, node:internal/process/esm_loader:1:1,0x2b5ae370fa8,~
code-source-info,0x2b5ae371226,84,0,1236,C0O0C34O28C40O106C43O106C48O83C54O174C57O174C62O155C68O257C71O257C76O215C82O333C85O333C90O305C96O319C102O366C103O366C105O380C110O481C140O395C145O1235,,
code-creation,Eval,10,875271,0x2b5ae3722fe,5, node:internal/modules/esm/loader:1:1,0x2b5ae371ea0,~
script-source,85,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  encodeURIComponent\x2C\x0d\n  hardenRegExp\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_REQUIRE_ESM\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { pathToFileURL\x2C isURL } = require('internal/url');\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  getDefaultConditions\x2C\x0d\n} = require('internal/modules/esm/utils');\x0d\nlet defaultResolve\x2C defaultLoad\x2C defaultLoadSync\x2C importMetaInitializer;\x0d\n\x0d\n/**\x0d\n * Lazy loads the module_map module and returns a new instance of ResolveCache.\x0d\n * @returns {import('./module_map.js').ResolveCache')}\x0d\n */\x0d\nfunction newResolveCache() {\x0d\n  const { ResolveCache } = require('internal/modules/esm/module_map');\x0d\n  return new ResolveCache();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Generate a load cache (to store the final result of a load-chain for a particular module).\x0d\n * @returns {import('./module_map.js').LoadCache')}\x0d\n */\x0d\nfunction newLoadCache() {\x0d\n  const { LoadCache } = require('internal/modules/esm/module_map');\x0d\n  return new LoadCache();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Lazy-load translators to avoid potentially unnecessary work at startup (ex if ESM is not used).\x0d\n * @returns {import('./translators.js').Translators}\x0d\n */\x0d\nfunction getTranslators() {\x0d\n  const { translators } = require('internal/modules/esm/translators');\x0d\n  return translators;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @type {HooksProxy}\x0d\n * Multiple loader instances exist for various\x2C specific reasons (see code comments at site).\x0d\n * In order to maintain consistency\x2C we use a single worker (sandbox)\x2C which must sit apart of an\x0d\n * individual loader instance.\x0d\n */\x0d\nlet hooksProxy;\x0d\n\x0d\n/**\x0d\n * @typedef {Record<string\x2C any>} ModuleExports\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\x0d\n */\x0d\n\x0d\n/**\x0d\n * This class covers the base machinery of module loading. To add custom\x0d\n * behavior you can pass a customizations object and this object will be\x0d\n * used to do the loading/resolving/registration process.\x0d\n */\x0d\nclass ModuleLoader {\x0d\n  /**\x0d\n   * The conditions for resolving packages if `--conditions` is not used.\x0d\n   */\x0d\n  #defaultConditions = getDefaultConditions();\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of resolved specifiers\x0d\n   */\x0d\n  #resolveCache = newResolveCache();\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  loadCache = newLoadCache();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = getTranslators();\x0d\n\x0d\n  /**\x0d\n   * Truthy to allow the use of `import.meta.resolve`. This is needed\x0d\n   * currently because the `Hooks` class does not have `resolveSync`\x0d\n   * implemented and `import.meta.resolve` requires it.\x0d\n   */\x0d\n  allowImportMetaResolve;\x0d\n\x0d\n  /**\x0d\n   * Customizations to pass requests to.\x0d\n   *\x0d\n   * Note that this value _MUST_ be set with `setCustomizations`\x0d\n   * because it needs to copy `customizations.allowImportMetaResolve`\x0d\n   *  to this property and failure to do so will cause undefined\x0d\n   * behavior when invoking `import.meta.resolve`.\x0d\n   * @see {ModuleLoader.setCustomizations}\x0d\n   */\x0d\n  #customizations;\x0d\n\x0d\n  constructor(customizations) {\x0d\n    if (getOptionValue('--experimental-network-imports')) {\x0d\n      emitExperimentalWarning('Network Imports');\x0d\n    }\x0d\n    this.setCustomizations(customizations);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Change the currently activate customizations for this module\x0d\n   * loader to be the provided `customizations`.\x0d\n   *\x0d\n   * If present\x2C this class customizes its core functionality to the\x0d\n   * `customizations` object\x2C including registration\x2C loading\x2C and resolving.\x0d\n   * There are some responsibilities that this class _always_ takes\x0d\n   * care of\x2C like validating outputs\x2C so that the customizations object\x0d\n   * does not have to do so.\x0d\n   *\x0d\n   * The customizations object has the shape:\x0d\n   *\x0d\n   * ```ts\x0d\n   * interface LoadResult {\x0d\n   *   format: ModuleFormat;\x0d\n   *   source: ModuleSource;\x0d\n   * }\x0d\n   *\x0d\n   * interface ResolveResult {\x0d\n   *   format: string;\x0d\n   *   url: URL['href'];\x0d\n   * }\x0d\n   *\x0d\n   * interface Customizations {\x0d\n   *   allowImportMetaResolve: boolean;\x0d\n   *   load(url: string\x2C context: object): Promise<LoadResult>\x0d\n   *   resolve(\x0d\n   *     originalSpecifier:\x0d\n   *     string\x2C parentURL: string\x2C\x0d\n   *     importAttributes: Record<string\x2C string>\x0d\n   *   ): Promise<ResolveResult>\x0d\n   *   resolveSync(\x0d\n   *     originalSpecifier:\x0d\n   *     string\x2C parentURL: string\x2C\x0d\n   *     importAttributes: Record<string\x2C string>\x0d\n   *   ) ResolveResult;\x0d\n   *   register(specifier: string\x2C parentURL: string): any;\x0d\n   *   forceLoadHooks(): void;\x0d\n   * }\x0d\n   * ```\x0d\n   *\x0d\n   * Note that this class _also_ implements the `Customizations`\x0d\n   * interface\x2C as does `CustomizedModuleLoader` and `Hooks`.\x0d\n   *\x0d\n   * Calling this function alters how modules are loaded and should be\x0d\n   * invoked with care.\x0d\n   * @param {object} customizations\x0d\n   */\x0d\n  setCustomizations(customizations) {\x0d\n    this.#customizations = customizations;\x0d\n    if (customizations) {\x0d\n      this.allowImportMetaResolve = customizations.allowImportMetaResolve;\x0d\n    } else {\x0d\n      this.allowImportMetaResolve = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x2C\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap } = internalBinding('module_wrap');\x0d\n      const { registerModule } = require('internal/modules/esm/utils');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      registerModule(module\x2C {\x0d\n        __proto__: null\x2C\x0d\n        initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAttributes) => {\x0d\n          return this.import(specifier\x2C url\x2C importAttributes);\x0d\n        }\x2C\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.loadCache.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      __proto__: null\x2C\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const resolveResult = await this.resolve(specifier\x2C parentURL\x2C importAttributes);\x0d\n    return this.getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  getModuleJobSync(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const resolveResult = this.resolveSync(specifier\x2C parentURL\x2C importAttributes);\x0d\n    return this.getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes\x2C true);\x0d\n  }\x0d\n\x0d\n  getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes\x2C sync) {\x0d\n    const { url\x2C format } = resolveResult;\x0d\n    const resolvedImportAttributes = resolveResult.importAttributes ?? importAttributes;\x0d\n    let job = this.loadCache.get(url\x2C resolvedImportAttributes.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.loadCache.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C resolvedImportAttributes\x2C parentURL\x2C format\x2C sync);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAttributes\x2C parentURL\x2C format\x2C sync) {\x0d\n    const callTranslator = ({ format: finalFormat\x2C responseURL\x2C source }\x2C isMain) => {\x0d\n      const translator = getTranslators().get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\x0d\n    };\x0d\n    const context = { format\x2C importAttributes };\x0d\n\x0d\n    const moduleProvider = sync ?\x0d\n      (url\x2C isMain) => callTranslator(this.loadSync(url\x2C context)\x2C isMain) :\x0d\n      async (url\x2C isMain) => callTranslator(await this.load(url\x2C context)\x2C isMain);\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\x0d\n      process.send({ 'watch:import': [url] });\x0d\n    }\x0d\n\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAttributes\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x2C\x0d\n      sync\x2C\x0d\n    );\x0d\n\x0d\n    this.loadCache.set(url\x2C importAttributes.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Use directly with caution.\x0d\n   * @param {string} specifier The first parameter of an `import()` expression.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleExports>}\x0d\n   */\x0d\n  async import(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const moduleJob = await this.getModuleJob(specifier\x2C parentURL\x2C importAttributes);\x0d\n    const { module } = await moduleJob.run();\x0d\n    return module.getNamespace();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @see {@link CustomizedModuleLoader.register}\x0d\n   */\x0d\n  register(specifier\x2C parentURL\x2C data\x2C transferList) {\x0d\n    if (!this.#customizations) {\x0d\n      // `CustomizedModuleLoader` is defined at the bottom of this file and\x0d\n      // available well before this line is ever invoked. This is here in\x0d\n      // order to preserve the git diff instead of moving the class.\x0d\n      // eslint-disable-next-line no-use-before-define\x0d\n      this.setCustomizations(new CustomizedModuleLoader());\x0d\n    }\x0d\n    return this.#customizations.register(`${specifier}`\x2C `${parentURL}`\x2C data\x2C transferList);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAttributes} importAttributes Attributes from the import\x0d\n   *                                            statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  resolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.resolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    }\x0d\n    const requestKey = this.#resolveCache.serializeKey(originalSpecifier\x2C importAttributes);\x0d\n    const cachedResult = this.#resolveCache.get(requestKey\x2C parentURL);\x0d\n    if (cachedResult != null) {\x0d\n      return cachedResult;\x0d\n    }\x0d\n    const result = this.defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    this.#resolveCache.set(requestKey\x2C parentURL\x2C result);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Just like `resolve` except synchronous. This is here specifically to support\x0d\n   * `import.meta.resolve` which must happen synchronously.\x0d\n   */\x0d\n  resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    }\x0d\n    return this.defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Our `defaultResolve` is synchronous and can be used in both\x0d\n   * `resolve` and `resolveSync`. This function is here just to avoid\x0d\n   * repeating the same code block twice in those functions.\x0d\n   */\x0d\n  defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    defaultResolve ??= require('internal/modules/esm/resolve').defaultResolve;\x0d\n\x0d\n    const context = {\x0d\n      __proto__: null\x2C\x0d\n      conditions: this.#defaultConditions\x2C\x0d\n      importAttributes\x2C\x0d\n      parentURL\x2C\x0d\n    };\x0d\n\x0d\n    return defaultResolve(originalSpecifier\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} [context] Metadata about the module\x0d\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\x0d\n   */\x0d\n  async load(url\x2C context) {\x0d\n    defaultLoad ??= require('internal/modules/esm/load').defaultLoad;\x0d\n    const result = this.#customizations ?\x0d\n      await this.#customizations.load(url\x2C context) :\x0d\n      await defaultLoad(url\x2C context);\x0d\n    this.validateLoadResult(url\x2C result?.format);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  loadSync(url\x2C context) {\x0d\n    defaultLoadSync ??= require('internal/modules/esm/load').defaultLoadSync;\x0d\n\x0d\n    let result = this.#customizations ?\x0d\n      this.#customizations.loadSync(url\x2C context) :\x0d\n      defaultLoadSync(url\x2C context);\x0d\n    let format = result?.format;\x0d\n    if (format === 'module') {\x0d\n      throw new ERR_REQUIRE_ESM(url\x2C true);\x0d\n    }\x0d\n    if (format === 'commonjs') {\x0d\n      format = 'require-commonjs';\x0d\n      result = { __proto__: result\x2C format };\x0d\n    }\x0d\n    this.validateLoadResult(url\x2C format);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  validateLoadResult(url\x2C format) {\x0d\n    if (format == null) {\x0d\n      require('internal/modules/esm/load').throwUnknownModuleFormat(url\x2C format);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.importMetaInitialize(meta\x2C context\x2C this);\x0d\n    }\x0d\n    importMetaInitializer ??= require('internal/modules/esm/initialize_import_meta').initializeImportMeta;\x0d\n    meta = importMetaInitializer(meta\x2C context\x2C this);\x0d\n    return meta;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * No-op when no hooks have been supplied.\x0d\n   */\x0d\n  forceLoadHooks() {\x0d\n    this.#customizations?.forceLoadHooks();\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleLoader.prototype\x2C null);\x0d\n\x0d\nclass CustomizedModuleLoader {\x0d\n\x0d\n  allowImportMetaResolve = true;\x0d\n\x0d\n  /**\x0d\n   * Instantiate a module loader that uses user-provided custom loader hooks.\x0d\n   */\x0d\n  constructor() {\x0d\n    getHooksProxy();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Register some loader specifier.\x0d\n   * @param {string} originalSpecifier The specified URL path of the loader to\x0d\n   *                                   be registered.\x0d\n   * @param {string} parentURL The parent URL from where the loader will be\x0d\n   *                           registered if using it package name as specifier\x0d\n   * @param {any} [data] Arbitrary data to be passed from the custom loader\x0d\n   * (user-land) to the worker.\x0d\n   * @param {any[]} [transferList] Objects in `data` that are changing ownership\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  register(originalSpecifier\x2C parentURL\x2C data\x2C transferList) {\x0d\n    return hooksProxy.makeSyncRequest('register'\x2C transferList\x2C originalSpecifier\x2C parentURL\x2C data);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAttributes} importAttributes Attributes from the import\x0d\n   *                                            statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  resolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    return hooksProxy.makeAsyncRequest('resolve'\x2C undefined\x2C originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    // This happens only as a result of `import.meta.resolve` calls\x2C which must be sync per spec.\x0d\n    return hooksProxy.makeSyncRequest('resolve'\x2C undefined\x2C originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} [context] Metadata about the module\x0d\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\x0d\n   */\x0d\n  load(url\x2C context) {\x0d\n    return hooksProxy.makeAsyncRequest('load'\x2C undefined\x2C url\x2C context);\x0d\n  }\x0d\n  loadSync(url\x2C context) {\x0d\n    return hooksProxy.makeSyncRequest('load'\x2C undefined\x2C url\x2C context);\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context\x2C loader) {\x0d\n    hooksProxy.importMetaInitialize(meta\x2C context\x2C loader);\x0d\n  }\x0d\n\x0d\n  forceLoadHooks() {\x0d\n    hooksProxy.waitForWorker();\x0d\n  }\x0d\n}\x0d\n\x0d\nlet emittedLoaderFlagWarning = false;\x0d\n/**\x0d\n * A loader instance is used as the main entry point for loading ES modules. Currently\x2C this is a singleton; there is\x0d\n * only one used for loading the main module and everything in its dependency graph\x2C though separate instances of this\x0d\n * class might be instantiated as part of bootstrap for other purposes.\x0d\n * @param {boolean} useCustomLoadersIfPresent If the user has provided loaders via the --loader flag\x2C use them.\x0d\n * @returns {ModuleLoader}\x0d\n */\x0d\nfunction createModuleLoader(useCustomLoadersIfPresent = true) {\x0d\n  let customizations = null;\x0d\n  if (useCustomLoadersIfPresent &&\x0d\n      // Don't spawn a new worker if we're already in a worker thread created by instantiating CustomizedModuleLoader;\x0d\n      // doing so would cause an infinite loop.\x0d\n      !require('internal/modules/esm/utils').isLoaderWorker()) {\x0d\n    const userLoaderPaths = getOptionValue('--experimental-loader');\x0d\n    if (userLoaderPaths.length > 0) {\x0d\n      if (!emittedLoaderFlagWarning) {\x0d\n        const readableURIEncode = (string) => ArrayPrototypeReduce(\x0d\n          [\x0d\n            [/'/g\x2C '%27']\x2C // We need to URL-encode the single quote as it's the delimiter for the --import flag.\x0d\n            [/%22/g\x2C '"']\x2C // We can decode the double quotes to improve readability.\x0d\n            [/%2F/ig\x2C '/']\x2C // We can decode the slashes to improve readability.\x0d\n          ]\x2C\x0d\n          (str\x2C { 0: regex\x2C 1: replacement }) => RegExpPrototypeSymbolReplace(hardenRegExp(regex)\x2C str\x2C replacement)\x2C\x0d\n          encodeURIComponent(string));\x0d\n        process.emitWarning(\x0d\n          '`--experimental-loader` may be removed in the future; instead use `register()`:\\n' +\x0d\n          `--import 'data:text/javascript\x2Cimport { register } from "node:module"; import { pathToFileURL } from "node:url"; ${ArrayPrototypeJoin(\x0d\n            ArrayPrototypeMap(userLoaderPaths\x2C (loader) => `register(${readableURIEncode(JSONStringify(loader))}\x2C pathToFileURL("./"))`)\x2C\x0d\n            '; '\x2C\x0d\n          )};'`\x2C\x0d\n          'ExperimentalWarning'\x2C\x0d\n        );\x0d\n        emittedLoaderFlagWarning = true;\x0d\n      }\x0d\n      customizations = new CustomizedModuleLoader();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new ModuleLoader(customizations);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Get the HooksProxy instance. If it is not defined\x2C then create a new one.\x0d\n * @returns {HooksProxy}\x0d\n */\x0d\nfunction getHooksProxy() {\x0d\n  if (!hooksProxy) {\x0d\n    const { HooksProxy } = require('internal/modules/esm/hooks');\x0d\n    hooksProxy = new HooksProxy();\x0d\n  }\x0d\n\x0d\n  return hooksProxy;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Register a single loader programmatically.\x0d\n * @param {string|import('url').URL} specifier\x0d\n * @param {string|import('url').URL} [parentURL] Base to use when resolving `specifier`; optional if\x0d\n * `specifier` is absolute. Same as `options.parentUrl`\x2C just inline\x0d\n * @param {object} [options] Additional options to apply\x2C described below.\x0d\n * @param {string|import('url').URL} [options.parentURL] Base to use when resolving `specifier`\x0d\n * @param {any} [options.data] Arbitrary data passed to the loader's `initialize` hook\x0d\n * @param {any[]} [options.transferList] Objects in `data` that are changing ownership\x0d\n * @returns {void} We want to reserve the return value for potential future extension of the API.\x0d\n * @example\x0d\n * ```js\x0d\n * register('./myLoader.js');\x0d\n * register('ts-node/esm'\x2C { parentURL: import.meta.url });\x0d\n * register('./myLoader.js'\x2C { parentURL: import.meta.url });\x0d\n * register('ts-node/esm'\x2C import.meta.url);\x0d\n * register('./myLoader.js'\x2C import.meta.url);\x0d\n * register(new URL('./myLoader.js'\x2C import.meta.url));\x0d\n * register('./myLoader.js'\x2C {\x0d\n *   parentURL: import.meta.url\x2C\x0d\n *   data: { banana: 'tasty' }\x2C\x0d\n * });\x0d\n * register('./myLoader.js'\x2C {\x0d\n *   parentURL: import.meta.url\x2C\x0d\n *   data: someArrayBuffer\x2C\x0d\n *   transferList: [someArrayBuffer]\x2C\x0d\n * });\x0d\n * ```\x0d\n */\x0d\nfunction register(specifier\x2C parentURL = undefined\x2C options) {\x0d\n  const moduleLoader = require('internal/process/esm_loader').esmLoader;\x0d\n  if (parentURL != null && typeof parentURL === 'object' && !isURL(parentURL)) {\x0d\n    options = parentURL;\x0d\n    parentURL = options.parentURL;\x0d\n  }\x0d\n  moduleLoader.register(\x0d\n    specifier\x2C\x0d\n    parentURL ?? 'data:'\x2C\x0d\n    options?.data\x2C\x0d\n    options?.transferList\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  createModuleLoader\x2C\x0d\n  getHooksProxy\x2C\x0d\n  register\x2C\x0d\n};\x0d\n
code-source-info,0x2b5ae3722fe,85,0,22653,C0O0C4O22653,,
code-creation,JS,10,877592,0x2b5ae37349e,597, node:internal/modules/esm/loader:1:1,0x2b5ae372278,~
code-source-info,0x2b5ae37349e,85,0,22653,C0O0C123O82C129O82C133O136C139O159C145O181C151O206C157O232C163O250C168O275C174O308C180O324C186O347C192O445C198O445C203O471C208O393C214O413C220O507C226O507C231O488C237O570C243O570C248O545C254O560C260O632C266O632C271O604C277O697C283O697C288O670C294O741C295O741C297O757C298O757C300O770C301O770C303O787C304O787C306O1939C307O1939C481O2386C483O15693C486O15727C493O15693C561O15748C563O18357C564O18357C566O22575C573O22597C579O22620C585O22638C591O22590C596O22652,,
code-creation,JS,10,877699,0x2b5ae37381e,7,<instance_members_initializer> node:internal/modules/esm/loader:456:1,0x2b5ae372d18,~
code-source-info,0x2b5ae37381e,85,15748,18322,C0O15809C6O18322,,
code-creation,JS,10,877726,0x2b5ae3738de,95,<instance_members_initializer> node:internal/modules/esm/loader:83:1,0x2b5ae372a60,~
code-source-info,0x2b5ae3738de,85,2386,15691,C3O2520C10O2520C18O2621C25O2621C34O2744C42O2820C47O2820C55O2928C60O2928C67O3055C72O3055C80O3290C88O3680C94O15691,,
code-creation,JS,10,878421,0x2b5ae3756be,29,get esmLoader node:internal/process/esm_loader:17:16,0x2b5ae3710d0,~
code-source-info,0x2b5ae3756be,84,415,476,C0O425C10O446C15O446C22O442C28O471,,
code-creation,JS,10,878946,0x2b5ae375c06,193,createModuleLoader node:internal/modules/esm/loader:530:28,0x2b5ae372420,~
code-source-info,0x2b5ae375c06,85,18855,20542,C10O18916C12O18925C22O19135C27O19172C32O19173C38O19222C46O19222C51O19288C57O19295C62O19309C75O19377C79O19377C81O19890C86O19898C101O20135C108O20168C111O20186C116O20168C125O20135C140O20006C147O19898C153O20386C159O20411C169O20435C174O20452C180O20499C187O20506C192O20539,,
code-creation,JS,10,879188,0x2b5ae3771de,5,isLoaderWorker node:internal/modules/esm/utils:205:24,0x3a6c8fb8798,~
code-source-info,0x2b5ae3771de,66,7112,7146,C0O7120C4O7143,,
code-creation,JS,10,879298,0x2b5ae377316,66,ModuleLoader node:internal/modules/esm/loader:132:14,0x2b5ae372560,~
code-source-info,0x2b5ae377316,85,3713,3900,C5O3713C24O3737C34O3741C40O3800C50O3800C54O3861C59O3861C65O3899,,
code-creation,JS,10,879425,0x2b5ae37751e,21,getDefaultConditions node:internal/modules/esm/utils:41:30,0x3a6c8fb8330,~
code-source-info,0x2b5ae37751e,66,995,1075,C0O1003C7O1010C10O1028C12O1003C16O1047C20O1072,,
code-creation,JS,10,879544,0x2b5ae3777e6,22,newResolveCache node:internal/modules/esm/loader:35:25,0x2b5ae372330,~
code-source-info,0x2b5ae3777e6,85,984,1093,C0O1017C6O1017C11O1000C16O1071C21O1090,,
code-creation,Eval,10,879937,0x2b5ae377d3e,5, node:internal/modules/esm/module_map:1:1,0x2b5ae377a88,~
script-source,86,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n/**\x0d\n * Cache the results of the `resolve` step of the module resolution and loading process.\x0d\n * Future resolutions of the same input (specifier\x2C parent URL and import attributes)\x0d\n * must return the same result if the first attempt was successful\x2C per\x0d\n * https://tc39.es/ecma262/#sec-HostLoadImportedModule.\x0d\n * This cache is *not* used when custom loaders are registered.\x0d\n */\x0d\nclass ResolveCache extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n\x0d\n  /**\x0d\n   * Generates the internal serialized cache key and returns it along the actual cache object.\x0d\n   *\x0d\n   * It is exposed to allow more efficient read and overwrite a cache entry.\x0d\n   * @param {string} specifier\x0d\n   * @param {Record<string\x2Cstring>} importAttributes\x0d\n   * @returns {string}\x0d\n   */\x0d\n  serializeKey(specifier\x2C importAttributes) {\x0d\n    // To serialize the ModuleRequest (specifier + list of import attributes)\x2C\x0d\n    // we need to sort the attributes by key\x2C then stringifying\x2C\x0d\n    // so that different import statements with the same attributes are always treated\x0d\n    // as identical.\x0d\n    const keys = ObjectKeys(importAttributes);\x0d\n\x0d\n    if (keys.length === 0) {\x0d\n      return specifier + '::';\x0d\n    }\x0d\n\x0d\n    return specifier + '::' + ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(\x0d\n        ArrayPrototypeSort(keys)\x2C\x0d\n        (key) => JSONStringify(key) + JSONStringify(importAttributes[key]))\x2C\x0d\n      '\x2C');\x0d\n  }\x0d\n\x0d\n  #getModuleCachedImports(parentURL) {\x0d\n    let internalCache = super.get(parentURL);\x0d\n    if (internalCache == null) {\x0d\n      super.set(parentURL\x2C internalCache = { __proto__: null });\x0d\n    }\x0d\n    return internalCache;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} serializedKey\x0d\n   * @param {string} parentURL\x0d\n   * @returns {import('./loader').ModuleExports | Promise<import('./loader').ModuleExports>}\x0d\n   */\x0d\n  get(serializedKey\x2C parentURL) {\x0d\n    return this.#getModuleCachedImports(parentURL)[serializedKey];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} serializedKey\x0d\n   * @param {string} parentURL\x0d\n   * @param {{ format: string\x2C url: URL['href'] }} result\x0d\n   */\x0d\n  set(serializedKey\x2C parentURL\x2C result) {\x0d\n    this.#getModuleCachedImports(parentURL)[serializedKey] = result;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  has(serializedKey\x2C parentURL) {\x0d\n    return serializedKey in this.#getModuleCachedImports(parentURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Cache the results of the `load` step of the module resolution and loading process.\x0d\n */\x0d\nclass LoadCache extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleLoadMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? { __proto__: null };\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  LoadCache\x2C\x0d\n  ResolveCache\x2C\x0d\n};\x0d\n
code-source-info,0x2b5ae377d3e,86,0,3999,C0O0C4O3999,,
code-creation,JS,10,880313,0x2b5ae378596,299, node:internal/modules/esm/module_map:1:1,0x2b5ae377cb8,~
code-source-info,0x2b5ae378596,86,0,3999,C0O0C36O28C42O51C48O73C54O96C60O114C66O129C71O189C77O189C82O165C88O242C94O242C99O275C112O276C118O242C120O356C126O356C131O382C136O331C142O418C148O418C153O399C179O862C227O835C231O2920C274O3944C281O3966C287O3980C293O3959C298O3998,,
code-creation,Eval,10,880744,0x2b5ae37908e,5, node:internal/modules/esm/assert:1:1,0x2b5ae378e88,~
script-source,87,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n  ERR_IMPORT_ATTRIBUTE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import attributes types (the value of\x0d\n * `type` in `with { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an attribute type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' with { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import attributes.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAttributes(url\x2C format\x2C\x0d\n                            importAttributes = { __proto__: null }) {\x0d\n  const keys = ObjectKeys(importAttributes);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    if (keys[i] !== 'type') {\x0d\n      throw new ERR_IMPORT_ATTRIBUTE_UNSUPPORTED(keys[i]\x2C importAttributes[keys[i]]);\x0d\n    }\x0d\n  }\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore attributes for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import attributes object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAttributes\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAttributes.type);\x0d\n\x0d\n    case importAttributes.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAttributes.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAttributes\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAttributes.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAttributes\x2C\x0d\n};\x0d\n
code-source-info,0x2b5ae37908e,87,0,3993,C0O0C4O3993,,
code-creation,JS,10,881283,0x2b5ae37936e,210, node:internal/modules/esm/assert:1:1,0x2b5ae379008,~
code-source-info,0x2b5ae37936e,87,0,3993,C0O0C49O28C54O53C60O80C66O95C71O112C77O189C80O189C85O170C91O391C94O391C99O417C104O235C110O272C116O310C122O352C128O521C130O521C132O718C139O756C145O792C151O845C157O877C163O718C165O1312C168O1337C178O1312C183O1312C185O3922C192O3944C198O3968C204O3937C209O3992,,
tick,0x7ff7411676b1,881417,1,0x7ff73ff1c950,3,0x7ff740921370,0x7ff6c0b44126,0x7ff6c0b43ea1,0x2b5ae3785e3,0x7ff6c0b441eb,0x7ff6c0b43ea1,0x2b5ae3777ec,0x2b5ae37390d,0x2b5ae377327,0x2b5ae375cc1,0x2b5ae3756cd,0x2b5ae370c69,0x2b5ae3667d3,0x2b5ae366fde,0x2b5ae363653,0x5169d9c99d,0x3d485179d4f
code-creation,JS,10,881676,0x2b5ae3799be,9, node:internal/modules/esm/assert:44:3,0x2b5ae379160,~
code-source-info,0x2b5ae3799be,87,1369,1407,C0O1384C2O1388C4O1384C8O1407,,
code-creation,JS,10,881859,0x2b5ae37a276,53,ResolveCache node:internal/modules/esm/module_map:26:14,0x2b5ae377e10,~
code-source-info,0x2b5ae37a276,86,886,903,C3O892C27O892C52O902,,
code-creation,JS,10,881953,0x2b5ae37a896,22,newLoadCache node:internal/modules/esm/loader:44:22,0x2b5ae372380,~
code-source-info,0x2b5ae37a896,85,1276,1379,C0O1306C6O1306C11O1292C16O1360C21O1376,,
code-creation,JS,10,882019,0x2b5ae37a96e,43,LoadCache node:internal/modules/esm/module_map:90:14,0x2b5ae377fa0,~
code-source-info,0x2b5ae37a96e,86,2944,2961,C3O2950C27O2950C42O2960,,
code-creation,JS,10,882108,0x2b5ae37ab56,17,getTranslators node:internal/modules/esm/loader:53:24,0x2b5ae3723d0,~
code-source-info,0x2b5ae37ab56,85,1570,1672,C0O1602C6O1602C11O1586C16O1669,,
code-creation,Eval,10,883013,0x2b5ae37b6e6,5, node:internal/modules/esm/translators:1:1,0x2b5ae37b210,~
script-source,88,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\n/** @type {import('internal/util/types')} */\x0d\nlet _TYPES = null;\x0d\n/**\x0d\n * Lazily loads and returns the internal/util/types module.\x0d\n */\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) { return _TYPES; }\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\nconst assert = require('internal/assert');\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { dirname\x2C extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  loadBuiltinModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x2C\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning\x2C kEmptyObject\x2C setOwnProperty } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { internalCompileFunction } = require('internal/vm');\x0d\n\x0d\n/** @type {import('deps/cjs-module-lexer/lexer.js').parse} */\x0d\nlet cjsParse;\x0d\n/**\x0d\n * Initializes the CommonJS module lexer parser.\x0d\n * If WebAssembly is available\x2C it uses the optimized version from the dist folder.\x0d\n * Otherwise\x2C it falls back to the JavaScript version from the lexer folder.\x0d\n */\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    try {\x0d\n      await init();\x0d\n      cjsParse = parse;\x0d\n    } catch {\x0d\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\n/**\x0d\n * Asserts that the given body is a buffer source (either a string\x2C array buffer\x2C or typed array).\x0d\n * Throws an error if the body is not a buffer source.\x0d\n * @param {string | ArrayBufferView | ArrayBuffer} body - The body to check.\x0d\n * @param {boolean} allowString - Whether or not to allow a string as a valid buffer source.\x0d\n * @param {string} hookName - The name of the hook being called.\x0d\n * @throws {ERR_INVALID_RETURN_PROPERTY_VALUE} If the body is not a buffer source.\x0d\n */\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Converts a buffer or buffer-like object to a string.\x0d\n * @param {string | ArrayBuffer | ArrayBufferView} body - The buffer or buffer-like object to convert to a string.\x0d\n * @returns {string} The resulting string.\x0d\n */\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') { return body; }\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  const { TextDecoder } = require('internal/encoding');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Converts a URL to a file path if the URL protocol is 'file:'.\x0d\n * @param {string} url - The URL to convert.\x0d\n */\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Dynamically imports a module using the ESM loader.\x0d\n * @param {string} specifier - The module specifier to import.\x0d\n * @param {object} options - An object containing options for the import.\x0d\n * @param {string} options.url - The URL of the module requesting the import.\x0d\n * @param {Record<string\x2C string>} [attributes] - An object containing attributes for the import.\x0d\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} The imported module.\x0d\n */\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C attributes) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C attributes);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  const { registerModule } = require('internal/modules/esm/utils');\x0d\n  registerModule(module\x2C {\x0d\n    __proto__: null\x2C\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * Provide a more informative error for CommonJS imports.\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] The filename of the erroring module.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      containsModuleSyntax(content\x2C filename)) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Loads a CommonJS module via the ESM Loader sync CommonJS translator.\x0d\n * This translator creates its own version of the `require` function passed into CommonJS modules.\x0d\n * Any monkey patches applied to the CommonJS Loader will not affect this module.\x0d\n * Any `require` calls in this module will load all children in the same way.\x0d\n * @param {import('internal/modules/cjs/loader').Module} module - The module to load.\x0d\n * @param {string} source - The source code of the module.\x0d\n * @param {string} url - The URL of the module.\x0d\n * @param {string} filename - The filename of the module.\x0d\n */\x0d\nfunction loadCJSModule(module\x2C source\x2C url\x2C filename) {\x0d\n  let compiledWrapper;\x0d\n  async function importModuleDynamically(specifier\x2C _\x2C importAttributes) {\x0d\n    return asyncESM.esmLoader.import(specifier\x2C url\x2C importAttributes);\x0d\n  }\x0d\n  try {\x0d\n    compiledWrapper = internalCompileFunction(\x0d\n      source\x2C                         // code\x2C\x0d\n      filename\x2C                       // filename\x0d\n      0\x2C                              // lineOffset\x0d\n      0\x2C                              // columnOffset\x2C\x0d\n      undefined\x2C                      // cachedData\x0d\n      false\x2C                          // produceCachedData\x0d\n      undefined\x2C                      // parsingContext\x0d\n      undefined\x2C                      // contextExtensions\x0d\n      [                               // params\x0d\n        'exports'\x2C\x0d\n        'require'\x2C\x0d\n        'module'\x2C\x0d\n        '__filename'\x2C\x0d\n        '__dirname'\x2C\x0d\n      ]\x2C\x0d\n      Symbol(`cjs:${filename}`)\x2C      // hostDefinedOptionsId\x0d\n      importModuleDynamically\x2C        // importModuleDynamically\x0d\n    ).function;\x0d\n  } catch (err) {\x0d\n    enrichCJSError(err\x2C source\x2C filename);\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const __dirname = dirname(filename);\x0d\n  // eslint-disable-next-line func-name-matching\x2Cfunc-style\x0d\n  const requireFn = function require(specifier) {\x0d\n    let importAttributes = kEmptyObject;\x0d\n    if (!StringPrototypeStartsWith(specifier\x2C 'node:')) {\x0d\n      // TODO: do not depend on the monkey-patchable CJS loader here.\x0d\n      const path = CJSModule._resolveFilename(specifier\x2C module);\x0d\n      if (specifier !== path) {\x0d\n        switch (extname(path)) {\x0d\n          case '.json':\x0d\n            importAttributes = { __proto__: null\x2C type: 'json' };\x0d\n            break;\x0d\n          case '.node':\x0d\n            return CJSModule._load(specifier\x2C module);\x0d\n          default:\x0d\n            // fall through\x0d\n        }\x0d\n        specifier = `${pathToFileURL(path)}`;\x0d\n      }\x0d\n    }\x0d\n    const job = asyncESM.esmLoader.getModuleJobSync(specifier\x2C url\x2C importAttributes);\x0d\n    job.runSync();\x0d\n    return cjsCache.get(job.url).exports;\x0d\n  };\x0d\n  setOwnProperty(requireFn\x2C 'resolve'\x2C function resolve(specifier) {\x0d\n    if (!StringPrototypeStartsWith(specifier\x2C 'node:')) {\x0d\n      const path = CJSModule._resolveFilename(specifier\x2C module);\x0d\n      if (specifier !== path) {\x0d\n        specifier = `${pathToFileURL(path)}`;\x0d\n      }\x0d\n    }\x0d\n    const { url: resolvedURL } = asyncESM.esmLoader.resolveSync(specifier\x2C url\x2C kEmptyObject);\x0d\n    return StringPrototypeStartsWith(resolvedURL\x2C 'file://') ? fileURLToPath(resolvedURL) : resolvedURL;\x0d\n  });\x0d\n  setOwnProperty(requireFn\x2C 'main'\x2C process.mainModule);\x0d\n\x0d\n  ReflectApply(compiledWrapper\x2C module.exports\x2C\x0d\n               [module.exports\x2C requireFn\x2C module\x2C filename\x2C __dirname]);\x0d\n  setOwnProperty(module\x2C 'loaded'\x2C true);\x0d\n}\x0d\n\x0d\n// TODO: can we use a weak map instead?\x0d\nconst cjsCache = new SafeMap();\x0d\n/**\x0d\n * Creates a ModuleWrap object for a CommonJS module.\x0d\n * @param {string} url - The URL of the module.\x0d\n * @param {string} source - The source code of the module.\x0d\n * @param {boolean} isMain - Whether the module is the main module.\x0d\n * @param {typeof loadCJSModule} [loadCJS=loadCJSModule] - The function to load the CommonJS module.\x0d\n * @returns {ModuleWrap} The ModuleWrap object for the CommonJS module.\x0d\n */\x0d\nfunction createCJSModuleWrap(url\x2C source\x2C isMain\x2C loadCJS = loadCJSModule) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  const filename = StringPrototypeStartsWith(url\x2C 'file://') ? fileURLToPath(url) : url;\x0d\n  source = stringify(source);\x0d\n\x0d\n  const { exportNames\x2C module } = cjsPreparseModuleExports(filename\x2C source);\x0d\n  cjsCache.set(url\x2C module);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  if (isMain) {\x0d\n    setOwnProperty(process\x2C 'mainModule'\x2C module);\x0d\n  }\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    if (!module.loaded) {\x0d\n      loadCJS(module\x2C source\x2C url\x2C filename);\x0d\n    }\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      ({ exports } = module);\x0d\n    }\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default') {\x0d\n        continue;\x0d\n      }\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n\x0d\n}\x0d\n\x0d\n// Handle CommonJS modules referenced by `require` calls.\x0d\n// This translator function must be sync\x2C as `require` is sync.\x0d\ntranslators.set('require-commonjs'\x2C (url\x2C source\x2C isMain) => {\x0d\n  assert(cjsParse);\x0d\n\x0d\n  return createCJSModuleWrap(url\x2C source);\x0d\n});\x0d\n\x0d\n// Handle CommonJS modules referenced by `import` statements or expressions\x2C\x0d\n// or as the initial entry point when the ESM loader handles a CommonJS entry.\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  if (!cjsParse) {\x0d\n    await initCJSParse();\x0d\n  }\x0d\n\x0d\n  // For backward-compatibility\x2C it's possible to return a nullish value for\x0d\n  // CJS source associated with a file: URL. In this case\x2C the source is\x0d\n  // obtained by calling the monkey-patchable CJS loader.\x0d\n  const cjsLoader = source == null ? (module\x2C source\x2C url\x2C filename) => {\x0d\n    try {\x0d\n      assert(module === CJSModule._cache[filename]);\x0d\n      CJSModule._load(filename);\x0d\n    } catch (err) {\x0d\n      enrichCJSError(err\x2C source\x2C filename);\x0d\n      throw err;\x0d\n    }\x0d\n  } : loadCJSModule;\x0d\n\x0d\n  try {\x0d\n    // We still need to read the FS to detect the exports.\x0d\n    source ??= readFileSync(new URL(url)\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return createCJSModuleWrap(url\x2C source\x2C isMain\x2C cjsLoader);\x0d\n\x0d\n});\x0d\n\x0d\n/**\x0d\n * Pre-parses a CommonJS module's exports and re-exports.\x0d\n * @param {string} filename - The filename of the module.\x0d\n * @param {string} [source] - The source code of the module.\x0d\n */\x0d\nfunction cjsPreparseModuleExports(filename\x2C source) {\x0d\n  // TODO: Do we want to keep hitting the user mutable CJS loader here?\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached) {\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n    }\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    for (let i = 0; i < reexports.length; i++) {\x0d\n      const reexport = reexports[i];\x0d\n      let resolved;\x0d\n      try {\x0d\n        // TODO: this should be calling the `resolve` hook chain instead.\x0d\n        // Doing so would mean dropping support for CJS in the loader thread\x2C as\x0d\n        // this call needs to be sync from the perspective of the main thread\x2C\x0d\n        // which we can do via HooksProxy and Atomics\x2C but we can't do within\x0d\n        // the loaders thread. Until this is done\x2C the lexer will use the\x0d\n        // monkey-patchable CJS loader to get the path to the module file to\x0d\n        // load (which may or may not be aligned with the URL that the `resolve`\x0d\n        // hook have returned).\x0d\n        resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n      } catch {\x0d\n        continue;\x0d\n      }\x0d\n      // TODO: this should be calling the `load` hook chain and check if it returns\x0d\n      // `format: 'commonjs'` instead of relying on file extensions.\x0d\n      const ext = extname(resolved);\x0d\n      if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n      isAbsolute(resolved)) {\x0d\n        // TODO: this should be calling the `load` hook chain to get the source\x0d\n        // (and fallback to reading the FS only if the source is nullish).\x0d\n        const source = readFileSync(resolved\x2C 'utf-8');\x0d\n        const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved\x2C source);\x0d\n        for (const name of reexportNames) {\x0d\n          exportNames.add(name);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadBuiltinModule(id\x2C url);\x0d\n  cjsCache.set(url\x2C module);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\nconst isWindows = process.platform === 'win32';\x0d\ntranslators.set('json'\x2C function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  const shouldCheckAndPopulateCJSModuleCache =\x0d\n    // We want to involve the CJS loader cache only for `file:` URL with no search query and no hash.\x0d\n    pathname && !StringPrototypeIncludes(url\x2C '?') && !StringPrototypeIncludes(url\x2C '#');\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplaceAll(pathname\x2C '/'\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    // TODO: remove CJS loader from here as well.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x2C\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  cjsCache.set(url\x2C module);\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  const createDynamicModule = require(\x0d\n    'internal/modules/esm/create_dynamic_module');\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports)) {\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n    }\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x2b5ae37b6e6,88,0,19863,C0O0C4O19863,,
code-creation,JS,10,885160,0x2b5ae37bffe,796, node:internal/modules/esm/translators:1:1,0x2b5ae37b660,~
code-source-info,0x2b5ae37bffe
code-creation,JS,10,886069,0x2b5ae37da1e,30,setCustomizations node:internal/modules/esm/loader:187:20,0x2b5ae3725b0,~
code-source-info,0x2b5ae37da1e,85,5507,5741,C0O5531C5O5552C9O5575C13O5649C17O5632C23O5694C24O5722C29O5740,,
profiler,end
delete,MemoryChunk,0x3eba7380000
delete,MemoryChunk,0x199a9b40000
delete,MemoryChunk,0x2b1ebcc0000
delete,MemoryChunk,0x2f133e80000
delete,MemoryChunk,0x2c7b86c0000
delete,MemoryChunk,0x3254580000
delete,MemoryChunk,0xd4f9c0000
delete,MemoryChunk,0x32bd4e40000
delete,MemoryChunk,0x2b983100000
delete,MemoryChunk,0x3a6c8f80000
delete,MemoryChunk,0x34376140000
delete,MemoryChunk,0x2daef2c0000
delete,MemoryChunk,0x24e356c0000
delete,MemoryChunk,0x2a989a80000
delete,MemoryChunk,0x13616d00000
delete,MemoryChunk,0x9f12980000
delete,MemoryChunk,0x3d485140000
delete,MemoryChunk,0x5169d80000
delete,MemoryChunk,0x2b5ae340000
delete,MemoryChunk,0x7ff6c0b40000
delete,LargeObjectChunk,0x2fdc5380000
delete,MemoryChunk,0x2fdc5380000
delete,LargeObjectChunk,0x10cc9a00000
delete,MemoryChunk,0x10cc9a00000
